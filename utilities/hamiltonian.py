import numpy as np
import itertools
import sys,shutil
from   scipy import optimize as opt
from   pauli            import pauli_action
from   binary_functions import Bas2Int,Int2Bas,Opp2Str
from   numpy            import linalg as LA
from   scipy            import linalg as SciLA
from   tools            import print_state,fidelity,dgr,dpbc,dobc
from   pauli            import sigma_matrices
from ..src.inputs import get_h2_hamiltonian_file_path, get_h2_s2_hamiltonian_file_path, get_h2_bkt_s2_hamiltonian_file_path

# ------------------------------------------------- #

def Hpsi(H_,psi_):
# Apply Hamiltonian 'H_' to a state 'psi_' and return the resulting state 'phi'
 phi = np.zeros(psi_.shape,dtype=complex)
 for (A,h,imp,gmp) in H_:
  for m in np.where(np.abs(h)>1e-8)[0]:
   phi += h[m]*gmp[m,imp[m,:]]*psi_[imp[m,:]]
 return phi.copy()

def Hmat(H_):
# Construct the full Hamiltonian matrix in the computational basis
 N  = H_[0][2].shape[1]
 print(N)
 Hm = np.zeros((N,N),dtype=complex)
 for i in range(N):
  ei      = np.zeros(N,dtype=complex)
  ei[i]   = 1.0
  Hm[:,i] = Hpsi(H_,ei).copy()
 return Hm

def Hmoms(H_,psi_):
# Calculate the expectation value and variance of the Hamiltonian H wrt. psi_.
 phi_ = Hpsi(H_,psi_)
 ea   = np.vdot(psi_,phi_)  
 ev   = np.vdot(phi_,phi_)
 return np.real(ea),np.real(ev-ea**2)     # Expectation value, Variance

def print_Hamiltonian(H_):
# Print the sparse Hamiltonian in readable form in terms of Operators and Coefficients
 mu = 0
 for (A,h,imp,gmp) in H_:
  nact = len(A)
  print ("term ",mu)
  print ("active qubits ",A)
  print ("operators: ")
  for m in np.where(np.abs(h)>1e-8)[0]:
   print (Opp2Str(Int2Bas(m,4,nact)),h[m])
  mu += 1

def Hii(H_,i):
# Compute diagonal elements of hamiltonian matrix H_ for a index i.
 N     = H_[0][2].shape[1]
 nbit  = int(np.log2(N))
 hii = 0.0
#  print(f"Hamilt ndarray: {H_[0][1]}")
 xi  = Int2Bas(i,2,nbit)
 for (A,h,imp,gmp) in H_:
  # print(f"h: {h}")
  # print(f"A: {A}")
  nact = len(A)
  for m in np.where(np.abs(h)>1e-8)[0]:       #m: indices in H_ with non-zero coeffs
  #  print(f"m: {m}")
   sm   = Int2Bas(m,4,nact)
  #  print(f"sm: {sm}")
   smx  = [ sigma_matrices[xi[A[w]],xi[A[w]],sm[w]] for w in range(nact)]   #To obtain separate pauli matrices for different qubits within the domain.
  #  print(f"smx: {smx}")
   hii += np.real(h[m]*np.prod(smx))      #Multiply all the pauli matrices and with the real part of the hamiltonian with the corresponding element of the hamiltonian.
#  print(f"hii: {hii}")
 return hii

def process_hamiltonian(terms, num_qubits):
 """
    Convert Hamiltonian terms into a tuple representation.
    
    Args:
        terms (list): List of terms in the format [(coefficient, operator_string)].
        num_qubits (int): Total number of qubits in the system.
    
    Returns:
        list: Processed terms as [(coefficient, [Pauli operators for each qubit])].
 """
 processed_terms = []
 for coeff, operator_string in terms:
     # Start with identity operators for all qubits
     pauli_ops = ["I"] * num_qubits
     
     # Parse the operator string and update the relevant qubits
     for op in operator_string.split():
         pauli = op[0]  # Operator (X, Y, Z)
         qubit = int(op[1:])  # Qubit index
         pauli_ops[qubit] = pauli
     
     # Append the coefficient and the full operator list
     processed_terms.append((coeff, pauli_ops))
 return processed_terms

# ------------------------------------------------- #

# H2 without penalty, scbkt
def H2_molecule(line):
 # from O'Malley et al, https://arxiv.org/pdf/1512.06860.pdf
 nspin = 2
 V = np.loadtxt(get_h2_hamiltonian_file_path()).T
 V = V[:,line]
 H = []
 active = [0, 1]
 active = np.asarray(active)
 nact   = len(active)
 # -----
 h_alpha = np.zeros(4**nact)
# For Bas2Int([3,0],4), 3 refers to Z-operator on qubit-0 and I on qubit-1.
# Since, this is configuration in base-4, corresponding to Pauli operators.
 h_alpha[Bas2Int([0,0],4)] = V[1]   # 0     2.8489
 h_alpha[Bas2Int([3,0],4)] = V[2]   # 12    0.5678
 h_alpha[Bas2Int([0,3],4)] = V[3]   # 3     -1.4508
 h_alpha[Bas2Int([3,3],4)] = V[4]   # 15    0.6799
 h_alpha[Bas2Int([1,1],4)] = V[5]   # 5     0.0791
 h_alpha[Bas2Int([2,2],4)] = V[6]   # 10    0.0791

#  h_alpha[Bas2Int([0,0],4)] = -0.15114   # 0 - II
#  h_alpha[Bas2Int([1,0],4)] = -0.01965   # 4 - XI
#  h_alpha[Bas2Int([0,1],4)] = -0.01965   # 1 - IX
#  h_alpha[Bas2Int([1,1],4)] = -0.49979   # 5 - XX
#  h_alpha[Bas2Int([3,3],4)] = -0.21007   # 15 - ZZ
#  h_alpha[Bas2Int([2,2],4)] = -0.50000   # 10 - YY

 # -----
 imap,gmap = pauli_action(active,nspin)
 H.append((active,h_alpha,imap,gmap))
 return H

# H2 with penalty, scbkt
def H2_molecule_s2(line):
#  hamiltonian_terms = [
#   (-0.3922704524+0j, ""),
#   (-0.0117321631+0j, "X0"),
#   (-0.249921014+0j, "X0 X1"),
#   (0.0494512294+0j, "Z0 Z1"),
#   (-0.0117321631+0j, "X1"),
#   (-0.25+0j, "Y0 Y1")
#  ]
 print(line)
 V = np.loadtxt(get_h2_s2_hamiltonian_file_path()).T
 V = V[:,line]
 nspin = 2
 H = []
 active = [0,1]
 active = np.asarray(active)
 nact   = len(active)
 h_alpha = np.zeros(4**nact)

# R -> 2.7A
 h_alpha[Bas2Int([0,0],4)] = V[0]   # 0 - II
 h_alpha[Bas2Int([1,0],4)] = V[1]   # 4 - XI
 h_alpha[Bas2Int([1,1],4)] = V[2]   # 5 - XX
 h_alpha[Bas2Int([3,3],4)] = V[3]   # 15 - ZZ
 h_alpha[Bas2Int([0,1],4)] = V[4]   # 1 - IX
 h_alpha[Bas2Int([2,2],4)] = V[5]   # 10 - YY

# Adding s^2 to the original hamiltonian used in Motta's code (R-2.7A)
#  h_alpha[Bas2Int([0,0],4)] = 0.1896   # 0
#  h_alpha[Bas2Int([3,0],4)] = 0.1026   # 12
#  h_alpha[Bas2Int([0,3],4)] = 0.0632   # 3
#  h_alpha[Bas2Int([3,3],4)] = -0.1594   # 15
#  h_alpha[Bas2Int([1,1],4)] = -0.3550   # 5
#  h_alpha[Bas2Int([2,2],4)] = -0.3550   # 10

 imap,gmap = pauli_action(active,nspin)
 H.append((active,h_alpha,imap,gmap))
 return H

# H2 with penalty, bkt
def H2_molecule_bkt_s2(line):
    # Define the Hamiltonian terms

    pauli_operators = [
     "",
     "X0 X1 X2",
     "X0 X1 X2 X3",
     "X0 Y1 Y2",
     "X0 Z1 X2",
     "X0 Z1 X2 Z3",
     "Y0 X1 Y2",
     "Y0 X1 Y2 Z3",
     "Y0 Y1 X2",
     "Y0 Z1 Y2",
     "Y0 Z1 Y2 Z3",
     "Z0",
     "Z0 X1 Z2",
     "Z0 X1 Z2 Z3",
     "Z0 X1 Z3",
     "Z0 Z1",
     "Z0 Z1 Z2",
     "Z0 Z1 Z2 Z3",
     "Z0 Z2",
     "Z0 Z2 Z3",
     "X1",
     "X1 Z2",
     "X1 Z3",
     "Z1",
     "Z1 Z2 Z3",
     "Z1 Z3",
     "Z2",
     "X0 X2",
     "X0 X2 Z3",
     "Y0 Y2",
     "Y0 Y2 Z3"
    ]
    coeffs = np.loadtxt(get_h2_bkt_s2_hamiltonian_file_path(), dtype=complex, delimiter=" ")

    if line<0 or line>(len(coeffs)-1):
        raise ValueError("Invalid line number.")

    if len(pauli_operators) != len(coeffs[line]):
        raise ValueError("Number of values do not match.")
    
    hamiltonian_terms = list(zip(coeffs[line], pauli_operators))
    # Number of qubits
    num_qubits = 4 
    # Process the Hamiltonian
    processed_hamiltonian = process_hamiltonian(hamiltonian_terms, num_qubits)  
    # print(processed_hamiltonian)
    # Print the result
    # for term in processed_hamiltonian:
    #     print(term)   
    pauli_to_index = {"I": 0, "X": 1, "Y": 2, "Z": 3}   
    # Initialize a zero array for the coefficients (4^n terms)
    dim = 4**num_qubits
    coefficients = np.zeros(dim, dtype=complex)

    # Define the Hamiltonian terms
    terms = processed_hamiltonian

    # Populate the coefficients array
    for coeff, pauli_ops in terms:
        # Default: identity operators for all qubits
        full_ops = ["I"] * num_qubits
        for i, op in enumerate(pauli_ops):
         full_ops[i] = op      
        # Compute the index for the term
        index = sum(pauli_to_index[op] * (4**(num_qubits - i - 1)) for i, op in enumerate(full_ops))  
        # Assign the coefficient to the appropriate index
        coefficients[index] = coeff    
    h_alpha = coefficients.real
    # print(f"H2_bkt molecule H_alpha: {h_alpha}")
    # print(f"Length of H_alpha: {len(h_alpha)}") 

    nspin = 4
    H = []
    active = [0,1,2,3]
    active = np.asarray(active)
    nact   = len(active)
    imap,gmap = pauli_action(active,nspin)
    print(f"Pauli action-imap_shape: {imap.shape}") 
    H.append((active,h_alpha,imap,gmap))

    return H


# P4 without penalty, scbkt
def P4_molecule():
    # # alpha 2.0
    # hamiltonian_terms = [
    #   (-0.3709108589500001, ""),
    #   (0.019740609500000002, "X0 X1 X3 X4"),
    #   (0.019740609500000002, "X0 X1 Y3 Y4 Z5"),
    #   (-0.0199020831, "X0 X1 Z3 Y4 Y5"),
    #   (-0.0199020831, "X0 X1 X4 X5"),
    #   (0.03406610945, "X0 Y1 Y2 X3 Y4 Y5"),
    #   (-0.03406610945, "X0 Y1 Y2 Y3 Y4 X5"),
    #   (-0.0337612592, "X0 Y1 Y2 Z3 X4"),
    #   (0.0337612592, "X0 Y1 Y2 X4 Z5"),
    #   (-0.03406610945, "X0 Z1 X3"),
    #   (0.03406610945, "X0 Z1 X3 Z4"),
    #   (0.0337612592, "X0 Z1 Z4 X5"),
    #   (-0.0337612592, "X0 Z1 X5"),
    #   (0.027718352199999997, "X0 X2"),
    #   (0.03406610945, "X0 X3"),
    #   (-0.03406610945, "X0 X3 Z4"),
    #   (-0.0337612592, "X0 Z4 X5"),
    #   (0.0337612592, "X0 X5"),
    #   (-0.03406610945, "Y0 Y1 X2 X3 Y4 Y5"),
    #   (0.03406610945, "Y0 Y1 X2 Y3 Y4 X5"),
    #   (0.0337612592, "Y0 Y1 X2 Z3 X4"),
    #   (-0.0337612592, "Y0 Y1 X2 X4 Z5"),
    #   (0.019740609500000002, "Y0 Y1 Z2 X3 X4"),
    #   (0.019740609500000002, "Y0 Y1 Z2 Y3 Y4 Z5"),
    #   (-0.0199020831, "Y0 Y1 Z2 Z3 Y4 Y5"),
    #   (-0.0199020831, "Y0 Y1 Z2 X4 X5"),
    #   (0.027718352200000004, "Y0 Z1 Y2"),
    #   (0.2241531948000004, "Z0"),
    #   (-0.0337612592, "Z0 X1 X3 Y4 Y5"),
    #   (0.0337612592, "Z0 X1 Y3 Y4 X5"),
    #   (0.03709430705, "Z0 X1 Z3 X4"),
    #   (-0.03709430705, "Z0 X1 X4 Z5"),
    #   (-0.0199020831, "Z0 Y1 Y2 X3 X4"),
    #   (-0.0199020831, "Z0 Y1 Y2 Y3 Y4 Z5"),
    #   (0.02007680635, "Z0 Y1 Y2 Z3 Y4 Y5"),
    #   (0.02007680635, "Z0 Y1 Y2 X4 X5"),
    #   (-0.0038839750499999603, "Z0 Z1"),
    #   (0.21081273514999999, "Z0 Z1 Z2"),
    #   (0.12613611505, "Z0 Z1 Z3"),
    #   (0.12834316575, "Z0 Z1 Z3 Z4"),
    #   (0.12907256025, "Z0 Z1 Z4 Z5"),
    #   (0.12340606295, "Z0 Z1 Z5"),
    #   (0.1840482588, "Z0 Z2"),
    #   (0.12969344345, "Z0 Z3"),
    #   (0.12613611505, "Z0 Z3 Z4"),
    #   (0.12722408805, "Z0 Z4 Z5"),
    #   (0.12613611505, "Z0 Z5"),
    #   (-0.0199020831, "X1 X2 X3 X4"),
    #   (-0.0199020831, "X1 X2 Y3 Y4 Z5"),
    #   (0.02007680635, "X1 X2 Z3 Y4 Y5"),
    #   (0.02007680635, "X1 X2 X4 X5"),
    #   (0.0337612592, "X1 Z2 X3 Y4 Y5"),
    #   (-0.0337612592, "X1 Z2 Y3 Y4 X5"),
    #   (-0.03709430705, "X1 Z2 Z3 X4"),
    #   (0.03709430705, "X1 Z2 X4 Z5"),
    #   (0.1840482588, "Z1"),
    #   (-0.0337612592, "Z1 X2 X3"),
    #   (0.0337612592, "Z1 X2 X3 Z4"),
    #   (0.03709430705, "Z1 X2 Z4 X5"),
    #   (-0.03709430705, "Z1 X2 X5"),
    #   (-0.27788003180000004, "Z1 Z2"),
    #   (0.12722408805, "Z1 Z2 Z3"),
    #   (0.12907256025, "Z1 Z2 Z3 Z4"),
    #   (0.1347139307, "Z1 Z2 Z4 Z5"),
    #   (0.12907256025, "Z1 Z2 Z5"),
    #   (0.0337612592, "X2 X3"),
    #   (-0.0337612592, "X2 X3 Z4"),
    #   (-0.03709430705, "X2 Z4 X5"),
    #   (0.03709430705, "X2 X5"),
    #   (-0.0038839750499998216, "Z2"),
    #   (0.12613611505, "Z2 Z3"),
    #   (0.12340606295, "Z2 Z3 Z4"),
    #   (0.12907256025, "Z2 Z4 Z5"),
    #   (0.12834316575, "Z2 Z5"),
    #   (0.027718352199999997, "X3 X5"),
    #   (0.027718352200000004, "Y3 Z4 Y5"),
    #   (0.2241531948000004, "Z3"),
    #   (-0.0038839750499999603, "Z3 Z4"),
    #   (0.21081273514999999, "Z3 Z4 Z5"),
    #   (0.1840482588, "Z3 Z5"),
    #   (0.1840482588, "Z4"),
    #   (-0.2778800318000001, "Z4 Z5"),
    #   (-0.00388397504999978, "Z5")
    # ]

    # # alpha 2.01
    # hamiltonian_terms = [
    #   (-0.3761741327999991, ""),
    #   (0.019756822000000004, "X0 X1 X3 X4"),
    #   (0.019756822000000004, "X0 X1 Y3 Y4 Z5"),
    #   (-0.01992322395, "X0 X1 Z3 Y4 Y5"),
    #   (-0.01992322395, "X0 X1 X4 X5"),
    #   (0.03398468100000001, "X0 Y1 Y2 X3 Y4 Y5"),
    #   (-0.03398468100000001, "X0 Y1 Y2 Y3 Y4 X5"),
    #   (-0.03370074, "X0 Y1 Y2 Z3 X4"),
    #   (0.03370074, "X0 Y1 Y2 X4 Z5"),
    #   (-0.0002702458999999935, "X0 Z1 X2"),
    #   (-0.03413528925, "X0 Z1 X3"),
    #   (0.03413528925, "X0 Z1 X3 Z4"),
    #   (0.03383586295, "X0 Z1 Z4 X5"),
    #   (-0.03383586295, "X0 Z1 X5"),
    #   (0.027825277999999988, "X0 X2"),
    #   (0.03413528925, "X0 X3"),
    #   (-0.03413528925, "X0 X3 Z4"),
    #   (-0.03383586295, "X0 Z4 X5"),
    #   (0.03383586295, "X0 X5"),
    #   (-0.03398468100000001, "Y0 Y1 X2 X3 Y4 Y5"),
    #   (0.03398468100000001, "Y0 Y1 X2 Y3 Y4 X5"),
    #   (0.03370074, "Y0 Y1 X2 Z3 X4"),
    #   (-0.03370074, "Y0 Y1 X2 X4 Z5"),
    #   (0.019756822000000004, "Y0 Y1 Z2 X3 X4"),
    #   (0.019756822000000004, "Y0 Y1 Z2 Y3 Y4 Z5"),
    #   (-0.01992322395, "Y0 Y1 Z2 Z3 Y4 Y5"),
    #   (-0.01992322395, "Y0 Y1 Z2 X4 X5"),
    #   (0.02755503210000001, "Y0 Z1 Y2"),
    #   (0.22353908220000024, "Z0"),
    #   (-0.03370074, "Z0 X1 X3 Y4 Y5"),
    #   (0.03370074, "Z0 X1 Y3 Y4 X5"),
    #   (0.0370275294, "Z0 X1 Z3 X4"),
    #   (-0.0370275294, "Z0 X1 X4 Z5"),
    #   (-0.01992322395, "Z0 Y1 Y2 X3 X4"),
    #   (-0.01992322395, "Z0 Y1 Y2 Y3 Y4 Z5"),
    #   (0.02010295055, "Z0 Y1 Y2 Z3 Y4 Y5"),
    #   (0.02010295055, "Z0 Y1 Y2 X4 X5"),
    #   (-0.0027174929499999, "Z0 Z1"),
    #   (0.21049892705, "Z0 Z1 Z2"),
    #   (0.1260088106, "Z0 Z1 Z3"),
    #   (0.12821935405, "Z0 Z1 Z3 Z4"),
    #   (0.12893219135, "Z0 Z1 Z4 Z5"),
    #   (0.12328281015, "Z0 Z1 Z5"),
    #   (0.18389394189999997, "Z0 Z2"),
    #   (0.1295315458, "Z0 Z3"),
    #   (0.1260088106, "Z0 Z3 Z4"),
    #   (0.12707588945, "Z0 Z4 Z5"),
    #   (0.12597396095, "Z0 Z5"),
    #   (-0.01992322395, "X1 X2 X3 X4"),
    #   (-0.01992322395, "X1 X2 Y3 Y4 Z5"),
    #   (0.02010295055, "X1 X2 Z3 Y4 Y5"),
    #   (0.02010295055, "X1 X2 X4 X5"),
    #   (0.03370074, "X1 Z2 X3 Y4 Y5"),
    #   (-0.03370074, "X1 Z2 Y3 Y4 X5"),
    #   (-0.0370275294, "X1 Z2 Z3 X4"),
    #   (0.0370275294, "X1 Z2 X4 Z5"),
    #   (0.1836211194, "Z1"),
    #   (-0.03383586295, "Z1 X2 X3"),
    #   (0.03383586295, "Z1 X2 X3 Z4"),
    #   (0.0371773442, "Z1 X2 Z4 X5"),
    #   (-0.0371773442, "Z1 X2 X5"),
    #   (-0.27637659130000014, "Z1 Z2"),
    #   (0.12707588945, "Z1 Z2 Z3"),
    #   (0.12893219135, "Z1 Z2 Z3 Z4"),
    #   (0.1345530627, "Z1 Z2 Z4 Z5"),
    #   (0.12892494225, "Z1 Z2 Z5"),
    #   (0.03383586295, "X2 X3"),
    #   (-0.03383586295, "X2 X3 Z4"),
    #   (-0.0371773442, "X2 Z4 X5"),
    #   (0.0371773442, "X2 X5"),
    #   (-0.004623180700000021, "Z2"),
    #   (0.12597396095, "Z2 Z3"),
    #   (0.12328281015, "Z2 Z3 Z4"),
    #   (0.12892494225, "Z2 Z4 Z5"),
    #   (0.12816745455, "Z2 Z5"),
    #   (-0.0002702458999999935, "X3 Z4 X5"),
    #   (0.027825277999999988, "X3 X5"),
    #   (0.02755503210000001, "Y3 Z4 Y5"),
    #   (0.22353908220000024, "Z3"),
    #   (-0.0027174929499999, "Z3 Z4"),
    #   (0.21049892705, "Z3 Z4 Z5"),
    #   (0.18389394189999997, "Z3 Z5"),
    #   (0.1836211194, "Z4"),
    #   (-0.27637659130000014, "Z4 Z5"),
    #   (-0.004623180699999979, "Z5")
    # ]

    # # alpha 2.02
    # hamiltonian_terms = [
    #   (-0.38135944459999754, ""),
    #   (0.019773053449999998, "X0 X1 X3 X4"),
    #   (0.019773053449999998, "X0 X1 Y3 Y4 Z5"),
    #   (-0.019944357450000002, "X0 X1 Z3 Y4 Y5"),
    #   (-0.019944357450000002, "X0 X1 X4 X5"),
    #   (0.0339036892, "X0 Y1 Y2 X3 Y4 Y5"),
    #   (-0.0339036892, "X0 Y1 Y2 Y3 Y4 X5"),
    #   (-0.0336405797, "X0 Y1 Y2 Z3 X4"),
    #   (0.0336405797, "X0 Y1 Y2 X4 Z5"),
    #   (-0.0005399620999999959, "X0 Z1 X2"),
    #   (-0.03420457934999999, "X0 Z1 X3"),
    #   (0.03420457934999999, "X0 Z1 X3 Z4"),
    #   (0.03391056074999999, "X0 Z1 Z4 X5"),
    #   (-0.03391056074999999, "X0 Z1 X5"),
    #   (0.027932406600000004, "X0 X2"),
    #   (0.03420457934999999, "X0 X3"),
    #   (-0.03420457934999999, "X0 X3 Z4"),
    #   (-0.03391056074999999, "X0 Z4 X5"),
    #   (0.03391056074999999, "X0 X5"),
    #   (-0.0339036892, "Y0 Y1 X2 X3 Y4 Y5"),
    #   (0.0339036892, "Y0 Y1 X2 Y3 Y4 X5"),
    #   (0.0336405797, "Y0 Y1 X2 Z3 X4"),
    #   (-0.0336405797, "Y0 Y1 X2 X4 Z5"),
    #   (0.019773053449999998, "Y0 Y1 Z2 X3 X4"),
    #   (0.019773053449999998, "Y0 Y1 Z2 Y3 Y4 Z5"),
    #   (-0.019944357450000002, "Y0 Y1 Z2 Z3 Y4 Y5"),
    #   (-0.019944357450000002, "Y0 Y1 Z2 X4 X5"),
    #   (0.0273924445, "Y0 Z1 Y2"),
    #   (0.22292833155000014, "Z0"),
    #   (-0.0336405797, "Z0 X1 X3 Y4 Y5"),
    #   (0.0336405797, "Z0 X1 Y3 Y4 X5"),
    #   (0.03696102185, "Z0 X1 Z3 X4"),
    #   (-0.03696102185, "Z0 X1 X4 Z5"),
    #   (-0.019944357450000002, "Z0 Y1 Y2 X3 X4"),
    #   (-0.019944357450000002, "Z0 Y1 Y2 Y3 Y4 Z5"),
    #   (0.0201290643, "Z0 Y1 Y2 Z3 Y4 Y5"),
    #   (0.0201290643, "Z0 Y1 Y2 X4 X5"),
    #   (-0.0015609790999996653, "Z0 Z1"),
    #   (0.2101859299, "Z0 Z1 Z2"),
    #   (0.12588176, "Z0 Z1 Z3"),
    #   (0.1280957116, "Z0 Z1 Z3 Z4"),
    #   (0.128792115, "Z0 Z1 Z4 Z5"),
    #   (0.1231599497, "Z0 Z1 Z5"),
    #   (0.1837396557, "Z0 Z2"),
    #   (0.12936988705, "Z0 Z3"),
    #   (0.12588176, "Z0 Z3 Z4"),
    #   (0.12692809795, "Z0 Z4 Z5"),
    #   (0.12581225175, "Z0 Z5"),
    #   (-0.019944357450000002, "X1 X2 X3 X4"),
    #   (-0.019944357450000002, "X1 X2 Y3 Y4 Z5"),
    #   (0.0201290643, "X1 X2 Z3 Y4 Y5"),
    #   (0.0201290643, "X1 X2 X4 X5"),
    #   (0.0336405797, "X1 Z2 X3 Y4 Y5"),
    #   (-0.0336405797, "X1 Z2 Y3 Y4 X5"),
    #   (-0.03696102185, "X1 Z2 Z3 X4"),
    #   (0.03696102185, "X1 Z2 X4 Z5"),
    #   (0.1831946136, "Z1"),
    #   (-0.03391056074999999, "Z1 X2 X3"),
    #   (0.03391056074999999, "Z1 X2 X3 Z4"),
    #   (0.0372604583, "Z1 X2 Z4 X5"),
    #   (-0.0372604583, "Z1 X2 X5"),
    #   (-0.27488750869999995, "Z1 Z2"),
    #   (0.12692809795, "Z1 Z2 Z3"),
    #   (0.128792115, "Z1 Z2 Z3 Z4"),
    #   (0.13439262535, "Z1 Z2 Z4 Z5"),
    #   (0.12877789125, "Z1 Z2 Z5"),
    #   (0.03391056074999999, "X2 X3"),
    #   (-0.03391056074999999, "X2 X3 Z4"),
    #   (-0.0372604583, "X2 Z4 X5"),
    #   (0.0372604583, "X2 X5"),
    #   (-0.0053581680499999035, "Z2"),
    #   (0.12581225175, "Z2 Z3"),
    #   (0.1231599497, "Z2 Z3 Z4"),
    #   (0.12877789125, "Z2 Z4 Z5"),
    #   (0.127992479, "Z2 Z5"),
    #   (-0.0005399620999999959, "X3 Z4 X5"),
    #   (0.027932406600000004, "X3 X5"),
    #   (0.0273924445, "Y3 Z4 Y5"),
    #   (0.22292833155000014, "Z3"),
    #   (-0.0015609790999998319, "Z3 Z4"),
    #   (0.2101859299, "Z3 Z4 Z5"),
    #   (0.1837396557, "Z3 Z5"),
    #   (0.1831946136, "Z4"),
    #   (-0.27488750869999995, "Z4 Z5"),
    #   (-0.005358168049999917, "Z5")
    # ]

    # alpha 1.99
    hamiltonian_terms = [
      (-0.36556873319999933, ""),
      (0.0197244159, "X0 X1 X3 X4"),
      (0.0197244159, "X0 X1 Y3 Y4 Z5"),
      (-0.019880936250000005, "X0 X1 Z3 Y4 Y5"),
      (-0.019880936250000005, "X0 X1 X4 X5"),
      (0.03399704215, "X0 Y1 Y2 X3 Y4 Y5"),
      (-0.03399704215, "X0 Y1 Y2 Y3 Y4 X5"),
      (-0.0336867515, "X0 Y1 Y2 Z3 X4"),
      (0.0336867515, "X0 Y1 Y2 X4 Z5"),
      (-0.00027077359999999606, "X0 Z1 X2"),
      (-0.03414797185000001, "X0 Z1 X3"),
      (0.03414797185000001, "X0 Z1 X3 Z4"),
      (0.0338221383, "X0 Z1 Z4 X5"),
      (-0.0338221383, "X0 Z1 X5"),
      (0.027882404099999994, "X0 X2"),
      (0.03414797185000001, "X0 X3"),
      (-0.03414797185000001, "X0 X3 Z4"),
      (-0.0338221383, "X0 Z4 X5"),
      (0.0338221383, "X0 X5"),
      (-0.03399704215, "Y0 Y1 X2 X3 Y4 Y5"),
      (0.03399704215, "Y0 Y1 X2 Y3 Y4 X5"),
      (0.0336867515, "Y0 Y1 X2 Z3 X4"),
      (-0.0336867515, "Y0 Y1 X2 X4 Z5"),
      (0.0197244159, "Y0 Y1 Z2 X3 X4"),
      (0.0197244159, "Y0 Y1 Z2 Y3 Y4 Z5"),
      (-0.019880936250000005, "Y0 Y1 Z2 Z3 Y4 Y5"),
      (-0.019880936250000005, "Y0 Y1 Z2 X4 X5"),
      (0.02761163049999999, "Y0 Z1 Y2"),
      (0.22477137684999965, "Z0"),
      (-0.0336867515, "Z0 X1 X3 Y4 Y5"),
      (0.0336867515, "Z0 X1 Y3 Y4 X5"),
      (0.0370113506, "Z0 X1 Z3 X4"),
      (-0.0370113506, "Z0 X1 X4 Z5"),
      (-0.019880936250000005, "Z0 Y1 Y2 X3 X4"),
      (-0.019880936250000005, "Z0 Y1 Y2 Y3 Y4 Z5"),
      (0.0200506329, "Z0 Y1 Y2 Z3 Y4 Y5"),
      (0.0200506329, "Z0 Y1 Y2 X4 X5"),
      (-0.00313995844999998, "Z0 Z1"),
      (0.2111273528, "Z0 Z1 Z2"),
      (0.1262987084, "Z0 Z1 Z3"),
      (0.1285196051, "Z0 Z1 Z3 Z4"),
      (0.1292207493, "Z0 Z1 Z4 Z5"),
      (0.1235297074, "Z0 Z1 Z5"),
      (0.18447602805000002, "Z0 Z2"),
      (0.12985557505, "Z0 Z3"),
      (0.1262987084, "Z0 Z3 Z4"),
      (0.1273726942, "Z0 Z4 Z5"),
      (0.1262636715, "Z0 Z5"),
      (-0.019880936250000005, "X1 X2 X3 X4"),
      (-0.019880936250000005, "X1 X2 Y3 Y4 Z5"),
      (0.0200506329, "X1 X2 Z3 Y4 Y5"),
      (0.0200506329, "X1 X2 X4 X5"),
      (0.0336867515, "X1 Z2 X3 Y4 Y5"),
      (-0.0336867515, "X1 Z2 Y3 Y4 X5"),
      (-0.0370113506, "X1 Z2 Z3 X4"),
      (0.0370113506, "X1 Z2 X4 Z5"),
      (0.1842026067, "Z1"),
      (-0.0338221383, "Z1 X2 X3"),
      (0.0338221383, "Z1 X2 X3 Z4"),
      (0.0371613562, "Z1 X2 Z4 X5"),
      (-0.0371613562, "Z1 X2 X5"),
      (-0.27939958054999997, "Z1 Z2"),
      (0.1273726942, "Z1 Z2 Z3"),
      (0.1292207493, "Z1 Z2 Z3 Z4"),
      (0.1348752153, "Z1 Z2 Z4 Z5"),
      (0.12921322635, "Z1 Z2 Z5"),
      (0.0338221383, "X2 X3"),
      (-0.0338221383, "X2 X3 Z4"),
      (-0.0371613562, "X2 Z4 X5"),
      (0.0371613562, "X2 X5"),
      (-0.00506004799999997, "Z2"),
      (0.1262636715, "Z2 Z3"),
      (0.1235297074, "Z2 Z3 Z4"),
      (0.12921322635, "Z2 Z4 Z5"),
      (0.12846714655, "Z2 Z5"),
      (-0.00027077359999999606, "X3 Z4 X5"),
      (0.027882404099999994, "X3 X5"),
      (0.02761163049999999, "Y3 Z4 Y5"),
      (0.22477137684999965, "Z3"),
      (-0.0031399584500000494, "Z3 Z4"),
      (0.2111273528, "Z3 Z4 Z5"),
      (0.18447602805000002, "Z3 Z5"),
      (0.1842026067, "Z4"),
      (-0.27939958054999997, "Z4 Z5"),
      (-0.005060047999999984, "Z5")
    ]

    # # alpha 2.05
    # hamiltonian_terms = [
    #   (-0.39647161564999966, ""),
    #   (0.01982185605, "X0 X1 X3 X4"),
    #   (0.01982185605, "X0 X1 Y3 Y4 Z5"),
    #   (-0.02000770565, "X0 X1 Z3 Y4 Y5"),
    #   (-0.02000770565, "X0 X1 X4 X5"),
    #   (0.0336633616, "X0 Y1 Y2 X3 Y4 Y5"),
    #   (-0.0336633616, "X0 Y1 Y2 Y3 Y4 X5"),
    #   (-0.03346224255, "X0 Y1 Y2 Z3 X4"),
    #   (0.03346224255, "X0 Y1 Y2 X4 Z5"),
    #   (-0.0013459006999999995, "X0 Z1 X2"),
    #   (-0.034413092, "X0 Z1 X3"),
    #   (0.034413092, "X0 Z1 X3 Z4"),
    #   (0.0341351929, "X0 Z1 Z4 X5"),
    #   (-0.0341351929, "X0 Z1 X5"),
    #   (0.028254974500000002, "X0 X2"),
    #   (0.034413092, "X0 X3"),
    #   (-0.034413092, "X0 X3 Z4"),
    #   (-0.0341351929, "X0 Z4 X5"),
    #   (0.0341351929, "X0 X5"),
    #   (-0.0336633616, "Y0 Y1 X2 X3 Y4 Y5"),
    #   (0.0336633616, "Y0 Y1 X2 Y3 Y4 X5"),
    #   (0.03346224255, "Y0 Y1 X2 Z3 X4"),
    #   (-0.03346224255, "Y0 Y1 X2 X4 Z5"),
    #   (0.01982185605, "Y0 Y1 Z2 X3 X4"),
    #   (0.01982185605, "Y0 Y1 Z2 Y3 Y4 Z5"),
    #   (-0.02000770565, "Y0 Y1 Z2 Z3 Y4 Y5"),
    #   (-0.02000770565, "Y0 Y1 Z2 X4 X5"),
    #   (0.026909073799999995, "Y0 Z1 Y2"),
    #   (0.2211181465499999, "Z0"),
    #   (-0.03346224255, "Z0 X1 X3 Y4 Y5"),
    #   (0.03346224255, "Z0 X1 Y3 Y4 X5"),
    #   (0.0367631211, "Z0 X1 Z3 X4"),
    #   (-0.0367631211, "Z0 X1 X4 Z5"),
    #   (-0.02000770565, "Z0 Y1 Y2 X3 X4"),
    #   (-0.02000770565, "Z0 Y1 Y2 Y3 Y4 Z5"),
    #   (0.020207206849999996, "Z0 Y1 Y2 Z3 Y4 Y5"),
    #   (0.020207206849999996, "Z0 Y1 Y2 X4 X5"),
    #   (0.001848148050000109, "Z0 Z1"),
    #   (0.2092518447, "Z0 Z1 Z2"),
    #   (0.1255021537, "Z0 Z1 Z3"),
    #   (0.1277258301, "Z0 Z1 Z3 Z4"),
    #   (0.1283736589, "Z0 Z1 Z4 Z5"),
    #   (0.1227937223, "Z0 Z1 Z5"),
    #   (0.18327703635, "Z0 Z2"),
    #   (0.12888642055, "Z0 Z3"),
    #   (0.1255021537, "Z0 Z3 Z4"),
    #   (0.1264871853, "Z0 Z4 Z5"),
    #   (0.12532986015, "Z0 Z5"),
    #   (-0.02000770565, "X1 X2 X3 X4"),
    #   (-0.02000770565, "X1 X2 Y3 Y4 Z5"),
    #   (0.020207206849999996, "X1 X2 Z3 Y4 Y5"),
    #   (0.020207206849999996, "X1 X2 X4 X5"),
    #   (0.03346224255, "X1 Z2 X3 Y4 Y5"),
    #   (-0.03346224255, "X1 Z2 Y3 Y4 X5"),
    #   (-0.0367631211, "X1 Z2 Z3 X4"),
    #   (0.0367631211, "X1 Z2 X4 Z5"),
    #   (0.18191897565, "Z1"),
    #   (-0.0341351929, "Z1 X2 X3"),
    #   (0.0341351929, "Z1 X2 X3 Z4"),
    #   (0.037510236, "Z1 X2 Z4 X5"),
    #   (-0.037510236, "Z1 X2 X5"),
    #   (-0.27049688115, "Z1 Z2"),
    #   (0.1264871853, "Z1 Z2 Z3"),
    #   (0.1283736589, "Z1 Z2 Z3 Z4"),
    #   (0.1339138368, "Z1 Z2 Z4 Z5"),
    #   (0.12834014995, "Z1 Z2 Z5"),
    #   (0.0341351929, "X2 X3"),
    #   (-0.0341351929, "X2 X3 Z4"),
    #   (-0.037510236, "X2 Z4 X5"),
    #   (0.037510236, "X2 X5"),
    #   (-0.007540442699999761, "Z2"),
    #   (0.12532986015, "Z2 Z3"),
    #   (0.1227937223, "Z2 Z3 Z4"),
    #   (0.12834014995, "Z2 Z4 Z5"),
    #   (0.1274720209, "Z2 Z5"),
    #   (-0.0013459006999999995, "X3 Z4 X5"),
    #   (0.028254974500000002, "X3 X5"),
    #   (0.026909073799999995, "Y3 Z4 Y5"),
    #   (0.22111814654999995, "Z3"),
    #   (0.001848148050000123, "Z3 Z4"),
    #   (0.2092518447, "Z3 Z4 Z5"),
    #   (0.18327703635, "Z3 Z5"),
    #   (0.18191897565, "Z4"),
    #   (-0.2704968811499999, "Z4 Z5"),
    #   (-0.00754044269999983, "Z5")
    # ]
    num_qubits = 6 
    # Process the Hamiltonian
    processed_hamiltonian = process_hamiltonian(hamiltonian_terms, num_qubits)  
    # print(processed_hamiltonian)
    # Print the result
    # for term in processed_hamiltonian:
    #     print(term)   
    pauli_to_index = {"I": 0, "X": 1, "Y": 2, "Z": 3}   
    # Initialize a zero array for the coefficients (4^n terms)
    dim = 4**num_qubits
    coefficients = np.zeros(dim, dtype=complex)

    # Define the Hamiltonian terms
    terms = processed_hamiltonian

    # Populate the coefficients array
    for coeff, pauli_ops in terms:
        # Default: identity operators for all qubits
        full_ops = ["I"] * num_qubits
        for i, op in enumerate(pauli_ops):
         full_ops[i] = op      
        # Compute the index for the term
        index = sum(pauli_to_index[op] * (4**(num_qubits - i - 1)) for i, op in enumerate(full_ops))  
        # Assign the coefficient to the appropriate index
        coefficients[index] = coeff    
    h_alpha = coefficients.real
    # print(f"P4 molecule H_alpha: {h_alpha}")
    # print(f"Length of H_alpha: {len(h_alpha)}") 

    nspin = 6
    H = []
    active = [0,1,2,3,4,5]
    active = np.asarray(active)
    nact   = len(active)
    imap,gmap = pauli_action(active,nspin)
    # print(f"Pauli action-imap_shape: {imap.shape}") 
    H.append((active,h_alpha,imap,gmap))

    return H


# P4 with penalty, scbkt
def P4_molecule_s2():
  
#   # alpha 2.0
#   hamiltonian_terms = [
#     (-0.37091085905+0j, ""),
#     (-0.0277183361+0j, "X0 X1 Z2"),
#     (0.0197406095+0j, "X0 X1 X3 X4"),
#     (0.0197406095+0j, "X0 X1 Y3 Y4 Z5"),
#     (-2.140015e-05+0j, "X0 X1 Z3 Y4 Y5"),
#     (-0.01990207155+0j, "X0 X1 Z3 Z4"),
#     (-2.140015e-05+0j, "X0 X1 X4 X5"),
#     (0.01990207155+0j, "X0 X1 Z5"),
#     (0.0340661094+0j, "X0 Y1 Y2 X3 Y4 Y5"),
#     (-0.0340661094+0j, "X0 Y1 Y2 Y3 Y4 X5"),
#     (-3.630255e-05+0j, "X0 Y1 Y2 Z3 X4"),
#     (3.630255e-05+0j, "X0 Y1 Y2 X4 Z5"),
#     (-0.0337612396+0j, "X0 Y1 Y2 Z4 X5"),
#     (0.0337612396+0j, "X0 Y1 Y2 X5"),
#     (-0.0340661094+0j, "X0 Z1 X3"),
#     (0.0340661094+0j, "X0 Z1 X3 Z4"),
#     (-0.0337612396+0j, "X0 Z1 Z3 X4"),
#     (0.0337612396+0j, "X0 Z1 X4 Z5"),
#     (3.630255e-05+0j, "X0 Z1 Z4 X5"),
#     (-3.630255e-05+0j, "X0 Z1 X5"),
#     (2.98048e-05+0j, "X0 X2"),
#     (0.0340661094+0j, "X0 X3"),
#     (-0.0340661094+0j, "X0 X3 Z4"),
#     (0.0337612396+0j, "X0 Z3 X4"),
#     (-0.0337612396+0j, "X0 X4 Z5"),
#     (-3.630255e-05+0j, "X0 Z4 X5"),
#     (3.630255e-05+0j, "X0 X5"),
#     (-0.0277183361+0j, "Y0 Y1"),
#     (-0.0340661094+0j, "Y0 Y1 X2 X3 Y4 Y5"),
#     (0.0340661094+0j, "Y0 Y1 X2 Y3 Y4 X5"),
#     (3.630255e-05+0j, "Y0 Y1 X2 Z3 X4"),
#     (-3.630255e-05+0j, "Y0 Y1 X2 X4 Z5"),
#     (0.0337612396+0j, "Y0 Y1 X2 Z4 X5"),
#     (-0.0337612396+0j, "Y0 Y1 X2 X5"),
#     (0.0197406095+0j, "Y0 Y1 Z2 X3 X4"),
#     (0.0197406095+0j, "Y0 Y1 Z2 Y3 Y4 Z5"),
#     (-2.140015e-05+0j, "Y0 Y1 Z2 Z3 Y4 Y5"),
#     (-0.01990207155+0j, "Y0 Y1 Z2 Z3 Z4"),
#     (-2.140015e-05+0j, "Y0 Y1 Z2 X4 X5"),
#     (0.01990207155+0j, "Y0 Y1 Z2 Z5"),
#     (2.98048e-05+0j, "Y0 Z1 Y2"),
#     (0.2241531957+0j, "Z0"),
#     (0.0337612396+0j, "Z0 X1 X3"),
#     (-3.630255e-05+0j, "Z0 X1 X3 Y4 Y5"),
#     (-0.0337612396+0j, "Z0 X1 X3 Z4"),
#     (3.630255e-05+0j, "Z0 X1 Y3 Y4 X5"),
#     (0.03709430695+0j, "Z0 X1 Z3 X4"),
#     (-0.03709430695+0j, "Z0 X1 X4 Z5"),
#     (-2.140015e-05+0j, "Z0 Y1 Y2 X3 X4"),
#     (-2.140015e-05+0j, "Z0 Y1 Y2 Y3 Y4 Z5"),
#     (0.00246857175+0j, "Z0 Y1 Y2 Z3 Y4 Y5"),
#     (1.893365e-05+0j, "Z0 Y1 Y2 Z3 Z4"),
#     (0.00246857175+0j, "Z0 Y1 Y2 X4 X5"),
#     (-1.893365e-05+0j, "Z0 Y1 Y2 Z5"),
#     (-0.00388397435+0j, "Z0 Z1"),
#     (0.21081273475+0j, "Z0 Z1 Z2"),
#     (-0.01990207155+0j, "Z0 Z1 X3 X4"),
#     (-0.01990207155+0j, "Z0 Z1 Y3 Y4 Z5"),
#     (0.1261361148+0j, "Z0 Z1 Z3"),
#     (1.893365e-05+0j, "Z0 Z1 Z3 Y4 Y5"),
#     (0.1459513998+0j, "Z0 Z1 Z3 Z4"),
#     (1.893365e-05+0j, "Z0 Z1 X4 X5"),
#     (0.12907256+0j, "Z0 Z1 Z4 Z5"),
#     (0.10579782795+0j, "Z0 Z1 Z5"),
#     (0.18404825845+0j, "Z0 Z2"),
#     (0.12969344345+0j, "Z0 Z3"),
#     (0.1261361148+0j, "Z0 Z3 Z4"),
#     (0.12722408805+0j, "Z0 Z4 Z5"),
#     (0.1261361148+0j, "Z0 Z5"),
#     (-2.140015e-05+0j, "X1 X2 X3 X4"),
#     (-2.140015e-05+0j, "X1 X2 Y3 Y4 Z5"),
#     (0.00246857175+0j, "X1 X2 Z3 Y4 Y5"),
#     (1.893365e-05+0j, "X1 X2 Z3 Z4"),
#     (0.00246857175+0j, "X1 X2 X4 X5"),
#     (-1.893365e-05+0j, "X1 X2 Z5"),
#     (-0.0337612396+0j, "X1 Z2 X3"),
#     (3.630255e-05+0j, "X1 Z2 X3 Y4 Y5"),
#     (0.0337612396+0j, "X1 Z2 X3 Z4"),
#     (-3.630255e-05+0j, "X1 Z2 Y3 Y4 X5"),
#     (-0.03709430695+0j, "X1 Z2 Z3 X4"),
#     (0.03709430695+0j, "X1 Z2 X4 Z5"),
#     (0.18404825845+0j, "Z1"),
#     (-3.630255e-05+0j, "Z1 X2 X3"),
#     (-0.0337612396+0j, "Z1 X2 X3 Y4 Y5"),
#     (3.630255e-05+0j, "Z1 X2 X3 Z4"),
#     (0.0337612396+0j, "Z1 X2 Y3 Y4 X5"),
#     (0.03709430695+0j, "Z1 X2 Z4 X5"),
#     (-0.03709430695+0j, "Z1 X2 X5"),
#     (-0.277880031+0j, "Z1 Z2"),
#     (0.12722408805+0j, "Z1 Z2 Z3"),
#     (0.12907256+0j, "Z1 Z2 Z3 Z4"),
#     (0.1347139307+0j, "Z1 Z2 Z4 Z5"),
#     (0.12907256+0j, "Z1 Z2 Z5"),
#     (3.630255e-05+0j, "X2 X3"),
#     (0.0337612396+0j, "X2 X3 Y4 Y5"),
#     (-3.630255e-05+0j, "X2 X3 Z4"),
#     (-0.0337612396+0j, "X2 Y3 Y4 X5"),
#     (-0.03709430695+0j, "X2 Z4 X5"),
#     (0.03709430695+0j, "X2 X5"),
#     (-0.00388397435+0j, "Z2"),
#     (0.01990207155+0j, "Z2 X3 X4"),
#     (0.01990207155+0j, "Z2 Y3 Y4 Z5"),
#     (0.1261361148+0j, "Z2 Z3"),
#     (-1.893365e-05+0j, "Z2 Z3 Y4 Y5"),
#     (0.10579782795+0j, "Z2 Z3 Z4"),
#     (-1.893365e-05+0j, "Z2 X4 X5"),
#     (0.12907256+0j, "Z2 Z4 Z5"),
#     (0.1459513998+0j, "Z2 Z5"),
#     (-0.0277183361+0j, "X3 X4 Z5"),
#     (2.98048e-05+0j, "X3 X5"),
#     (-0.0277183361+0j, "Y3 Y4"),
#     (2.98048e-05+0j, "Y3 Z4 Y5"),
#     (0.2241531957+0j, "Z3"),
#     (-0.00388397435+0j, "Z3 Z4"),
#     (0.21081273475+0j, "Z3 Z4 Z5"),
#     (0.18404825845+0j, "Z3 Z5"),
#     (0.18404825845+0j, "Z4"),
#     (-0.277880031+0j, "Z4 Z5"),
#     (-0.00388397435+0j, "Z5")
#   ]

# # alpha 2.01
#   hamiltonian_terms = [
#     (-0.3761741329+0j, ""),
#     (-0.0276901551+0j, "X0 X1 Z2"),
#     (0.019756822+0j, "X0 X1 X3 X4"),
#     (0.019756822+0j, "X0 X1 Y3 Y4 Z5"),
#     (-0.01992322395+0j, "X0 X1 Z3 Z4"),
#     (0.01992322395+0j, "X0 X1 Z5"),
#     (7.53041e-05+0j, "X0 Y1 Y2 X3"),
#     (0.0340599851+0j, "X0 Y1 Y2 X3 Y4 Y5"),
#     (-7.53041e-05+0j, "X0 Y1 Y2 X3 Z4"),
#     (-0.0340599851+0j, "X0 Y1 Y2 Y3 Y4 X5"),
#     (6.756145e-05+0j, "X0 Y1 Y2 Z3 X4"),
#     (-6.756145e-05+0j, "X0 Y1 Y2 X4 Z5"),
#     (-0.0337683015+0j, "X0 Y1 Y2 Z4 X5"),
#     (0.0337683015+0j, "X0 Y1 Y2 X5"),
#     (-0.0002702458+0j, "X0 Z1 X2"),
#     (-0.0340599851+0j, "X0 Z1 X3"),
#     (-7.53041e-05+0j, "X0 Z1 X3 Y4 Y5"),
#     (0.0340599851+0j, "X0 Z1 X3 Z4"),
#     (7.53041e-05+0j, "X0 Z1 Y3 Y4 X5"),
#     (-0.0337683015+0j, "X0 Z1 Z3 X4"),
#     (0.0337683015+0j, "X0 Z1 X4 Z5"),
#     (6.756145e-05+0j, "X0 Z1 Z4 X5"),
#     (-6.756145e-05+0j, "X0 Z1 X5"),
#     (0.0001351229+0j, "X0 X2"),
#     (0.0340599851+0j, "X0 X3"),
#     (7.53041e-05+0j, "X0 X3 Y4 Y5"),
#     (-0.0340599851+0j, "X0 X3 Z4"),
#     (-7.53041e-05+0j, "X0 Y3 Y4 X5"),
#     (0.0337683015+0j, "X0 Z3 X4"),
#     (-0.0337683015+0j, "X0 X4 Z5"),
#     (-6.756145e-05+0j, "X0 Z4 X5"),
#     (6.756145e-05+0j, "X0 X5"),
#     (-0.0276901551+0j, "Y0 Y1"),
#     (-7.53041e-05+0j, "Y0 Y1 X2 X3"),
#     (-0.0340599851+0j, "Y0 Y1 X2 X3 Y4 Y5"),
#     (7.53041e-05+0j, "Y0 Y1 X2 X3 Z4"),
#     (0.0340599851+0j, "Y0 Y1 X2 Y3 Y4 X5"),
#     (-6.756145e-05+0j, "Y0 Y1 X2 Z3 X4"),
#     (6.756145e-05+0j, "Y0 Y1 X2 X4 Z5"),
#     (0.0337683015+0j, "Y0 Y1 X2 Z4 X5"),
#     (-0.0337683015+0j, "Y0 Y1 X2 X5"),
#     (0.019756822+0j, "Y0 Y1 Z2 X3 X4"),
#     (0.019756822+0j, "Y0 Y1 Z2 Y3 Y4 Z5"),
#     (-0.01992322395+0j, "Y0 Y1 Z2 Z3 Z4"),
#     (0.01992322395+0j, "Y0 Y1 Z2 Z5"),
#     (-0.0001351229+0j, "Y0 Z1 Y2"),
#     (0.22353908225+0j, "Z0"),
#     (0.00013641125+0j, "Z0 X1 X2"),
#     (0.0337683015+0j, "Z0 X1 X3"),
#     (6.756145e-05+0j, "Z0 X1 X3 Y4 Y5"),
#     (-0.0337683015+0j, "Z0 X1 X3 Z4"),
#     (-6.756145e-05+0j, "Z0 X1 Y3 Y4 X5"),
#     (0.0371024368+0j, "Z0 X1 Z3 X4"),
#     (-0.0371024368+0j, "Z0 X1 X4 Z5"),
#     (-7.49074e-05+0j, "Z0 X1 Z4 X5"),
#     (7.49074e-05+0j, "Z0 X1 X5"),
#     (-0.00095284395+0j, "Z0 Y1 Y2"),
#     (-1.74248e-05+0j, "Z0 Y1 Y2 Z3"),
#     (0.0024552971+0j, "Z0 Y1 Y2 Z3 Y4 Y5"),
#     (-1.297485e-05+0j, "Z0 Y1 Y2 Z3 Z4"),
#     (0.0024552971+0j, "Z0 Y1 Y2 X4 X5"),
#     (-3.62455e-06+0j, "Z0 Y1 Y2 Z4 Z5"),
#     (-1.297485e-05+0j, "Z0 Y1 Y2 Z5"),
#     (-0.0036703367+0j, "Z0 Z1"),
#     (0.210498927+0j, "Z0 Z1 Z2"),
#     (-0.01992322395+0j, "Z0 Z1 X3 X4"),
#     (-0.01992322395+0j, "Z0 Z1 Y3 Y4 Z5"),
#     (0.12599138575+0j, "Z0 Z1 Z3"),
#     (-1.297485e-05+0j, "Z0 Z1 Z3 Y4 Y5"),
#     (0.14584105765+0j, "Z0 Z1 Z3 Z4"),
#     (-1.297485e-05+0j, "Z0 Z1 X4 X5"),
#     (0.12892856675+0j, "Z0 Z1 Z4 Z5"),
#     (0.10563515665+0j, "Z0 Z1 Z5"),
#     (0.1837575306+0j, "Z0 Z2"),
#     (0.1295315458+0j, "Z0 Z3"),
#     (-1.74248e-05+0j, "Z0 Z3 Y4 Y5"),
#     (0.12599138575+0j, "Z0 Z3 Z4"),
#     (-1.74248e-05+0j, "Z0 X4 X5"),
#     (0.12707588945+0j, "Z0 Z4 Z5"),
#     (0.12599138575+0j, "Z0 Z5"),
#     (-0.00095284395+0j, "X1 X2"),
#     (-1.74248e-05+0j, "X1 X2 Z3"),
#     (0.0024552971+0j, "X1 X2 Z3 Y4 Y5"),
#     (-1.297485e-05+0j, "X1 X2 Z3 Z4"),
#     (0.0024552971+0j, "X1 X2 X4 X5"),
#     (-3.62455e-06+0j, "X1 X2 Z4 Z5"),
#     (-1.297485e-05+0j, "X1 X2 Z5"),
#     (-0.0337683015+0j, "X1 Z2 X3"),
#     (-6.756145e-05+0j, "X1 Z2 X3 Y4 Y5"),
#     (0.0337683015+0j, "X1 Z2 X3 Z4"),
#     (6.756145e-05+0j, "X1 Z2 Y3 Y4 X5"),
#     (-0.0371024368+0j, "X1 Z2 Z3 X4"),
#     (0.0371024368+0j, "X1 Z2 X4 Z5"),
#     (7.49074e-05+0j, "X1 Z2 Z4 X5"),
#     (-7.49074e-05+0j, "X1 Z2 X5"),
#     (0.00013641125+0j, "Y1 Y2"),
#     (0.1837575306+0j, "Z1"),
#     (-6.756145e-05+0j, "Z1 X2 X3"),
#     (-0.0337683015+0j, "Z1 X2 X3 Y4 Y5"),
#     (6.756145e-05+0j, "Z1 X2 X3 Z4"),
#     (0.0337683015+0j, "Z1 X2 Y3 Y4 X5"),
#     (-7.49074e-05+0j, "Z1 X2 Z3 X4"),
#     (7.49074e-05+0j, "Z1 X2 X4 Z5"),
#     (0.0371024368+0j, "Z1 X2 Z4 X5"),
#     (-0.0371024368+0j, "Z1 X2 X5"),
#     (-0.2763765911+0j, "Z1 Z2"),
#     (0.12707588945+0j, "Z1 Z2 Z3"),
#     (-3.62455e-06+0j, "Z1 Z2 Z3 Y4 Y5"),
#     (0.12892856675+0j, "Z1 Z2 Z3 Z4"),
#     (-3.62455e-06+0j, "Z1 Z2 X4 X5"),
#     (0.1345530627+0j, "Z1 Z2 Z4 Z5"),
#     (0.12892856675+0j, "Z1 Z2 Z5"),
#     (6.756145e-05+0j, "X2 X3"),
#     (0.0337683015+0j, "X2 X3 Y4 Y5"),
#     (-6.756145e-05+0j, "X2 X3 Z4"),
#     (-0.0337683015+0j, "X2 Y3 Y4 X5"),
#     (7.49074e-05+0j, "X2 Z3 X4"),
#     (-7.49074e-05+0j, "X2 X4 Z5"),
#     (-0.0371024368+0j, "X2 Z4 X5"),
#     (0.0371024368+0j, "X2 X5"),
#     (-0.0036703367+0j, "Z2"),
#     (0.01992322395+0j, "Z2 X3 X4"),
#     (0.01992322395+0j, "Z2 Y3 Y4 Z5"),
#     (0.12599138575+0j, "Z2 Z3"),
#     (-1.297485e-05+0j, "Z2 Z3 Y4 Y5"),
#     (0.10563515665+0j, "Z2 Z3 Z4"),
#     (-1.297485e-05+0j, "Z2 X4 X5"),
#     (0.12892856675+0j, "Z2 Z4 Z5"),
#     (0.14584105765+0j, "Z2 Z5"),
#     (-0.0276901551+0j, "X3 X4 Z5"),
#     (-0.0002702458+0j, "X3 Z4 X5"),
#     (0.0001351229+0j, "X3 X5"),
#     (-0.0276901551+0j, "Y3 Y4"),
#     (-0.0001351229+0j, "Y3 Z4 Y5"),
#     (0.22353908225+0j, "Z3"),
#     (0.00013641125+0j, "Z3 X4 X5"),
#     (-0.00095284395+0j, "Z3 Y4 Y5"),
#     (-0.0036703367+0j, "Z3 Z4"),
#     (0.210498927+0j, "Z3 Z4 Z5"),
#     (0.1837575306+0j, "Z3 Z5"),
#     (-0.00095284395+0j, "X4 X5"),
#     (0.00013641125+0j, "Y4 Y5"),
#     (0.1837575306+0j, "Z4"),
#     (-0.2763765911+0j, "Z4 Z5"),
#     (-0.0036703367+0j, "Z5")
#     ]
    
#     # alpha 2.02
#   hamiltonian_terms = [
#     (-0.3813594448+0j, ""),
#     (-0.0276624255+0j, "X0 X1 Z2"),
#     (0.01977305345+0j, "X0 X1 X3 X4"),
#     (0.01977305345+0j, "X0 X1 Y3 Y4 Z5"),
#     (-0.0199443575+0j, "X0 X1 Z3 Z4"),
#     (0.0199443575+0j, "X0 X1 Z5"),
#     (-0.00015044505+0j, "X0 Y1 Y2 X3"),
#     (0.0340541343+0j, "X0 Y1 Y2 X3 Y4 Y5"),
#     (0.00015044505+0j, "X0 Y1 Y2 X3 Z4"),
#     (-0.0340541343+0j, "X0 Y1 Y2 Y3 Y4 X5"),
#     (-0.00013499055+0j, "X0 Y1 Y2 Z3 X4"),
#     (0.00013499055+0j, "X0 Y1 Y2 X4 Z5"),
#     (-0.03377557025+0j, "X0 Y1 Y2 Z4 X5"),
#     (0.03377557025+0j, "X0 Y1 Y2 X5"),
#     (0.0005399622+0j, "X0 Z1 X2"),
#     (-0.0340541343+0j, "X0 Z1 X3"),
#     (0.00015044505+0j, "X0 Z1 X3 Y4 Y5"),
#     (0.0340541343+0j, "X0 Z1 X3 Z4"),
#     (-0.00015044505+0j, "X0 Z1 Y3 Y4 X5"),
#     (-0.03377557025+0j, "X0 Z1 Z3 X4"),
#     (0.03377557025+0j, "X0 Z1 X4 Z5"),
#     (-0.00013499055+0j, "X0 Z1 Z4 X5"),
#     (0.00013499055+0j, "X0 Z1 X5"),
#     (-0.0002699811+0j, "X0 X2"),
#     (0.0340541343+0j, "X0 X3"),
#     (-0.00015044505+0j, "X0 X3 Y4 Y5"),
#     (-0.0340541343+0j, "X0 X3 Z4"),
#     (0.00015044505+0j, "X0 Y3 Y4 X5"),
#     (0.03377557025+0j, "X0 Z3 X4"),
#     (-0.03377557025+0j, "X0 X4 Z5"),
#     (0.00013499055+0j, "X0 Z4 X5"),
#     (-0.00013499055+0j, "X0 X5"),
#     (-0.0276624255+0j, "Y0 Y1"),
#     (0.00015044505+0j, "Y0 Y1 X2 X3"),
#     (-0.0340541343+0j, "Y0 Y1 X2 X3 Y4 Y5"),
#     (-0.00015044505+0j, "Y0 Y1 X2 X3 Z4"),
#     (0.0340541343+0j, "Y0 Y1 X2 Y3 Y4 X5"),
#     (0.00013499055+0j, "Y0 Y1 X2 Z3 X4"),
#     (-0.00013499055+0j, "Y0 Y1 X2 X4 Z5"),
#     (0.03377557025+0j, "Y0 Y1 X2 Z4 X5"),
#     (-0.03377557025+0j, "Y0 Y1 X2 X5"),
#     (0.01977305345+0j, "Y0 Y1 Z2 X3 X4"),
#     (0.01977305345+0j, "Y0 Y1 Z2 Y3 Y4 Z5"),
#     (-0.0199443575+0j, "Y0 Y1 Z2 Z3 Z4"),
#     (0.0199443575+0j, "Y0 Y1 Z2 Z5"),
#     (0.0002699811+0j, "Y0 Z1 Y2"),
#     (0.2229283315+0j, "Z0"),
#     (-0.0002725211+0j, "Z0 X1 X2"),
#     (0.03377557025+0j, "Z0 X1 X3"),
#     (-0.00013499055+0j, "Z0 X1 X3 Y4 Y5"),
#     (-0.03377557025+0j, "Z0 X1 X3 Z4"),
#     (0.00013499055+0j, "Z0 X1 Y3 Y4 X5"),
#     (0.0371107401+0j, "Z0 X1 Z3 X4"),
#     (-0.0371107401+0j, "Z0 X1 X4 Z5"),
#     (0.0001497183+0j, "Z0 X1 Z4 X5"),
#     (-0.0001497183+0j, "Z0 X1 X5"),
#     (0.00189859425+0j, "Z0 Y1 Y2"),
#     (3.475395e-05+0j, "Z0 Y1 Y2 Z3"),
#     (0.0024420728+0j, "Z0 Y1 Y2 Z3 Y4 Y5"),
#     (2.580795e-05+0j, "Z0 Y1 Y2 Z3 Z4"),
#     (0.0024420728+0j, "Z0 Y1 Y2 X4 X5"),
#     (7.1117e-06+0j, "Z0 Y1 Y2 Z4 Z5"),
#     (2.580795e-05+0j, "Z0 Y1 Y2 Z5"),
#     (-0.00345957355+0j, "Z0 Z1"),
#     (0.2101859299+0j, "Z0 Z1 Z2"),
#     (-0.0199443575+0j, "Z0 Z1 X3 X4"),
#     (-0.0199443575+0j, "Z0 Z1 Y3 Y4 Z5"),
#     (0.1258470059+0j, "Z0 Z1 Z3"),
#     (2.580795e-05+0j, "Z0 Z1 Z3 Y4 Y5"),
#     (0.14573108685+0j, "Z0 Z1 Z3 Z4"),
#     (2.580795e-05+0j, "Z0 Z1 X4 X5"),
#     (0.12878500315+0j, "Z0 Z1 Z4 Z5"),
#     (0.1054729582+0j, "Z0 Z1 Z5"),
#     (0.18346713465+0j, "Z0 Z2"),
#     (0.12936988705+0j, "Z0 Z3"),
#     (3.475395e-05+0j, "Z0 Z3 Y4 Y5"),
#     (0.1258470059+0j, "Z0 Z3 Z4"),
#     (3.475395e-05+0j, "Z0 X4 X5"),
#     (0.12692809795+0j, "Z0 Z4 Z5"),
#     (0.1258470059+0j, "Z0 Z5"),
#     (0.00189859425+0j, "X1 X2"),
#     (3.475395e-05+0j, "X1 X2 Z3"),
#     (0.0024420728+0j, "X1 X2 Z3 Y4 Y5"),
#     (2.580795e-05+0j, "X1 X2 Z3 Z4"),
#     (0.0024420728+0j, "X1 X2 X4 X5"),
#     (7.1117e-06+0j, "X1 X2 Z4 Z5"),
#     (2.580795e-05+0j, "X1 X2 Z5"),
#     (-0.03377557025+0j, "X1 Z2 X3"),
#     (0.00013499055+0j, "X1 Z2 X3 Y4 Y5"),
#     (0.03377557025+0j, "X1 Z2 X3 Z4"),
#     (-0.00013499055+0j, "X1 Z2 Y3 Y4 X5"),
#     (-0.0371107401+0j, "X1 Z2 Z3 X4"),
#     (0.0371107401+0j, "X1 Z2 X4 Z5"),
#     (-0.0001497183+0j, "X1 Z2 Z4 X5"),
#     (0.0001497183+0j, "X1 Z2 X5"),
#     (-0.0002725211+0j, "Y1 Y2"),
#     (0.18346713465+0j, "Z1"),
#     (0.00013499055+0j, "Z1 X2 X3"),
#     (-0.03377557025+0j, "Z1 X2 X3 Y4 Y5"),
#     (-0.00013499055+0j, "Z1 X2 X3 Z4"),
#     (0.03377557025+0j, "Z1 X2 Y3 Y4 X5"),
#     (0.0001497183+0j, "Z1 X2 Z3 X4"),
#     (-0.0001497183+0j, "Z1 X2 X4 Z5"),
#     (0.0371107401+0j, "Z1 X2 Z4 X5"),
#     (-0.0371107401+0j, "Z1 X2 X5"),
#     (-0.27488750875+0j, "Z1 Z2"),
#     (0.12692809795+0j, "Z1 Z2 Z3"),
#     (7.1117e-06+0j, "Z1 Z2 Z3 Y4 Y5"),
#     (0.12878500315+0j, "Z1 Z2 Z3 Z4"),
#     (7.1117e-06+0j, "Z1 Z2 X4 X5"),
#     (0.13439262535+0j, "Z1 Z2 Z4 Z5"),
#     (0.12878500315+0j, "Z1 Z2 Z5"),
#     (-0.00013499055+0j, "X2 X3"),
#     (0.03377557025+0j, "X2 X3 Y4 Y5"),
#     (0.00013499055+0j, "X2 X3 Z4"),
#     (-0.03377557025+0j, "X2 Y3 Y4 X5"),
#     (-0.0001497183+0j, "X2 Z3 X4"),
#     (0.0001497183+0j, "X2 X4 Z5"),
#     (-0.0371107401+0j, "X2 Z4 X5"),
#     (0.0371107401+0j, "X2 X5"),
#     (-0.00345957355+0j, "Z2"),
#     (0.0199443575+0j, "Z2 X3 X4"),
#     (0.0199443575+0j, "Z2 Y3 Y4 Z5"),
#     (0.1258470059+0j, "Z2 Z3"),
#     (2.580795e-05+0j, "Z2 Z3 Y4 Y5"),
#     (0.1054729582+0j, "Z2 Z3 Z4"),
#     (2.580795e-05+0j, "Z2 X4 X5"),
#     (0.12878500315+0j, "Z2 Z4 Z5"),
#     (0.14573108685+0j, "Z2 Z5"),
#     (-0.0276624255+0j, "X3 X4 Z5"),
#     (0.0005399622+0j, "X3 Z4 X5"),
#     (-0.0002699811+0j, "X3 X5"),
#     (-0.0276624255+0j, "Y3 Y4"),
#     (0.0002699811+0j, "Y3 Z4 Y5"),
#     (0.2229283315+0j, "Z3"),
#     (-0.0002725211+0j, "Z3 X4 X5"),
#     (0.00189859425+0j, "Z3 Y4 Y5"),
#     (-0.00345957355+0j, "Z3 Z4"),
#     (0.2101859299+0j, "Z3 Z4 Z5"),
#     (0.18346713465+0j, "Z3 Z5"),
#     (0.00189859425+0j, "X4 X5"),
#     (-0.0002725211+0j, "Y4 Y5"),
#     (0.18346713465+0j, "Z4"),
#     (-0.27488750875+0j, "Z4 Z5"),
#     (-0.00345957355+0j, "Z5")
#   ]

# alpha 1.99
  hamiltonian_terms = [
    (-0.36556873325+0j, ""),
    (-0.0277470173+0j, "X0 X1 Z2"),
    (0.0197244159+0j, "X0 X1 X3 X4"),
    (0.0197244159+0j, "X0 X1 Y3 Y4 Z5"),
    (-0.0198809362+0j, "X0 X1 Z3 Z4"),
    (0.0198809362+0j, "X0 X1 Z5"),
    (7.54648e-05+0j, "X0 Y1 Y2 X3"),
    (0.03407250695+0j, "X0 Y1 Y2 X3 Y4 Y5"),
    (-7.54648e-05+0j, "X0 Y1 Y2 X3 Z4"),
    (-0.03407250695+0j, "X0 Y1 Y2 Y3 Y4 X5"),
    (6.76934e-05+0j, "X0 Y1 Y2 Z3 X4"),
    (-6.76934e-05+0j, "X0 Y1 Y2 X4 Z5"),
    (-0.03375444485+0j, "X0 Y1 Y2 Z4 X5"),
    (0.03375444485+0j, "X0 Y1 Y2 X5"),
    (-0.0002707736+0j, "X0 Z1 X2"),
    (-0.03407250695+0j, "X0 Z1 X3"),
    (-7.54648e-05+0j, "X0 Z1 X3 Y4 Y5"),
    (0.03407250695+0j, "X0 Z1 X3 Z4"),
    (7.54648e-05+0j, "X0 Z1 Y3 Y4 X5"),
    (-0.03375444485+0j, "X0 Z1 Z3 X4"),
    (0.03375444485+0j, "X0 Z1 X4 Z5"),
    (6.76934e-05+0j, "X0 Z1 Z4 X5"),
    (-6.76934e-05+0j, "X0 Z1 X5"),
    (0.0001353868+0j, "X0 X2"),
    (0.03407250695+0j, "X0 X3"),
    (7.54648e-05+0j, "X0 X3 Y4 Y5"),
    (-0.03407250695+0j, "X0 X3 Z4"),
    (-7.54648e-05+0j, "X0 Y3 Y4 X5"),
    (0.03375444485+0j, "X0 Z3 X4"),
    (-0.03375444485+0j, "X0 X4 Z5"),
    (-6.76934e-05+0j, "X0 Z4 X5"),
    (6.76934e-05+0j, "X0 X5"),
    (-0.0277470173+0j, "Y0 Y1"),
    (-7.54648e-05+0j, "Y0 Y1 X2 X3"),
    (-0.03407250695+0j, "Y0 Y1 X2 X3 Y4 Y5"),
    (7.54648e-05+0j, "Y0 Y1 X2 X3 Z4"),
    (0.03407250695+0j, "Y0 Y1 X2 Y3 Y4 X5"),
    (-6.76934e-05+0j, "Y0 Y1 X2 Z3 X4"),
    (6.76934e-05+0j, "Y0 Y1 X2 X4 Z5"),
    (0.03375444485+0j, "Y0 Y1 X2 Z4 X5"),
    (-0.03375444485+0j, "Y0 Y1 X2 X5"),
    (0.0197244159+0j, "Y0 Y1 Z2 X3 X4"),
    (0.0197244159+0j, "Y0 Y1 Z2 Y3 Y4 Z5"),
    (-0.0198809362+0j, "Y0 Y1 Z2 Z3 Z4"),
    (0.0198809362+0j, "Y0 Y1 Z2 Z5"),
    (-0.0001353868+0j, "Y0 Z1 Y2"),
    (0.22477137715+0j, "Z0"),
    (0.00013671065+0j, "Z0 X1 X2"),
    (0.03375444485+0j, "Z0 X1 X3"),
    (6.76934e-05+0j, "Z0 X1 X3 Y4 Y5"),
    (-0.03375444485+0j, "Z0 X1 X3 Z4"),
    (-6.76934e-05+0j, "Z0 X1 Y3 Y4 X5"),
    (0.0370863534+0j, "Z0 X1 Z3 X4"),
    (-0.0370863534+0j, "Z0 X1 X4 Z5"),
    (-7.50028e-05+0j, "Z0 X1 Z4 X5"),
    (7.50028e-05+0j, "Z0 X1 X5"),
    (-0.00096004455+0j, "Z0 Y1 Y2"),
    (-1.751835e-05+0j, "Z0 Y1 Y2 Z3"),
    (0.0024818342+0j, "Z0 Y1 Y2 Z3 Y4 Y5"),
    (-1.311455e-05+0j, "Z0 Y1 Y2 Z3 Z4"),
    (0.0024818342+0j, "Z0 Y1 Y2 X4 X5"),
    (-3.7614e-06+0j, "Z0 Y1 Y2 Z4 Z5"),
    (-1.311455e-05+0j, "Z0 Y1 Y2 Z5"),
    (-0.00410000295+0j, "Z0 Z1"),
    (0.21112735265+0j, "Z0 Z1 Z2"),
    (-0.0198809362+0j, "Z0 Z1 X3 X4"),
    (-0.0198809362+0j, "Z0 Z1 Y3 Y4 Z5"),
    (0.12628118985+0j, "Z0 Z1 Z3"),
    (-1.311455e-05+0j, "Z0 Z1 Z3 Y4 Y5"),
    (0.1460621743+0j, "Z0 Z1 Z3 Z4"),
    (-1.311455e-05+0j, "Z0 Z1 X4 X5"),
    (0.12921698775+0j, "Z0 Z1 Z4 Z5"),
    (0.10596090855+0j, "Z0 Z1 Z5"),
    (0.18433931725+0j, "Z0 Z2"),
    (0.12985557505+0j, "Z0 Z3"),
    (-1.751835e-05+0j, "Z0 Z3 Y4 Y5"),
    (0.12628118985+0j, "Z0 Z3 Z4"),
    (-1.751835e-05+0j, "Z0 X4 X5"),
    (0.1273726942+0j, "Z0 Z4 Z5"),
    (0.12628118985+0j, "Z0 Z5"),
    (-0.00096004455+0j, "X1 X2"),
    (-1.751835e-05+0j, "X1 X2 Z3"),
    (0.0024818342+0j, "X1 X2 Z3 Y4 Y5"),
    (-1.311455e-05+0j, "X1 X2 Z3 Z4"),
    (0.0024818342+0j, "X1 X2 X4 X5"),
    (-3.7614e-06+0j, "X1 X2 Z4 Z5"),
    (-1.311455e-05+0j, "X1 X2 Z5"),
    (-0.03375444485+0j, "X1 Z2 X3"),
    (-6.76934e-05+0j, "X1 Z2 X3 Y4 Y5"),
    (0.03375444485+0j, "X1 Z2 X3 Z4"),
    (6.76934e-05+0j, "X1 Z2 Y3 Y4 X5"),
    (-0.0370863534+0j, "X1 Z2 Z3 X4"),
    (0.0370863534+0j, "X1 Z2 X4 Z5"),
    (7.50028e-05+0j, "X1 Z2 Z4 X5"),
    (-7.50028e-05+0j, "X1 Z2 X5"),
    (0.00013671065+0j, "Y1 Y2"),
    (0.18433931725+0j, "Z1"),
    (-6.76934e-05+0j, "Z1 X2 X3"),
    (-0.03375444485+0j, "Z1 X2 X3 Y4 Y5"),
    (6.76934e-05+0j, "Z1 X2 X3 Z4"),
    (0.03375444485+0j, "Z1 X2 Y3 Y4 X5"),
    (-7.50028e-05+0j, "Z1 X2 Z3 X4"),
    (7.50028e-05+0j, "Z1 X2 X4 Z5"),
    (0.0370863534+0j, "Z1 X2 Z4 X5"),
    (-0.0370863534+0j, "Z1 X2 X5"),
    (-0.27939958025+0j, "Z1 Z2"),
    (0.1273726942+0j, "Z1 Z2 Z3"),
    (-3.7614e-06+0j, "Z1 Z2 Z3 Y4 Y5"),
    (0.12921698775+0j, "Z1 Z2 Z3 Z4"),
    (-3.7614e-06+0j, "Z1 Z2 X4 X5"),
    (0.1348752153+0j, "Z1 Z2 Z4 Z5"),
    (0.12921698775+0j, "Z1 Z2 Z5"),
    (6.76934e-05+0j, "X2 X3"),
    (0.03375444485+0j, "X2 X3 Y4 Y5"),
    (-6.76934e-05+0j, "X2 X3 Z4"),
    (-0.03375444485+0j, "X2 Y3 Y4 X5"),
    (7.50028e-05+0j, "X2 Z3 X4"),
    (-7.50028e-05+0j, "X2 X4 Z5"),
    (-0.0370863534+0j, "X2 Z4 X5"),
    (0.0370863534+0j, "X2 X5"),
    (-0.00410000295+0j, "Z2"),
    (0.0198809362+0j, "Z2 X3 X4"),
    (0.0198809362+0j, "Z2 Y3 Y4 Z5"),
    (0.12628118985+0j, "Z2 Z3"),
    (-1.311455e-05+0j, "Z2 Z3 Y4 Y5"),
    (0.10596090855+0j, "Z2 Z3 Z4"),
    (-1.311455e-05+0j, "Z2 X4 X5"),
    (0.12921698775+0j, "Z2 Z4 Z5"),
    (0.1460621743+0j, "Z2 Z5"),
    (-0.0277470173+0j, "X3 X4 Z5"),
    (-0.0002707736+0j, "X3 Z4 X5"),
    (0.0001353868+0j, "X3 X5"),
    (-0.0277470173+0j, "Y3 Y4"),
    (-0.0001353868+0j, "Y3 Z4 Y5"),
    (0.22477137715+0j, "Z3"),
    (0.00013671065+0j, "Z3 X4 X5"),
    (-0.00096004455+0j, "Z3 Y4 Y5"),
    (-0.00410000295+0j, "Z3 Z4"),
    (0.21112735265+0j, "Z3 Z4 Z5"),
    (0.18433931725+0j, "Z3 Z5"),
    (-0.00096004455+0j, "X4 X5"),
    (0.00013671065+0j, "Y4 Y5"),
    (0.18433931725+0j, "Z4"),
    (-0.27939958025+0j, "Z4 Z5"),
    (-0.00410000295+0j, "Z5")
  ]

  #   # alpha 2.05
  # hamiltonian_terms = [
  #   (-0.39647161585+0j, ""),
  #   (0.0275820241+0j, "X0 X1 Z2"),
  #   (0.01982185605+0j, "X0 X1 X3 X4"),
  #   (0.01982185605+0j, "X0 X1 Y3 Y4 Z5"),
  #   (0.02000770565+0j, "X0 X1 Z3 Z4"),
  #   (-0.02000770565+0j, "X0 X1 Z5"),
  #   (-0.00037486525+0j, "X0 Y1 Y2 X3"),
  #   (0.0340382268+0j, "X0 Y1 Y2 X3 Y4 Y5"),
  #   (0.00037486525+0j, "X0 Y1 Y2 X3 Z4"),
  #   (-0.0340382268+0j, "X0 Y1 Y2 Y3 Y4 X5"),
  #   (0.00033647515+0j, "X0 Y1 Y2 Z3 X4"),
  #   (-0.00033647515+0j, "X0 Y1 Y2 X4 Z5"),
  #   (0.0337987177+0j, "X0 Y1 Y2 Z4 X5"),
  #   (-0.0337987177+0j, "X0 Y1 Y2 X5"),
  #   (-0.0013459006+0j, "X0 Z1 X2"),
  #   (-0.0340382268+0j, "X0 Z1 X3"),
  #   (0.00037486525+0j, "X0 Z1 X3 Y4 Y5"),
  #   (0.0340382268+0j, "X0 Z1 X3 Z4"),
  #   (-0.00037486525+0j, "X0 Z1 Y3 Y4 X5"),
  #   (0.0337987177+0j, "X0 Z1 Z3 X4"),
  #   (-0.0337987177+0j, "X0 Z1 X4 Z5"),
  #   (0.00033647515+0j, "X0 Z1 Z4 X5"),
  #   (-0.00033647515+0j, "X0 Z1 X5"),
  #   (0.0006729503+0j, "X0 X2"),
  #   (0.0340382268+0j, "X0 X3"),
  #   (-0.00037486525+0j, "X0 X3 Y4 Y5"),
  #   (-0.0340382268+0j, "X0 X3 Z4"),
  #   (0.00037486525+0j, "X0 Y3 Y4 X5"),
  #   (-0.0337987177+0j, "X0 Z3 X4"),
  #   (0.0337987177+0j, "X0 X4 Z5"),
  #   (-0.00033647515+0j, "X0 Z4 X5"),
  #   (0.00033647515+0j, "X0 X5"),
  #   (0.0275820241+0j, "Y0 Y1"),
  #   (0.00037486525+0j, "Y0 Y1 X2 X3"),
  #   (-0.0340382268+0j, "Y0 Y1 X2 X3 Y4 Y5"),
  #   (-0.00037486525+0j, "Y0 Y1 X2 X3 Z4"),
  #   (0.0340382268+0j, "Y0 Y1 X2 Y3 Y4 X5"),
  #   (-0.00033647515+0j, "Y0 Y1 X2 Z3 X4"),
  #   (0.00033647515+0j, "Y0 Y1 X2 X4 Z5"),
  #   (-0.0337987177+0j, "Y0 Y1 X2 Z4 X5"),
  #   (0.0337987177+0j, "Y0 Y1 X2 X5"),
  #   (0.01982185605+0j, "Y0 Y1 Z2 X3 X4"),
  #   (0.01982185605+0j, "Y0 Y1 Z2 Y3 Y4 Z5"),
  #   (0.02000770565+0j, "Y0 Y1 Z2 Z3 Z4"),
  #   (-0.02000770565+0j, "Y0 Y1 Z2 Z5"),
  #   (-0.0006729503+0j, "Y0 Z1 Y2"),
  #   (0.22111814685+0j, "Z0"),
  #   (-0.0006790304+0j, "Z0 X1 X2"),
  #   (-0.0337987177+0j, "Z0 X1 X3"),
  #   (0.00033647515+0j, "Z0 X1 X3 Y4 Y5"),
  #   (0.0337987177+0j, "Z0 X1 X3 Z4"),
  #   (-0.00033647515+0j, "Z0 X1 Y3 Y4 X5"),
  #   (0.0371366785+0j, "Z0 X1 Z3 X4"),
  #   (-0.0371366785+0j, "Z0 X1 X4 Z5"),
  #   (0.0003735574+0j, "Z0 X1 Z4 X5"),
  #   (-0.0003735574+0j, "Z0 X1 X5"),
  #   (0.00469429555+0j, "Z0 Y1 Y2"),
  #   (8.614685e-05+0j, "Z0 Y1 Y2 Z3"),
  #   (0.0024026016+0j, "Z0 Y1 Y2 Z3 Y4 Y5"),
  #   (6.34524e-05+0j, "Z0 Y1 Y2 Z3 Z4"),
  #   (0.0024026016+0j, "Z0 Y1 Y2 X4 X5"),
  #   (1.67546e-05+0j, "Z0 Y1 Y2 Z4 Z5"),
  #   (6.34524e-05+0j, "Z0 Y1 Y2 Z5"),
  #   (-0.00284614705+0j, "Z0 Z1"),
  #   (0.20925184455+0j, "Z0 Z1 Z2"),
  #   (0.02000770565+0j, "Z0 Z1 X3 X4"),
  #   (0.02000770565+0j, "Z0 Z1 Y3 Y4 Z5"),
  #   (0.12541600685+0j, "Z0 Z1 Z3"),
  #   (6.34524e-05+0j, "Z0 Z1 Z3 Y4 Y5"),
  #   (0.1454035306+0j, "Z0 Z1 Z3 Z4"),
  #   (6.34524e-05+0j, "Z0 Z1 X4 X5"),
  #   (0.12835690435+0j, "Z0 Z1 Z4 Z5"),
  #   (0.1049891169+0j, "Z0 Z1 Z5"),
  #   (0.1825980059+0j, "Z0 Z2"),
  #   (0.12888642055+0j, "Z0 Z3"),
  #   (8.614685e-05+0j, "Z0 Z3 Y4 Y5"),
  #   (0.12541600685+0j, "Z0 Z3 Z4"),
  #   (8.614685e-05+0j, "Z0 X4 X5"),
  #   (0.1264871853+0j, "Z0 Z4 Z5"),
  #   (0.12541600685+0j, "Z0 Z5"),
  #   (0.00469429555+0j, "X1 X2"),
  #   (8.614685e-05+0j, "X1 X2 Z3"),
  #   (0.0024026016+0j, "X1 X2 Z3 Y4 Y5"),
  #   (6.34524e-05+0j, "X1 X2 Z3 Z4"),
  #   (0.0024026016+0j, "X1 X2 X4 X5"),
  #   (1.67546e-05+0j, "X1 X2 Z4 Z5"),
  #   (6.34524e-05+0j, "X1 X2 Z5"),
  #   (0.0337987177+0j, "X1 Z2 X3"),
  #   (-0.00033647515+0j, "X1 Z2 X3 Y4 Y5"),
  #   (-0.0337987177+0j, "X1 Z2 X3 Z4"),
  #   (0.00033647515+0j, "X1 Z2 Y3 Y4 X5"),
  #   (-0.0371366785+0j, "X1 Z2 Z3 X4"),
  #   (0.0371366785+0j, "X1 Z2 X4 Z5"),
  #   (-0.0003735574+0j, "X1 Z2 Z4 X5"),
  #   (0.0003735574+0j, "X1 Z2 X5"),
  #   (-0.0006790304+0j, "Y1 Y2"),
  #   (0.1825980059+0j, "Z1"),
  #   (-0.00033647515+0j, "Z1 X2 X3"),
  #   (0.0337987177+0j, "Z1 X2 X3 Y4 Y5"),
  #   (0.00033647515+0j, "Z1 X2 X3 Z4"),
  #   (-0.0337987177+0j, "Z1 X2 Y3 Y4 X5"),
  #   (0.0003735574+0j, "Z1 X2 Z3 X4"),
  #   (-0.0003735574+0j, "Z1 X2 X4 Z5"),
  #   (0.0371366785+0j, "Z1 X2 Z4 X5"),
  #   (-0.0371366785+0j, "Z1 X2 X5"),
  #   (-0.27049688095+0j, "Z1 Z2"),
  #   (0.1264871853+0j, "Z1 Z2 Z3"),
  #   (1.67546e-05+0j, "Z1 Z2 Z3 Y4 Y5"),
  #   (0.12835690435+0j, "Z1 Z2 Z3 Z4"),
  #   (1.67546e-05+0j, "Z1 Z2 X4 X5"),
  #   (0.1339138368+0j, "Z1 Z2 Z4 Z5"),
  #   (0.12835690435+0j, "Z1 Z2 Z5"),
  #   (0.00033647515+0j, "X2 X3"),
  #   (-0.0337987177+0j, "X2 X3 Y4 Y5"),
  #   (-0.00033647515+0j, "X2 X3 Z4"),
  #   (0.0337987177+0j, "X2 Y3 Y4 X5"),
  #   (-0.0003735574+0j, "X2 Z3 X4"),
  #   (0.0003735574+0j, "X2 X4 Z5"),
  #   (-0.0371366785+0j, "X2 Z4 X5"),
  #   (0.0371366785+0j, "X2 X5"),
  #   (-0.00284614705+0j, "Z2"),
  #   (-0.02000770565+0j, "Z2 X3 X4"),
  #   (-0.02000770565+0j, "Z2 Y3 Y4 Z5"),
  #   (0.12541600685+0j, "Z2 Z3"),
  #   (6.34524e-05+0j, "Z2 Z3 Y4 Y5"),
  #   (0.1049891169+0j, "Z2 Z3 Z4"),
  #   (6.34524e-05+0j, "Z2 X4 X5"),
  #   (0.12835690435+0j, "Z2 Z4 Z5"),
  #   (0.1454035306+0j, "Z2 Z5"),
  #   (0.0275820241+0j, "X3 X4 Z5"),
  #   (-0.0013459006+0j, "X3 Z4 X5"),
  #   (0.0006729503+0j, "X3 X5"),
  #   (0.0275820241+0j, "Y3 Y4"),
  #   (-0.0006729503+0j, "Y3 Z4 Y5"),
  #   (0.22111814685+0j, "Z3"),
  #   (-0.0006790304+0j, "Z3 X4 X5"),
  #   (0.00469429555+0j, "Z3 Y4 Y5"),
  #   (-0.00284614705+0j, "Z3 Z4"),
  #   (0.20925184455+0j, "Z3 Z4 Z5"),
  #   (0.1825980059+0j, "Z3 Z5"),
  #   (0.00469429555+0j, "X4 X5"),
  #   (-0.0006790304+0j, "Y4 Y5"),
  #   (0.1825980059+0j, "Z4"),
  #   (-0.27049688095+0j, "Z4 Z5"),
  #   (-0.00284614705+0j, "Z5")
  # ]
  num_qubits = 6 
  # Process the Hamiltonian
  processed_hamiltonian = process_hamiltonian(hamiltonian_terms, num_qubits)  
  # print(processed_hamiltonian)
  # Print the result
  # for term in processed_hamiltonian:
  #     print(term)   
  pauli_to_index = {"I": 0, "X": 1, "Y": 2, "Z": 3}   
  # Initialize a zero array for the coefficients (4^n terms)
  dim = 4**num_qubits
  coefficients = np.zeros(dim, dtype=complex)  
  # Define the Hamiltonian terms
  terms = processed_hamiltonian    
  # Populate the coefficients array
  for coeff, pauli_ops in terms:
      # Default: identity operators for all qubits
      full_ops = ["I"] * num_qubits
      for i, op in enumerate(pauli_ops):
       full_ops[i] = op      
      # Compute the index for the term
      index = sum(pauli_to_index[op] * (4**(num_qubits - i - 1)) for i, op in enumerate(full_ops))  
      # Assign the coefficient to the appropriate index
      coefficients[index] = coeff    
  h_alpha = coefficients.real
  # print(f"P4 molecule H_alpha: {h_alpha}")
  # print(f"Length of H_alpha: {len(h_alpha)}")    
  nspin = 6
  H = []
  active = [0,1,2,3,4,5]
  active = np.asarray(active)
  nact   = len(active)
  imap,gmap = pauli_action(active,nspin)
  print(f"Pauli action-imap_shape: {imap.shape}") 
  H.append((active,h_alpha,imap,gmap))

  return H


def H4_molecule():
  hamiltonian_terms = [
    (-1.0554319189+0j, ""),
    (0.005687376+0j, "X0 X1 X2"),
    (-0.0075995998+0j, "X0 X1 X3"),
    (0.03083671315+0j, "X0 X1 X3 X4"),
    (0.0075995998+0j, "X0 X1 X3 Z4"),
    (0.03083671315+0j, "X0 X1 Y3 Y4 Z5"),
    (0.02598776945+0j, "X0 X1 Z3 Y4 Y5"),
    (0.02598776945+0j, "X0 X1 X4 X5"),
    (-0.0075572992+0j, "X0 X1 Z4 X5"),
    (0.0075572992+0j, "X0 X1 X5"),
    (0.0052721056+0j, "X0 Y1 Y2"),
    (0.03194549195+0j, "X0 Y1 Y2 X3 Y4 Y5"),
    (-0.03194549195+0j, "X0 Y1 Y2 Y3 Y4 X5"),
    (0.0144043803+0j, "X0 Y1 Y2 Z3"),
    (0.03225585715+0j, "X0 Y1 Y2 Z3 X4"),
    (-0.00435703135+0j, "X0 Y1 Y2 Z3 Z4"),
    (-0.03225585715+0j, "X0 Y1 Y2 X4 Z5"),
    (0.0149395093+0j, "X0 Y1 Y2 Z4 Z5"),
    (-0.0044758372+0j, "X0 Y1 Y2 Z5"),
    (0.0196517029+0j, "X0 Z1 X2"),
    (-0.04116096325+0j, "X0 Z1 X3"),
    (0.0075995998+0j, "X0 Z1 X3 X4"),
    (0.04116096325+0j, "X0 Z1 X3 Z4"),
    (0.0075995998+0j, "X0 Z1 Y3 Y4 Z5"),
    (-0.01742661745+0j, "X0 Z1 Z3 Y4 Y5"),
    (-0.01742661745+0j, "X0 Z1 X4 X5"),
    (-0.0420817086+0j, "X0 Z1 Z4 X5"),
    (0.0420817086+0j, "X0 Z1 X5"),
    (-0.0321878783+0j, "X0 X2"),
    (0.04116096325+0j, "X0 X3"),
    (-0.0075995998+0j, "X0 X3 X4"),
    (-0.04116096325+0j, "X0 X3 Z4"),
    (-0.0075995998+0j, "X0 Y3 Y4 Z5"),
    (0.01742661745+0j, "X0 Z3 Y4 Y5"),
    (0.01742661745+0j, "X0 X4 X5"),
    (0.0420817086+0j, "X0 Z4 X5"),
    (-0.0420817086+0j, "X0 X5"),
    (0.005687376+0j, "Y0 X1 Y2"),
    (-0.0052721056+0j, "Y0 Y1 X2"),
    (-0.03194549195+0j, "Y0 Y1 X2 X3 Y4 Y5"),
    (0.03194549195+0j, "Y0 Y1 X2 Y3 Y4 X5"),
    (-0.0144043803+0j, "Y0 Y1 X2 Z3"),
    (-0.03225585715+0j, "Y0 Y1 X2 Z3 X4"),
    (0.00435703135+0j, "Y0 Y1 X2 Z3 Z4"),
    (0.03225585715+0j, "Y0 Y1 X2 X4 Z5"),
    (-0.0149395093+0j, "Y0 Y1 X2 Z4 Z5"),
    (0.0044758372+0j, "Y0 Y1 X2 Z5"),
    (-0.0075995998+0j, "Y0 Y1 Z2 X3"),
    (0.03083671315+0j, "Y0 Y1 Z2 X3 X4"),
    (0.0075995998+0j, "Y0 Y1 Z2 X3 Z4"),
    (0.03083671315+0j, "Y0 Y1 Z2 Y3 Y4 Z5"),
    (0.02598776945+0j, "Y0 Y1 Z2 Z3 Y4 Y5"),
    (0.02598776945+0j, "Y0 Y1 Z2 X4 X5"),
    (-0.0075572992+0j, "Y0 Y1 Z2 Z4 X5"),
    (0.0075572992+0j, "Y0 Y1 Z2 X5"),
    (-0.0125361754+0j, "Y0 Z1 Y2"),
    (0.0816198499+0j, "Z0"),
    (-0.0065345441+0j, "Z0 X1"),
    (0.0064257161+0j, "Z0 X1 Z2"),
    (0.03225585715+0j, "Z0 X1 X3 Y4 Y5"),
    (-0.03225585715+0j, "Z0 X1 Y3 Y4 X5"),
    (0.01495995835+0j, "Z0 X1 Z3"),
    (0.0329940343+0j, "Z0 X1 Z3 X4"),
    (-0.0037713819+0j, "Z0 X1 Z3 Z4"),
    (-0.0329940343+0j, "Z0 X1 X4 Z5"),
    (0.01570703925+0j, "Z0 X1 Z4 Z5"),
    (-0.0044085394+0j, "Z0 X1 Z5"),
    (0.01742661745+0j, "Z0 Y1 Y2 X3"),
    (0.02598776945+0j, "Z0 Y1 Y2 X3 X4"),
    (-0.01742661745+0j, "Z0 Y1 Y2 X3 Z4"),
    (0.02598776945+0j, "Z0 Y1 Y2 Y3 Y4 Z5"),
    (0.03639776355+0j, "Z0 Y1 Y2 Z3 Y4 Y5"),
    (0.03639776355+0j, "Z0 Y1 Y2 X4 X5"),
    (0.01819461405+0j, "Z0 Y1 Y2 Z4 X5"),
    (-0.01819461405+0j, "Z0 Y1 Y2 X5"),
    (0.0563406733+0j, "Z0 Z1"),
    (0.10700286605+0j, "Z0 Z1 Z2"),
    (-0.00435703135+0j, "Z0 Z1 X3 Y4 Y5"),
    (0.00435703135+0j, "Z0 Z1 Y3 Y4 X5"),
    (0.0797766048+0j, "Z0 Z1 Z3"),
    (-0.0037713819+0j, "Z0 Z1 Z3 X4"),
    (0.0830856456+0j, "Z0 Z1 Z3 Z4"),
    (0.0037713819+0j, "Z0 Z1 X4 Z5"),
    (0.08260395075+0j, "Z0 Z1 Z4 Z5"),
    (0.08374969635+0j, "Z0 Z1 Z5"),
    (0.09820093645+0j, "Z0 Z2"),
    (0.0144043803+0j, "Z0 X3 Y4 Y5"),
    (-0.0144043803+0j, "Z0 Y3 Y4 X5"),
    (0.08762026935+0j, "Z0 Z3"),
    (0.01495995835+0j, "Z0 Z3 X4"),
    (0.0797766048+0j, "Z0 Z3 Z4"),
    (-0.01495995835+0j, "Z0 X4 Z5"),
    (0.0904876464+0j, "Z0 Z4 Z5"),
    (0.08053651195+0j, "Z0 Z5"),
    (-0.0064257161+0j, "X1"),
    (0.01742661745+0j, "X1 X2 X3"),
    (0.02598776945+0j, "X1 X2 X3 X4"),
    (-0.01742661745+0j, "X1 X2 X3 Z4"),
    (0.02598776945+0j, "X1 X2 Y3 Y4 Z5"),
    (0.03639776355+0j, "X1 X2 Z3 Y4 Y5"),
    (0.03639776355+0j, "X1 X2 X4 X5"),
    (0.01819461405+0j, "X1 X2 Z4 X5"),
    (-0.01819461405+0j, "X1 X2 X5"),
    (0.0065345441+0j, "X1 Z2"),
    (-0.03225585715+0j, "X1 Z2 X3 Y4 Y5"),
    (0.03225585715+0j, "X1 Z2 Y3 Y4 X5"),
    (-0.01495995835+0j, "X1 Z2 Z3"),
    (-0.0329940343+0j, "X1 Z2 Z3 X4"),
    (0.0037713819+0j, "X1 Z2 Z3 Z4"),
    (0.0329940343+0j, "X1 Z2 X4 Z5"),
    (-0.01570703925+0j, "X1 Z2 Z4 Z5"),
    (0.0044085394+0j, "X1 Z2 Z5"),
    (0.07858221425+0j, "Z1"),
    (0.0420817086+0j, "Z1 X2 X3"),
    (-0.0075572992+0j, "Z1 X2 X3 X4"),
    (-0.0420817086+0j, "Z1 X2 X3 Z4"),
    (-0.0075572992+0j, "Z1 X2 Y3 Y4 Z5"),
    (0.01819461405+0j, "Z1 X2 Z3 Y4 Y5"),
    (0.01819461405+0j, "Z1 X2 X4 X5"),
    (0.0437092569+0j, "Z1 X2 Z4 X5"),
    (-0.0437092569+0j, "Z1 X2 X5"),
    (-0.0169452601+0j, "Z1 Z2"),
    (0.0149395093+0j, "Z1 Z2 X3 Y4 Y5"),
    (-0.0149395093+0j, "Z1 Z2 Y3 Y4 X5"),
    (0.0904876464+0j, "Z1 Z2 Z3"),
    (0.01570703925+0j, "Z1 Z2 Z3 X4"),
    (0.08260395075+0j, "Z1 Z2 Z3 Z4"),
    (-0.01570703925+0j, "Z1 Z2 X4 Z5"),
    (0.0945051958+0j, "Z1 Z2 Z4 Z5"),
    (0.0836758296+0j, "Z1 Z2 Z5"),
    (-0.0420817086+0j, "X2 X3"),
    (0.0075572992+0j, "X2 X3 X4"),
    (0.0420817086+0j, "X2 X3 Z4"),
    (0.0075572992+0j, "X2 Y3 Y4 Z5"),
    (-0.01819461405+0j, "X2 Z3 Y4 Y5"),
    (-0.01819461405+0j, "X2 X4 X5"),
    (-0.0437092569+0j, "X2 Z4 X5"),
    (0.0437092569+0j, "X2 X5"),
    (0.0200785332+0j, "Z2"),
    (-0.0044758372+0j, "Z2 X3 Y4 Y5"),
    (0.0044758372+0j, "Z2 Y3 Y4 X5"),
    (0.08053651195+0j, "Z2 Z3"),
    (-0.0044085394+0j, "Z2 Z3 X4"),
    (0.08374969635+0j, "Z2 Z3 Z4"),
    (0.0044085394+0j, "Z2 X4 Z5"),
    (0.0836758296+0j, "Z2 Z4 Z5"),
    (0.08535140905+0j, "Z2 Z5"),
    (0.005687376+0j, "X3 X4 X5"),
    (0.0052721056+0j, "X3 Y4 Y5"),
    (0.0196517029+0j, "X3 Z4 X5"),
    (-0.0321878783+0j, "X3 X5"),
    (0.005687376+0j, "Y3 X4 Y5"),
    (-0.0052721056+0j, "Y3 Y4 X5"),
    (-0.0125361754+0j, "Y3 Z4 Y5"),
    (0.0816198499+0j, "Z3"),
    (-0.0065345441+0j, "Z3 X4"),
    (0.0064257161+0j, "Z3 X4 Z5"),
    (0.0563406733+0j, "Z3 Z4"),
    (0.10700286605+0j, "Z3 Z4 Z5"),
    (0.09820093645+0j, "Z3 Z5"),
    (-0.0064257161+0j, "X4"),
    (0.0065345441+0j, "X4 Z5"),
    (0.07858221425+0j, "Z4"),
    (-0.0169452601+0j, "Z4 Z5"),
    (0.0200785332+0j, "Z5")
  ]
  num_qubits = 6 
  # Process the Hamiltonian
  processed_hamiltonian = process_hamiltonian(hamiltonian_terms, num_qubits)  
  # print(processed_hamiltonian)
  # Print the result
  # for term in processed_hamiltonian:
  #     print(term)   
  pauli_to_index = {"I": 0, "X": 1, "Y": 2, "Z": 3}   
  # Initialize a zero array for the coefficients (4^n terms)
  dim = 4**num_qubits
  coefficients = np.zeros(dim, dtype=complex)  
  # Define the Hamiltonian terms
  terms = processed_hamiltonian    
  # Populate the coefficients array
  for coeff, pauli_ops in terms:
      # Default: identity operators for all qubits
      full_ops = ["I"] * num_qubits
      for i, op in enumerate(pauli_ops):
       full_ops[i] = op      
      # Compute the index for the term
      index = sum(pauli_to_index[op] * (4**(num_qubits - i - 1)) for i, op in enumerate(full_ops))  
      # Assign the coefficient to the appropriate index
      coefficients[index] = coeff    
  h_alpha = coefficients.real
  # print(f"P4 molecule H_alpha: {h_alpha}")
  # print(f"Length of H_alpha: {len(h_alpha)}")    
  nspin = 6
  H = []
  active = [0,1,2,3,4,5]
  active = np.asarray(active)
  nact   = len(active)
  imap,gmap = pauli_action(active,nspin)
  print(f"Pauli action-imap_shape: {imap.shape}") 
  H.append((active,h_alpha,imap,gmap))

  return H


# C2H4 without penalty, scbkt
def C2H4_molecule():

    # # R250
    # hamiltonian_terms = [
    #   (-76.8467771754659, ""),
    #   (0.05305305485, "X0 X1 X3 X4"),
    #   (0.05305305485, "X0 X1 Y3 Y4 Z5"),
    #   (0.04499284895, "X0 X1 Z3 Y4 Y5"),
    #   (0.04499284895, "X0 X1 X4 X5"),
    #   (0.006205216450000001, "X0 Y1 Y2 X3 Y4 Y5"),
    #   (-0.006205216450000001, "X0 Y1 Y2 Y3 Y4 X5"),
    #   (0.006845484200000001, "X0 Y1 Y2 Z3 X4"),
    #   (-0.006845484200000001, "X0 Y1 Y2 X4 Z5"),
    #   (0.0021618360000000003, "X0 Z1 X2"),
    #   (-0.0076129169999999986, "X0 Z1 X3"),
    #   (0.0076129169999999986, "X0 Z1 X3 Z4"),
    #   (-0.0079264022, "X0 Z1 Z4 X5"),
    #   (0.0079264022, "X0 Z1 X5"),
    #   (0.07413289349999999, "X0 X2"),
    #   (0.0076129169999999986, "X0 X3"),
    #   (-0.0076129169999999986, "X0 X3 Z4"),
    #   (0.0079264022, "X0 Z4 X5"),
    #   (-0.0079264022, "X0 X5"),
    #   (-0.006205216450000001, "Y0 Y1 X2 X3 Y4 Y5"),
    #   (0.006205216450000001, "Y0 Y1 X2 Y3 Y4 X5"),
    #   (-0.006845484200000001, "Y0 Y1 X2 Z3 X4"),
    #   (0.006845484200000001, "Y0 Y1 X2 X4 Z5"),
    #   (0.05305305485, "Y0 Y1 Z2 X3 X4"),
    #   (0.05305305485, "Y0 Y1 Z2 Y3 Y4 Z5"),
    #   (0.04499284895, "Y0 Y1 Z2 Z3 Y4 Y5"),
    #   (0.04499284895, "Y0 Y1 Z2 X4 X5"),
    #   (0.0762947295, "Y0 Z1 Y2"),
    #   (0.08157601335000009, "Z0"),
    #   (0.006845484200000001, "Z0 X1 X3 Y4 Y5"),
    #   (-0.006845484200000001, "Z0 X1 Y3 Y4 X5"),
    #   (0.0075630084499999995, "Z0 X1 Z3 X4"),
    #   (-0.0075630084499999995, "Z0 X1 X4 Z5"),
    #   (0.04499284895, "Z0 Y1 Y2 X3 X4"),
    #   (0.04499284895, "Z0 Y1 Y2 Y3 Y4 Z5"),
    #   (0.0588004553, "Z0 Y1 Y2 Z3 Y4 Y5"),
    #   (0.0588004553, "Z0 Y1 Y2 X4 X5"),
    #   (0.0059247673000003, "Z0 Z1"),
    #   (0.12255235649999999, "Z0 Z1 Z2"),
    #   (0.1027503031, "Z0 Z1 Z3"),
    #   (0.1087434331, "Z0 Z1 Z3 Z4"),
    #   (0.10575845115, "Z0 Z1 Z4 Z5"),
    #   (0.10953092105, "Z0 Z1 Z5"),
    #   (0.1946821738, "Z0 Z2"),
    #   (0.12441031265, "Z0 Z3"),
    #   (0.1027503031, "Z0 Z3 Z4"),
    #   (0.1248749456, "Z0 Z4 Z5"),
    #   (0.10269194755, "Z0 Z5"),
    #   (0.04499284895, "X1 X2 X3 X4"),
    #   (0.04499284895, "X1 X2 Y3 Y4 Z5"),
    #   (0.0588004553, "X1 X2 Z3 Y4 Y5"),
    #   (0.0588004553, "X1 X2 X4 X5"),
    #   (-0.006845484200000001, "X1 Z2 X3 Y4 Y5"),
    #   (0.006845484200000001, "X1 Z2 Y3 Y4 X5"),
    #   (-0.0075630084499999995, "X1 Z2 Z3 X4"),
    #   (0.0075630084499999995, "X1 Z2 X4 Z5"),
    #   (0.19271061535, "Z1"),
    #   (0.0079264022, "Z1 X2 X3"),
    #   (-0.0079264022, "Z1 X2 X3 Z4"),
    #   (0.008389974950000002, "Z1 X2 Z4 X5"),
    #   (-0.008389974950000002, "Z1 X2 X5"),
    #   (-0.009224208650000093, "Z1 Z2"),
    #   (0.1248749456, "Z1 Z2 Z3"),
    #   (0.10575845115, "Z1 Z2 Z3 Z4"),
    #   (0.1273254809, "Z1 Z2 Z4 Z5"),
    #   (0.1059632042, "Z1 Z2 Z5"),
    #   (-0.0079264022, "X2 X3"),
    #   (0.0079264022, "X2 X3 Z4"),
    #   (-0.008389974950000002, "X2 Z4 X5"),
    #   (0.008389974950000002, "X2 X5"),
    #   (-0.009162717850000002, "Z2"),
    #   (0.10269194755, "Z2 Z3"),
    #   (0.10953092105, "Z2 Z3 Z4"),
    #   (0.1059632042, "Z2 Z4 Z5"),
    #   (0.11038486985, "Z2 Z5"),
    #   (0.0021618360000000003, "X3 Z4 X5"),
    #   (0.07413289349999999, "X3 X5"),
    #   (0.0762947295, "Y3 Z4 Y5"),
    #   (0.08157601334999989, "Z3"),
    #   (0.0059247673000002235, "Z3 Z4"),
    #   (0.12255235649999999, "Z3 Z4 Z5"),
    #   (0.1946821738, "Z3 Z5"),
    #   (0.19271061535, "Z4"),
    #   (-0.009224208649999927, "Z4 Z5"),
    #   (-0.009162717849999828, "Z5")
    # ]


    # # R300
    # hamiltonian_terms = [
    #   (-76.86958358977776, ""),
    #   (4.140000000000002e-08, "X0"),
    #   (0.059780181599999996, "X0 X1 X3 X4"),
    #   (0.059780181599999996, "X0 X1 Y3 Y4 Z5"),
    #   (0.0498839956, "X0 X1 Z3 Y4 Y5"),
    #   (0.0498839956, "X0 X1 X4 X5"),
    #   (0.006694209149999999, "X0 Y1 Y2 X3 Y4 Y5"),
    #   (-0.006694209149999999, "X0 Y1 Y2 Y3 Y4 X5"),
    #   (0.006989659500000001, "X0 Y1 Y2 Z3 X4"),
    #   (-0.006989659500000001, "X0 Y1 Y2 X4 Z5"),
    #   (-4.140000000000002e-08, "X0 Z1"),
    #   (0.0011147210999999982, "X0 Z1 X2"),
    #   (-0.007327044050000001, "X0 Z1 X3"),
    #   (0.007327044050000001, "X0 Z1 X3 Z4"),
    #   (-0.00754702005, "X0 Z1 Z4 X5"),
    #   (0.00754702005, "X0 Z1 X5"),
    #   (0.08467395109999999, "X0 X2"),
    #   (0.007327044050000001, "X0 X3"),
    #   (-0.007327044050000001, "X0 X3 Z4"),
    #   (0.00754702005, "X0 Z4 X5"),
    #   (-0.00754702005, "X0 X5"),
    #   (-0.006694209149999999, "Y0 Y1 X2 X3 Y4 Y5"),
    #   (0.006694209149999999, "Y0 Y1 X2 Y3 Y4 X5"),
    #   (-0.006989659500000001, "Y0 Y1 X2 Z3 X4"),
    #   (0.006989659500000001, "Y0 Y1 X2 X4 Z5"),
    #   (0.059780181599999996, "Y0 Y1 Z2 X3 X4"),
    #   (0.059780181599999996, "Y0 Y1 Z2 Y3 Y4 Z5"),
    #   (0.0498839956, "Y0 Y1 Z2 Z3 Y4 Y5"),
    #   (0.0498839956, "Y0 Y1 Z2 X4 X5"),
    #   (0.0857886722, "Y0 Z1 Y2"),
    #   (0.05889894144999991, "Z0"),
    #   (0.006989659500000001, "Z0 X1 X3 Y4 Y5"),
    #   (-0.006989659500000001, "Z0 X1 Y3 Y4 X5"),
    #   (0.007300056200000001, "Z0 X1 Z3 X4"),
    #   (-0.007300056200000001, "Z0 X1 X4 Z5"),
    #   (0.0498839956, "Z0 Y1 Y2 X3 X4"),
    #   (0.0498839956, "Z0 Y1 Y2 Y3 Y4 Z5"),
    #   (0.06275221175, "Z0 Y1 Y2 Z3 Y4 Y5"),
    #   (0.06275221175, "Z0 Y1 Y2 X4 X5"),
    #   (0.0018370349999998897, "Z0 Z1"),
    #   (0.0998845609, "Z0 Z1 Z2"),
    #   (0.0977083128, "Z0 Z1 Z3"),
    #   (0.10522872875, "Z0 Z1 Z3 Z4"),
    #   (0.09946885235, "Z0 Z1 Z4 Z5"),
    #   (0.10555512055, "Z0 Z1 Z5"),
    #   (0.18325903059999998, "Z0 Z2"),
    #   (0.1157280149, "Z0 Z3"),
    #   (0.0977083128, "Z0 Z3 Z4"),
    #   (0.1168618337, "Z0 Z4 Z5"),
    #   (0.0977844436, "Z0 Z5"),
    #   (0.0498839956, "X1 X2 X3 X4"),
    #   (0.0498839956, "X1 X2 Y3 Y4 Z5"),
    #   (0.06275221175, "X1 X2 Z3 Y4 Y5"),
    #   (0.06275221175, "X1 X2 X4 X5"),
    #   (-0.006989659500000001, "X1 Z2 X3 Y4 Y5"),
    #   (0.006989659500000001, "X1 Z2 Y3 Y4 X5"),
    #   (-0.007300056200000001, "X1 Z2 Z3 X4"),
    #   (0.007300056200000001, "X1 Z2 X4 Z5"),
    #   (0.1821756169, "Z1"),
    #   (3.900000000000001e-08, "Z1 X2"),
    #   (0.00754702005, "Z1 X2 X3"),
    #   (-0.00754702005, "Z1 X2 X3 Z4"),
    #   (0.007792925700000001, "Z1 X2 Z4 X5"),
    #   (-0.007792925700000001, "Z1 X2 X5"),
    #   (0.020802251200000017, "Z1 Z2"),
    #   (0.1168618337, "Z1 Z2 Z3"),
    #   (0.09946885235, "Z1 Z2 Z3 Z4"),
    #   (0.1184322687, "Z1 Z2 Z4 Z5"),
    #   (0.09958727385, "Z1 Z2 Z5"),
    #   (-3.900000000000001e-08, "X2"),
    #   (-0.00754702005, "X2 X3"),
    #   (0.00754702005, "X2 X3 Z4"),
    #   (-0.007792925700000001, "X2 Z4 X5"),
    #   (0.007792925700000001, "X2 X5"),
    #   (-0.003147482650000158, "Z2"),
    #   (0.0977844436, "Z2 Z3"),
    #   (0.10555512055, "Z2 Z3 Z4"),
    #   (0.09958727385, "Z2 Z4 Z5"),
    #   (0.1058890375, "Z2 Z5"),
    #   (4.140000000000002e-08, "X3"),
    #   (-4.140000000000002e-08, "X3 Z4"),
    #   (0.0011147210999999982, "X3 Z4 X5"),
    #   (0.08467395109999999, "X3 X5"),
    #   (0.0857886722, "Y3 Z4 Y5"),
    #   (0.05889894144999987, "Z3"),
    #   (0.0018370349999999522, "Z3 Z4"),
    #   (0.0998845609, "Z3 Z4 Z5"),
    #   (0.18325903059999998, "Z3 Z5"),
    #   (0.1821756169, "Z4"),
    #   (3.900000000000001e-08, "Z4 X5"),
    #   (0.020802251200000017, "Z4 Z5"),
    #   (-3.900000000000001e-08, "X5"),
    #   (-0.0031474826500000816, "Z5")
    # ]

    # R290 
    hamiltonian_terms = [
      (-76.86754292340729, ""),
      (0.0585808544, "X0 X1 X3 X4"),
      (0.0585808544, "X0 X1 Y3 Y4 Z5"),
      (0.049009139400000006, "X0 X1 Z3 Y4 Y5"),
      (0.049009139400000006, "X0 X1 X4 X5"),
      (0.0066130517500000005, "X0 Y1 Y2 X3 Y4 Y5"),
      (-0.0066130517500000005, "X0 Y1 Y2 Y3 Y4 X5"),
      (0.006962884599999998, "X0 Y1 Y2 Z3 X4"),
      (-0.006962884599999998, "X0 Y1 Y2 X4 Z5"),
      (0.001263541499999998, "X0 Z1 X2"),
      (-0.00734708285, "X0 Z1 X3"),
      (0.00734708285, "X0 Z1 X3 Z4"),
      (-0.00759465535, "X0 Z1 Z4 X5"),
      (0.00759465535, "X0 Z1 X5"),
      (0.08282896810000001, "X0 X2"),
      (0.00734708285, "X0 X3"),
      (-0.00734708285, "X0 X3 Z4"),
      (0.00759465535, "X0 Z4 X5"),
      (-0.00759465535, "X0 X5"),
      (-0.0066130517500000005, "Y0 Y1 X2 X3 Y4 Y5"),
      (0.0066130517500000005, "Y0 Y1 X2 Y3 Y4 X5"),
      (-0.006962884599999998, "Y0 Y1 X2 Z3 X4"),
      (0.006962884599999998, "Y0 Y1 X2 X4 Z5"),
      (0.0585808544, "Y0 Y1 Z2 X3 X4"),
      (0.0585808544, "Y0 Y1 Z2 Y3 Y4 Z5"),
      (0.049009139400000006, "Y0 Y1 Z2 Z3 Y4 Y5"),
      (0.049009139400000006, "Y0 Y1 Z2 X4 X5"),
      (0.08409250960000002, "Y0 Z1 Y2"),
      (0.062322323500000026, "Z0"),
      (0.006962884599999998, "Z0 X1 X3 Y4 Y5"),
      (-0.006962884599999998, "Z0 X1 Y3 Y4 X5"),
      (0.0073340023000000015, "Z0 X1 Z3 X4"),
      (-0.0073340023000000015, "Z0 X1 X4 Z5"),
      (0.049009139400000006, "Z0 Y1 Y2 X3 X4"),
      (0.049009139400000006, "Z0 Y1 Y2 Y3 Y4 Z5"),
      (0.06205891585, "Z0 Y1 Y2 Z3 Y4 Y5"),
      (0.06205891585, "Z0 Y1 Y2 X4 X5"),
      (0.002352544750000171, "Z0 Z1"),
      (0.1037914215, "Z0 Z1 Z2"),
      (0.0985283914, "Z0 Z1 Z3"),
      (0.1058545379, "Z0 Z1 Z3 Z4"),
      (0.1005347858, "Z0 Z1 Z4 Z5"),
      (0.10625010065, "Z0 Z1 Z5"),
      (0.18518981805, "Z0 Z2"),
      (0.1170326718, "Z0 Z3"),
      (0.0985283914, "Z0 Z3 Z4"),
      (0.1181810911, "Z0 Z4 Z5"),
      (0.0986020863, "Z0 Z5"),
      (0.049009139400000006, "X1 X2 X3 X4"),
      (0.049009139400000006, "X1 X2 Y3 Y4 Z5"),
      (0.06205891585, "X1 X2 Z3 Y4 Y5"),
      (0.06205891585, "X1 X2 X4 X5"),
      (-0.006962884599999998, "X1 Z2 X3 Y4 Y5"),
      (0.006962884599999998, "X1 Z2 Y3 Y4 X5"),
      (-0.0073340023000000015, "X1 Z2 Z3 X4"),
      (0.0073340023000000015, "X1 Z2 X4 Z5"),
      (0.1839722378, "Z1"),
      (0.00759465535, "Z1 X2 X3"),
      (-0.00759465535, "Z1 X2 X3 Z4"),
      (0.0078798853, "Z1 X2 Z4 X5"),
      (-0.0078798853, "Z1 X2 X5"),
      (0.016618466149999907, "Z1 Z2"),
      (0.1181810911, "Z1 Z2 Z3"),
      (0.1005347858, "Z1 Z2 Z3 Z4"),
      (0.1199386591, "Z1 Z2 Z4 Z5"),
      (0.10067081455, "Z1 Z2 Z5"),
      (-0.00759465535, "X2 X3"),
      (0.00759465535, "X2 X3 Z4"),
      (-0.0078798853, "X2 Z4 X5"),
      (0.0078798853, "X2 X5"),
      (-0.0039024956000000693, "Z2"),
      (0.0986020863, "Z2 Z3"),
      (0.10625010065, "Z2 Z3 Z4"),
      (0.10067081455, "Z2 Z4 Z5"),
      (0.10665746945, "Z2 Z5"),
      (0.001263541499999998, "X3 Z4 X5"),
      (0.08282896810000001, "X3 X5"),
      (0.08409250960000002, "Y3 Z4 Y5"),
      (0.062322323500000026, "Z3"),
      (0.00235254475000006, "Z3 Z4"),
      (0.1037914215, "Z3 Z4 Z5"),
      (0.18518981805, "Z3 Z5"),
      (0.1839722378, "Z4"),
      (0.016618466149999796, "Z4 Z5"),
      (-0.003902495599999986, "Z5")
    ]

    num_qubits = 6 
    # Process the Hamiltonian
    processed_hamiltonian = process_hamiltonian(hamiltonian_terms, num_qubits)  
    print(processed_hamiltonian)
    # Print the result
    # for term in processed_hamiltonian:
    #     print(term)   
    pauli_to_index = {"I": 0, "X": 1, "Y": 2, "Z": 3}   
    # Initialize a zero array for the coefficients (4^n terms)
    dim = 4**num_qubits
    coefficients = np.zeros(dim, dtype=complex)

    # Define the Hamiltonian terms
    terms = processed_hamiltonian

    # Populate the coefficients array
    for coeff, pauli_ops in terms:
        # Default: identity operators for all qubits
        full_ops = ["I"] * num_qubits
        for i, op in enumerate(pauli_ops):
         full_ops[i] = op      
        # Compute the index for the term
        index = sum(pauli_to_index[op] * (4**(num_qubits - i - 1)) for i, op in enumerate(full_ops))  
        # Assign the coefficient to the appropriate index
        coefficients[index] = coeff    
    h_alpha = coefficients.real
    # print(f"C2H4 molecule H_alpha: {h_alpha}")
    # print(f"Length of H_alpha: {len(h_alpha)}") 

    nspin = 6
    H = []
    active = [0,1,2,3,4,5]
    active = np.asarray(active)
    nact   = len(active)
    imap,gmap = pauli_action(active,nspin)
    print(f"Pauli action-imap_shape: {imap.shape}") 
    H.append((active,h_alpha,imap,gmap))

    return H


# C2H4 with penalty, scbkt, bs1
def C2H4_molecule_s2_bs1():
  
#   R300
  hamiltonian_terms = [
    (-76.8695835896+0j, ""),
    (2.865e-08+0j, "X0"),
    (-0.0852313112+0j, "X0 X1 Z2"),
    (0.0597801816+0j, "X0 X1 X3 X4"),
    (0.0597801816+0j, "X0 X1 Y3 Y4 Z5"),
    (0.04988399535+0j, "X0 X1 Z3 Z4"),
    (-0.04988399535+0j, "X0 X1 Z5"),
    (2.315e-08+0j, "X0 Y1 Y2"),
    (0.00031641745+0j, "X0 Y1 Y2 X3"),
    (0.0070106266+0j, "X0 Y1 Y2 X3 Y4 Y5"),
    (-0.00031641745+0j, "X0 Y1 Y2 X3 Z4"),
    (-0.0070106266+0j, "X0 Y1 Y2 Y3 Y4 X5"),
    (-0.0002786803+0j, "X0 Y1 Y2 Z3 X4"),
    (0.0002786803+0j, "X0 Y1 Y2 X4 Z5"),
    (0.00726833975+0j, "X0 Y1 Y2 Z4 X5"),
    (-0.00726833975+0j, "X0 Y1 Y2 X5"),
    (-2.865e-08+0j, "X0 Z1"),
    (0.0011147212+0j, "X0 Z1 X2"),
    (-0.0070106266+0j, "X0 Z1 X3"),
    (-0.00031641745+0j, "X0 Z1 X3 Y4 Y5"),
    (0.0070106266+0j, "X0 Z1 X3 Z4"),
    (0.00031641745+0j, "X0 Z1 Y3 Y4 X5"),
    (0.00726833975+0j, "X0 Z1 Z3 X4"),
    (-0.00726833975+0j, "X0 Z1 X4 Z5"),
    (-0.0002786803+0j, "X0 Z1 Z4 X5"),
    (0.0002786803+0j, "X0 Z1 X5"),
    (-0.0005573606+0j, "X0 X2"),
    (0.0070106266+0j, "X0 X3"),
    (0.00031641745+0j, "X0 X3 Y4 Y5"),
    (-0.0070106266+0j, "X0 X3 Z4"),
    (-0.00031641745+0j, "X0 Y3 Y4 X5"),
    (-0.00726833975+0j, "X0 Z3 X4"),
    (0.00726833975+0j, "X0 X4 Z5"),
    (0.0002786803+0j, "X0 Z4 X5"),
    (-0.0002786803+0j, "X0 X5"),
    (-0.0852313112+0j, "Y0 Y1"),
    (-2.315e-08+0j, "Y0 Y1 X2"),
    (-0.00031641745+0j, "Y0 Y1 X2 X3"),
    (-0.0070106266+0j, "Y0 Y1 X2 X3 Y4 Y5"),
    (0.00031641745+0j, "Y0 Y1 X2 X3 Z4"),
    (0.0070106266+0j, "Y0 Y1 X2 Y3 Y4 X5"),
    (0.0002786803+0j, "Y0 Y1 X2 Z3 X4"),
    (-0.0002786803+0j, "Y0 Y1 X2 X4 Z5"),
    (-0.00726833975+0j, "Y0 Y1 X2 Z4 X5"),
    (0.00726833975+0j, "Y0 Y1 X2 X5"),
    (0.0597801816+0j, "Y0 Y1 Z2 X3 X4"),
    (0.0597801816+0j, "Y0 Y1 Z2 Y3 Y4 Z5"),
    (0.04988399535+0j, "Y0 Y1 Z2 Z3 Z4"),
    (-0.04988399535+0j, "Y0 Y1 Z2 Z5"),
    (0.0005573606+0j, "Y0 Z1 Y2"),
    (0.05889894345+0j, "Z0"),
    (-1.96e-08+0j, "Z0 X1"),
    (0.0005417069+0j, "Z0 X1 X2"),
    (-0.00726833975+0j, "Z0 X1 X3"),
    (-0.0002786803+0j, "Z0 X1 X3 Y4 Y5"),
    (0.00726833975+0j, "Z0 X1 X3 Z4"),
    (0.0002786803+0j, "Z0 X1 Y3 Y4 X5"),
    (0.0075464909+0j, "Z0 X1 Z3 X4"),
    (-0.0075464909+0j, "Z0 X1 X4 Z5"),
    (-0.00024643475+0j, "Z0 X1 Z4 X5"),
    (0.00024643475+0j, "Z0 X1 X5"),
    (-0.00249225885+0j, "Z0 Y1 Y2"),
    (3.806545e-05+0j, "Z0 Y1 Y2 Z3"),
    (1.8813e-06+0j, "Z0 Y1 Y2 Z3 Y4 Y5"),
    (0.0001650772+0j, "Z0 Y1 Y2 Z3 Z4"),
    (1.8813e-06+0j, "Z0 Y1 Y2 X4 X5"),
    (5.921075e-05+0j, "Z0 Y1 Y2 Z4 Z5"),
    (0.0001650772+0j, "Z0 Y1 Y2 Z5"),
    (-0.0006552221+0j, "Z0 Z1"),
    (0.0998845604+0j, "Z0 Z1 Z2"),
    (0.04988399535+0j, "Z0 Z1 X3 X4"),
    (0.04988399535+0j, "Z0 Z1 Y3 Y4 Z5"),
    (0.0977463777+0j, "Z0 Z1 Z3"),
    (0.0001650772+0j, "Z0 Z1 Z3 Y4 Y5"),
    (0.1683092118+0j, "Z0 Z1 Z3 Z4"),
    (0.0001650772+0j, "Z0 Z1 X4 X5"),
    (0.0995280626+0j, "Z0 Z1 Z4 Z5"),
    (0.0428047896+0j, "Z0 Z1 Z5"),
    (0.1827173228+0j, "Z0 Z2"),
    (0.1157280149+0j, "Z0 Z3"),
    (3.806545e-05+0j, "Z0 Z3 Y4 Y5"),
    (0.0977463777+0j, "Z0 Z3 Z4"),
    (3.806545e-05+0j, "Z0 X4 X5"),
    (0.1168618337+0j, "Z0 Z4 Z5"),
    (0.0977463777+0j, "Z0 Z5"),
    (-0.00249225885+0j, "X1 X2"),
    (3.806545e-05+0j, "X1 X2 Z3"),
    (1.8813e-06+0j, "X1 X2 Z3 Y4 Y5"),
    (0.0001650772+0j, "X1 X2 Z3 Z4"),
    (1.8813e-06+0j, "X1 X2 X4 X5"),
    (5.921075e-05+0j, "X1 X2 Z4 Z5"),
    (0.0001650772+0j, "X1 X2 Z5"),
    (1.96e-08+0j, "X1 Z2"),
    (0.00726833975+0j, "X1 Z2 X3"),
    (0.0002786803+0j, "X1 Z2 X3 Y4 Y5"),
    (-0.00726833975+0j, "X1 Z2 X3 Z4"),
    (-0.0002786803+0j, "X1 Z2 Y3 Y4 X5"),
    (-0.0075464909+0j, "X1 Z2 Z3 X4"),
    (0.0075464909+0j, "X1 Z2 X4 Z5"),
    (0.00024643475+0j, "X1 Z2 Z4 X5"),
    (-0.00024643475+0j, "X1 Z2 X5"),
    (0.0005417069+0j, "Y1 Y2"),
    (0.1827173228+0j, "Z1"),
    (1.645e-08+0j, "Z1 X2"),
    (0.0002786803+0j, "Z1 X2 X3"),
    (0.00726833975+0j, "Z1 X2 X3 Y4 Y5"),
    (-0.0002786803+0j, "Z1 X2 X3 Z4"),
    (-0.00726833975+0j, "Z1 X2 Y3 Y4 X5"),
    (-0.00024643475+0j, "Z1 X2 Z3 X4"),
    (0.00024643475+0j, "Z1 X2 X4 Z5"),
    (0.0075464909+0j, "Z1 X2 Z4 X5"),
    (-0.0075464909+0j, "Z1 X2 X5"),
    (0.0208022531+0j, "Z1 Z2"),
    (0.1168618337+0j, "Z1 Z2 Z3"),
    (5.921075e-05+0j, "Z1 Z2 Z3 Y4 Y5"),
    (0.0995280626+0j, "Z1 Z2 Z3 Z4"),
    (5.921075e-05+0j, "Z1 Z2 X4 X5"),
    (0.1184322687+0j, "Z1 Z2 Z4 Z5"),
    (0.0995280626+0j, "Z1 Z2 Z5"),
    (-1.645e-08+0j, "X2"),
    (-0.0002786803+0j, "X2 X3"),
    (-0.00726833975+0j, "X2 X3 Y4 Y5"),
    (0.0002786803+0j, "X2 X3 Z4"),
    (0.00726833975+0j, "X2 Y3 Y4 X5"),
    (0.00024643475+0j, "X2 Z3 X4"),
    (-0.00024643475+0j, "X2 X4 Z5"),
    (-0.0075464909+0j, "X2 Z4 X5"),
    (0.0075464909+0j, "X2 X5"),
    (-0.00065522285+0j, "Z2"),
    (-0.04988399535+0j, "Z2 X3 X4"),
    (-0.04988399535+0j, "Z2 Y3 Y4 Z5"),
    (0.0977463777+0j, "Z2 Z3"),
    (0.0001650772+0j, "Z2 Z3 Y4 Y5"),
    (0.0428047896+0j, "Z2 Z3 Z4"),
    (0.0001650772+0j, "Z2 X4 X5"),
    (0.0995280626+0j, "Z2 Z4 Z5"),
    (0.1683092118+0j, "Z2 Z5"),
    (2.865e-08+0j, "X3"),
    (-0.0852313112+0j, "X3 X4 Z5"),
    (2.315e-08+0j, "X3 Y4 Y5"),
    (-2.865e-08+0j, "X3 Z4"),
    (0.0011147212+0j, "X3 Z4 X5"),
    (-0.0005573606+0j, "X3 X5"),
    (-0.0852313112+0j, "Y3 Y4"),
    (-2.315e-08+0j, "Y3 Y4 X5"),
    (0.0005573606+0j, "Y3 Z4 Y5"),
    (0.05889894345+0j, "Z3"),
    (-1.96e-08+0j, "Z3 X4"),
    (0.0005417069+0j, "Z3 X4 X5"),
    (-0.00249225885+0j, "Z3 Y4 Y5"),
    (-0.0006552221+0j, "Z3 Z4"),
    (0.0998845604+0j, "Z3 Z4 Z5"),
    (0.1827173228+0j, "Z3 Z5"),
    (-0.00249225885+0j, "X4 X5"),
    (1.96e-08+0j, "X4 Z5"),
    (0.0005417069+0j, "Y4 Y5"),
    (0.1827173228+0j, "Z4"),
    (1.645e-08+0j, "Z4 X5"),
    (0.0208022531+0j, "Z4 Z5"),
    (-1.645e-08+0j, "X5"),
    (-0.00065522285+0j, "Z5")
  ]

#   # R290
#   hamiltonian_terms = [
#     (-76.8675429234+0j, ""),
#     (-0.0834607389+0j, "X0 X1 Z2"),
#     (0.0585808544+0j, "X0 X1 X3 X4"),
#     (0.0585808544+0j, "X0 X1 Y3 Y4 Z5"),
#     (0.04900913945+0j, "X0 X1 Z3 Z4"),
#     (-0.04900913945+0j, "X0 X1 Z5"),
#     (0.00036701555+0j, "X0 Y1 Y2 X3"),
#     (0.0069800673+0j, "X0 Y1 Y2 X3 Y4 Y5"),
#     (-0.00036701555+0j, "X0 Y1 Y2 X3 Z4"),
#     (-0.0069800673+0j, "X0 Y1 Y2 Y3 Y4 X5"),
#     (-0.00031588535+0j, "X0 Y1 Y2 Z3 X4"),
#     (0.00031588535+0j, "X0 Y1 Y2 X4 Z5"),
#     (0.00727877+0j, "X0 Y1 Y2 Z4 X5"),
#     (-0.00727877+0j, "X0 Y1 Y2 X5"),
#     (0.0012635414+0j, "X0 Z1 X2"),
#     (-0.0069800673+0j, "X0 Z1 X3"),
#     (-0.00036701555+0j, "X0 Z1 X3 Y4 Y5"),
#     (0.0069800673+0j, "X0 Z1 X3 Z4"),
#     (0.00036701555+0j, "X0 Z1 Y3 Y4 X5"),
#     (0.00727877+0j, "X0 Z1 Z3 X4"),
#     (-0.00727877+0j, "X0 Z1 X4 Z5"),
#     (-0.00031588535+0j, "X0 Z1 Z4 X5"),
#     (0.00031588535+0j, "X0 Z1 X5"),
#     (-0.0006317707+0j, "X0 X2"),
#     (0.0069800673+0j, "X0 X3"),
#     (0.00036701555+0j, "X0 X3 Y4 Y5"),
#     (-0.0069800673+0j, "X0 X3 Z4"),
#     (-0.00036701555+0j, "X0 Y3 Y4 X5"),
#     (-0.00727877+0j, "X0 Z3 X4"),
#     (0.00727877+0j, "X0 X4 Z5"),
#     (0.00031588535+0j, "X0 Z4 X5"),
#     (-0.00031588535+0j, "X0 X5"),
#     (-0.0834607389+0j, "Y0 Y1"),
#     (-0.00036701555+0j, "Y0 Y1 X2 X3"),
#     (-0.0069800673+0j, "Y0 Y1 X2 X3 Y4 Y5"),
#     (0.00036701555+0j, "Y0 Y1 X2 X3 Z4"),
#     (0.0069800673+0j, "Y0 Y1 X2 Y3 Y4 X5"),
#     (0.00031588535+0j, "Y0 Y1 X2 Z3 X4"),
#     (-0.00031588535+0j, "Y0 Y1 X2 X4 Z5"),
#     (-0.00727877+0j, "Y0 Y1 X2 Z4 X5"),
#     (0.00727877+0j, "Y0 Y1 X2 X5"),
#     (0.0585808544+0j, "Y0 Y1 Z2 X3 X4"),
#     (0.0585808544+0j, "Y0 Y1 Z2 Y3 Y4 Z5"),
#     (0.04900913945+0j, "Y0 Y1 Z2 Z3 Z4"),
#     (-0.04900913945+0j, "Y0 Y1 Z2 Z5"),
#     (0.0006317707+0j, "Y0 Z1 Y2"),
#     (0.0623223231+0j, "Z0"),
#     (0.0006087901+0j, "Z0 X1 X2"),
#     (-0.00727877+0j, "Z0 X1 X3"),
#     (-0.00031588535+0j, "Z0 X1 X3 Y4 Y5"),
#     (0.00727877+0j, "Z0 X1 X3 Z4"),
#     (0.00031588535+0j, "Z0 X1 Y3 Y4 X5"),
#     (0.0076069438+0j, "Z0 X1 Z3 X4"),
#     (-0.0076069438+0j, "Z0 X1 X4 Z5"),
#     (-0.0002729415+0j, "Z0 X1 Z4 X5"),
#     (0.0002729415+0j, "Z0 X1 X5"),
#     (-0.00312752015+0j, "Z0 Y1 Y2"),
#     (3.68475e-05+0j, "Z0 Y1 Y2 Z3"),
#     (2.9515e-06+0j, "Z0 Y1 Y2 Z3 Y4 Y5"),
#     (0.00020073295+0j, "Z0 Y1 Y2 Z3 Z4"),
#     (2.9515e-06+0j, "Z0 Y1 Y2 X4 X5"),
#     (6.801445e-05+0j, "Z0 Y1 Y2 Z4 Z5"),
#     (0.00020073295+0j, "Z0 Y1 Y2 Z5"),
#     (-0.00077497585+0j, "Z0 Z1"),
#     (0.1037914216+0j, "Z0 Z1 Z2"),
#     (0.04900913945+0j, "Z0 Z1 X3 X4"),
#     (0.04900913945+0j, "Z0 Z1 Y3 Y4 Z5"),
#     (0.09856523895+0j, "Z0 Z1 Z3"),
#     (0.00020073295+0j, "Z0 Z1 Z3 Y4 Y5"),
#     (0.1683119684+0j, "Z0 Z1 Z3 Z4"),
#     (0.00020073295+0j, "Z0 Z1 X4 X5"),
#     (0.1006028003+0j, "Z0 Z1 Z4 Z5"),
#     (0.0441941364+0j, "Z0 Z1 Z5"),
#     (0.18458102815+0j, "Z0 Z2"),
#     (0.1170326718+0j, "Z0 Z3"),
#     (3.68475e-05+0j, "Z0 Z3 Y4 Y5"),
#     (0.09856523895+0j, "Z0 Z3 Z4"),
#     (3.68475e-05+0j, "Z0 X4 X5"),
#     (0.1181810911+0j, "Z0 Z4 Z5"),
#     (0.09856523895+0j, "Z0 Z5"),
#     (-0.00312752015+0j, "X1 X2"),
#     (3.68475e-05+0j, "X1 X2 Z3"),
#     (2.9515e-06+0j, "X1 X2 Z3 Y4 Y5"),
#     (0.00020073295+0j, "X1 X2 Z3 Z4"),
#     (2.9515e-06+0j, "X1 X2 X4 X5"),
#     (6.801445e-05+0j, "X1 X2 Z4 Z5"),
#     (0.00020073295+0j, "X1 X2 Z5"),
#     (0.00727877+0j, "X1 Z2 X3"),
#     (0.00031588535+0j, "X1 Z2 X3 Y4 Y5"),
#     (-0.00727877+0j, "X1 Z2 X3 Z4"),
#     (-0.00031588535+0j, "X1 Z2 Y3 Y4 X5"),
#     (-0.0076069438+0j, "X1 Z2 Z3 X4"),
#     (0.0076069438+0j, "X1 Z2 X4 Z5"),
#     (0.0002729415+0j, "X1 Z2 Z4 X5"),
#     (-0.0002729415+0j, "X1 Z2 X5"),
#     (0.0006087901+0j, "Y1 Y2"),
#     (0.18458102815+0j, "Z1"),
#     (0.00031588535+0j, "Z1 X2 X3"),
#     (0.00727877+0j, "Z1 X2 X3 Y4 Y5"),
#     (-0.00031588535+0j, "Z1 X2 X3 Z4"),
#     (-0.00727877+0j, "Z1 X2 Y3 Y4 X5"),
#     (-0.0002729415+0j, "Z1 X2 Z3 X4"),
#     (0.0002729415+0j, "Z1 X2 X4 Z5"),
#     (0.0076069438+0j, "Z1 X2 Z4 X5"),
#     (-0.0076069438+0j, "Z1 X2 X5"),
#     (0.01661846565+0j, "Z1 Z2"),
#     (0.1181810911+0j, "Z1 Z2 Z3"),
#     (6.801445e-05+0j, "Z1 Z2 Z3 Y4 Y5"),
#     (0.1006028003+0j, "Z1 Z2 Z3 Z4"),
#     (6.801445e-05+0j, "Z1 Z2 X4 X5"),
#     (0.1199386591+0j, "Z1 Z2 Z4 Z5"),
#     (0.1006028003+0j, "Z1 Z2 Z5"),
#     (-0.00031588535+0j, "X2 X3"),
#     (-0.00727877+0j, "X2 X3 Y4 Y5"),
#     (0.00031588535+0j, "X2 X3 Z4"),
#     (0.00727877+0j, "X2 Y3 Y4 X5"),
#     (0.0002729415+0j, "X2 Z3 X4"),
#     (-0.0002729415+0j, "X2 X4 Z5"),
#     (-0.0076069438+0j, "X2 Z4 X5"),
#     (0.0076069438+0j, "X2 X5"),
#     (-0.0007749756+0j, "Z2"),
#     (-0.04900913945+0j, "Z2 X3 X4"),
#     (-0.04900913945+0j, "Z2 Y3 Y4 Z5"),
#     (0.09856523895+0j, "Z2 Z3"),
#     (0.00020073295+0j, "Z2 Z3 Y4 Y5"),
#     (0.0441941364+0j, "Z2 Z3 Z4"),
#     (0.00020073295+0j, "Z2 X4 X5"),
#     (0.1006028003+0j, "Z2 Z4 Z5"),
#     (0.1683119684+0j, "Z2 Z5"),
#     (-0.0834607389+0j, "X3 X4 Z5"),
#     (0.0012635414+0j, "X3 Z4 X5"),
#     (-0.0006317707+0j, "X3 X5"),
#     (-0.0834607389+0j, "Y3 Y4"),
#     (0.0006317707+0j, "Y3 Z4 Y5"),
#     (0.0623223231+0j, "Z3"),
#     (0.0006087901+0j, "Z3 X4 X5"),
#     (-0.00312752015+0j, "Z3 Y4 Y5"),
#     (-0.00077497585+0j, "Z3 Z4"),
#     (0.1037914216+0j, "Z3 Z4 Z5"),
#     (0.18458102815+0j, "Z3 Z5"),
#     (-0.00312752015+0j, "X4 X5"),
#     (0.0006087901+0j, "Y4 Y5"),
#     (0.18458102815+0j, "Z4"),
#     (0.01661846565+0j, "Z4 Z5"),
#     (-0.0007749756+0j, "Z5")
#   ]

  num_qubits = 6 
  # Process the Hamiltonian
  processed_hamiltonian = process_hamiltonian(hamiltonian_terms, num_qubits)  
  print(processed_hamiltonian)
  # Print the result
  # for term in processed_hamiltonian:
  #     print(term)   
  pauli_to_index = {"I": 0, "X": 1, "Y": 2, "Z": 3}   
  # Initialize a zero array for the coefficients (4^n terms)
  dim = 4**num_qubits
  coefficients = np.zeros(dim, dtype=complex)  
  # Define the Hamiltonian terms
  terms = processed_hamiltonian  
  # Populate the coefficients array
  for coeff, pauli_ops in terms:
      # Default: identity operators for all qubits
      full_ops = ["I"] * num_qubits
      for i, op in enumerate(pauli_ops):
       full_ops[i] = op      
      # Compute the index for the term
      index = sum(pauli_to_index[op] * (4**(num_qubits - i - 1)) for i, op in enumerate(full_ops))  
      # Assign the coefficient to the appropriate index
      coefficients[index] = coeff    
  h_alpha = coefficients.real
  # print(f"C2H4 molecule H_alpha: {h_alpha}")
  # print(f"Length of H_alpha: {len(h_alpha)}")   
  nspin = 6
  H = []
  active = [0,1,2,3,4,5]
  active = np.asarray(active)
  nact   = len(active)
  imap,gmap = pauli_action(active,nspin)
  print(f"Pauli action-imap_shape: {imap.shape}") 
  H.append((active,h_alpha,imap,gmap))

  return H


# C2H4 with penalty, scbkt, bs2
def C2H4_molecule_s2_bs2():

    # # R250
    # hamiltonian_terms = [
    #   (-76.8467771837+0j, ""),
    #   (-0.0001451835+0j, "X0 X1 X3"),
    #   (5.6836e-05+0j, "X0 X1 X3 X4"),
    #   (0.0001451835+0j, "X0 X1 X3 Z4"),
    #   (5.6836e-05+0j, "X0 X1 Y3 Y4 Z5"),
    #   (1.820775e-05+0j, "X0 X1 Z3 Y4 Y5"),
    #   (1.820775e-05+0j, "X0 X1 X4 X5"),
    #   (0.0005337125+0j, "X0 X1 Z4 X5"),
    #   (-0.0005337125+0j, "X0 X1 X5"),
    #   (0.0454001107+0j, "X0 Y1 Y2"),
    #   (0.00049647555+0j, "X0 Y1 Y2 X3 Y4 Y5"),
    #   (-0.00049647555+0j, "X0 Y1 Y2 Y3 Y4 X5"),
    #   (-0.00072879245+0j, "X0 Y1 Y2 Z3"),
    #   (6.577715e-05+0j, "X0 Y1 Y2 Z3 X4"),
    #   (-0.0015698514+0j, "X0 Y1 Y2 Z3 Z4"),
    #   (-6.577715e-05+0j, "X0 Y1 Y2 X4 Z5"),
    #   (-0.0015698514+0j, "X0 Y1 Y2 Z4 Z5"),
    #   (-0.00072879245+0j, "X0 Y1 Y2 Z5"),
    #   (0.0020666972+0j, "X0 Z1 X2"),
    #   (-0.0148287223+0j, "X0 Z1 X3"),
    #   (0.0001451835+0j, "X0 Z1 X3 X4"),
    #   (0.0148287223+0j, "X0 Z1 X3 Z4"),
    #   (0.0001451835+0j, "X0 Z1 Y3 Y4 Z5"),
    #   (-0.0005337125+0j, "X0 Z1 Z3 Y4 Y5"),
    #   (-0.0005337125+0j, "X0 Z1 X4 X5"),
    #   (-0.00109912575+0j, "X0 Z1 Z4 X5"),
    #   (0.00109912575+0j, "X0 Z1 X5"),
    #   (-0.002161836+0j, "X0 X2"),
    #   (0.0148287223+0j, "X0 X3"),
    #   (-0.0001451835+0j, "X0 X3 X4"),
    #   (-0.0148287223+0j, "X0 X3 Z4"),
    #   (-0.0001451835+0j, "X0 Y3 Y4 Z5"),
    #   (0.0005337125+0j, "X0 Z3 Y4 Y5"),
    #   (0.0005337125+0j, "X0 X4 X5"),
    #   (0.00109912575+0j, "X0 Z4 X5"),
    #   (-0.00109912575+0j, "X0 X5"),
    #   (-0.0454001107+0j, "Y0 Y1 X2"),
    #   (-0.00049647555+0j, "Y0 Y1 X2 X3 Y4 Y5"),
    #   (0.00049647555+0j, "Y0 Y1 X2 Y3 Y4 X5"),
    #   (0.00072879245+0j, "Y0 Y1 X2 Z3"),
    #   (-6.577715e-05+0j, "Y0 Y1 X2 Z3 X4"),
    #   (0.0015698514+0j, "Y0 Y1 X2 Z3 Z4"),
    #   (6.577715e-05+0j, "Y0 Y1 X2 X4 Z5"),
    #   (0.0015698514+0j, "Y0 Y1 X2 Z4 Z5"),
    #   (0.00072879245+0j, "Y0 Y1 X2 Z5"),
    #   (-0.0001451835+0j, "Y0 Y1 Z2 X3"),
    #   (5.6836e-05+0j, "Y0 Y1 Z2 X3 X4"),
    #   (0.0001451835+0j, "Y0 Y1 Z2 X3 Z4"),
    #   (5.6836e-05+0j, "Y0 Y1 Z2 Y3 Y4 Z5"),
    #   (1.820775e-05+0j, "Y0 Y1 Z2 Z3 Y4 Y5"),
    #   (1.820775e-05+0j, "Y0 Y1 Z2 X4 X5"),
    #   (0.0005337125+0j, "Y0 Y1 Z2 Z4 X5"),
    #   (-0.0005337125+0j, "Y0 Y1 Z2 X5"),
    #   (-9.51388e-05+0j, "Y0 Z1 Y2"),
    #   (0.03617589295+0j, "Z0"),
    #   (0.0075437426+0j, "Z0 X1"),
    #   (6.577715e-05+0j, "Z0 X1 X3 Y4 Y5"),
    #   (-6.577715e-05+0j, "Z0 X1 Y3 Y4 X5"),
    #   (-3.659945e-05+0j, "Z0 X1 Z3"),
    #   (1.661525e-05+0j, "Z0 X1 Z3 X4"),
    #   (-0.0004103593+0j, "Z0 X1 Z3 Z4"),
    #   (-1.661525e-05+0j, "Z0 X1 X4 Z5"),
    #   (-0.00041035925+0j, "Z0 X1 Z4 Z5"),
    #   (-3.659945e-05+0j, "Z0 X1 Z5"),
    #   (0.0005337125+0j, "Z0 Y1 Y2 X3"),
    #   (1.820775e-05+0j, "Z0 Y1 Y2 X3 X4"),
    #   (-0.0005337125+0j, "Z0 Y1 Y2 X3 Z4"),
    #   (1.820775e-05+0j, "Z0 Y1 Y2 Y3 Y4 Z5"),
    #   (5.6836e-05+0j, "Z0 Y1 Y2 Z3 Y4 Y5"),
    #   (5.6836e-05+0j, "Z0 Y1 Y2 X4 X5"),
    #   (-0.0001451835+0j, "Z0 Y1 Y2 Z4 X5"),
    #   (0.0001451835+0j, "Z0 Y1 Y2 X5"),
    #   (-0.00161898535+0j, "Z0 Z1"),
    #   (0.11848258185+0j, "Z0 Z1 Z2"),
    #   (-0.0015698514+0j, "Z0 Z1 X3 Y4 Y5"),
    #   (0.0015698514+0j, "Z0 Z1 Y3 Y4 X5"),
    #   (0.1492838239+0j, "Z0 Z1 Z3"),
    #   (-0.0004103593+0j, "Z0 Z1 Z3 X4"),
    #   (0.16834798935+0j, "Z0 Z1 Z3 Z4"),
    #   (0.0004103593+0j, "Z0 Z1 X4 Z5"),
    #   (0.05074708035+0j, "Z0 Z1 Z4 Z5"),
    #   (0.05929812695+0j, "Z0 Z1 Z5"),
    #   (0.12255235515+0j, "Z0 Z2"),
    #   (-0.00072879245+0j, "Z0 X3 Y4 Y5"),
    #   (0.00072879245+0j, "Z0 Y3 Y4 X5"),
    #   (0.17842447395+0j, "Z0 Z3"),
    #   (-3.659945e-05+0j, "Z0 Z3 X4"),
    #   (0.1492838239+0j, "Z0 Z3 Z4"),
    #   (3.659945e-05+0j, "Z0 X4 Z5"),
    #   (0.0592981269+0j, "Z0 Z4 Z5"),
    #   (0.0723183656+0j, "Z0 Z5"),
    #   (0.0005337125+0j, "X1 X2 X3"),
    #   (1.820775e-05+0j, "X1 X2 X3 X4"),
    #   (-0.0005337125+0j, "X1 X2 X3 Z4"),
    #   (1.820775e-05+0j, "X1 X2 Y3 Y4 Z5"),
    #   (5.6836e-05+0j, "X1 X2 Z3 Y4 Y5"),
    #   (5.6836e-05+0j, "X1 X2 X4 X5"),
    #   (-0.0001451835+0j, "X1 X2 Z4 X5"),
    #   (0.0001451835+0j, "X1 X2 X5"),
    #   (-0.0075437426+0j, "X1 Z2"),
    #   (-6.577715e-05+0j, "X1 Z2 X3 Y4 Y5"),
    #   (6.577715e-05+0j, "X1 Z2 Y3 Y4 X5"),
    #   (3.659945e-05+0j, "X1 Z2 Z3"),
    #   (-1.661525e-05+0j, "X1 Z2 Z3 X4"),
    #   (0.0004103593+0j, "X1 Z2 Z3 Z4"),
    #   (1.661525e-05+0j, "X1 Z2 X4 Z5"),
    #   (0.00041035925+0j, "X1 Z2 Z4 Z5"),
    #   (3.659945e-05+0j, "X1 Z2 Z5"),
    #   (0.26891020325+0j, "Z1"),
    #   (0.00109912575+0j, "Z1 X2 X3"),
    #   (0.0005337125+0j, "Z1 X2 X3 X4"),
    #   (-0.00109912575+0j, "Z1 X2 X3 Z4"),
    #   (0.0005337125+0j, "Z1 X2 Y3 Y4 Z5"),
    #   (-0.0001451835+0j, "Z1 X2 Z3 Y4 Y5"),
    #   (-0.0001451835+0j, "Z1 X2 X4 X5"),
    #   (0.0148287223+0j, "Z1 X2 Z4 X5"),
    #   (-0.0148287223+0j, "Z1 X2 X5"),
    #   (-0.00161898535+0j, "Z1 Z2"),
    #   (-0.0015698514+0j, "Z1 Z2 X3 Y4 Y5"),
    #   (0.0015698514+0j, "Z1 Z2 Y3 Y4 X5"),
    #   (0.0592981269+0j, "Z1 Z2 Z3"),
    #   (-0.00041035925+0j, "Z1 Z2 Z3 X4"),
    #   (0.05074708035+0j, "Z1 Z2 Z3 Z4"),
    #   (0.00041035925+0j, "Z1 Z2 X4 Z5"),
    #   (0.16834798935+0j, "Z1 Z2 Z4 Z5"),
    #   (0.14928382395+0j, "Z1 Z2 Z5"),
    #   (-0.00109912575+0j, "X2 X3"),
    #   (-0.0005337125+0j, "X2 X3 X4"),
    #   (0.00109912575+0j, "X2 X3 Z4"),
    #   (-0.0005337125+0j, "X2 Y3 Y4 Z5"),
    #   (0.0001451835+0j, "X2 Z3 Y4 Y5"),
    #   (0.0001451835+0j, "X2 X4 X5"),
    #   (-0.0148287223+0j, "X2 Z4 X5"),
    #   (0.0148287223+0j, "X2 X5"),
    #   (0.0361758929+0j, "Z2"),
    #   (-0.00072879245+0j, "Z2 X3 Y4 Y5"),
    #   (0.00072879245+0j, "Z2 Y3 Y4 X5"),
    #   (0.0723183656+0j, "Z2 Z3"),
    #   (-3.659945e-05+0j, "Z2 Z3 X4"),
    #   (0.05929812695+0j, "Z2 Z3 Z4"),
    #   (3.659945e-05+0j, "Z2 X4 Z5"),
    #   (0.14928382395+0j, "Z2 Z4 Z5"),
    #   (0.178424474+0j, "Z2 Z5"),
    #   (0.0454001107+0j, "X3 Y4 Y5"),
    #   (0.0020666972+0j, "X3 Z4 X5"),
    #   (-0.002161836+0j, "X3 X5"),
    #   (-0.0454001107+0j, "Y3 Y4 X5"),
    #   (-9.51388e-05+0j, "Y3 Z4 Y5"),
    #   (0.03617589295+0j, "Z3"),
    #   (0.0075437426+0j, "Z3 X4"),
    #   (-0.00161898535+0j, "Z3 Z4"),
    #   (0.11848258185+0j, "Z3 Z4 Z5"),
    #   (0.12255235515+0j, "Z3 Z5"),
    #   (-0.0075437426+0j, "X4 Z5"),
    #   (0.26891020325+0j, "Z4"),
    #   (-0.00161898535+0j, "Z4 Z5"),
    #   (0.0361758929+0j, "Z5")
    # ]


    #  R300
    hamiltonian_terms = [
        (-76.8695836035+0j, ""),
        (-4.18e-08+0j, "X0"),
        (-3.499135e-05+0j, "X0 X1 X3"),
        (1.0219e-05+0j, "X0 X1 X3 X4"),
        (3.499135e-05+0j, "X0 X1 X3 Z4"),
        (1.0219e-05+0j, "X0 X1 Y3 Y4 Z5"),
        (2.7458e-06+0j, "X0 X1 Z3 Y4 Y5"),
        (2.7458e-06+0j, "X0 X1 X4 X5"),
        (0.00026793215+0j, "X0 X1 Z4 X5"),
        (-0.00026793215+0j, "X0 X1 X5"),
        (0.01904834505+0j, "X0 Y1 Y2"),
        (0.00010915405+0j, "X0 Y1 Y2 X3 Y4 Y5"),
        (-0.00010915405+0j, "X0 Y1 Y2 Y3 Y4 X5"),
        (-0.0006760636+0j, "X0 Y1 Y2 Z3"),
        (1.057265e-05+0j, "X0 Y1 Y2 Z3 X4"),
        (-0.0008908425+0j, "X0 Y1 Y2 Z3 Z4"),
        (-1.057265e-05+0j, "X0 Y1 Y2 X4 Z5"),
        (-0.0008908426+0j, "X0 Y1 Y2 Z4 Z5"),
        (-0.0006760637+0j, "X0 Y1 Y2 Z5"),
        (4.18e-08+0j, "X0 Z1"),
        (0.0010990675+0j, "X0 Z1 X2"),
        (-0.0145468986+0j, "X0 Z1 X3"),
        (3.499135e-05+0j, "X0 Z1 X3 X4"),
        (0.0145468986+0j, "X0 Z1 X3 Z4"),
        (3.499135e-05+0j, "X0 Z1 Y3 Y4 Z5"),
        (-0.00026793215+0j, "X0 Z1 Z3 Y4 Y5"),
        (-0.00026793215+0j, "X0 Z1 X4 X5"),
        (-0.0005601064+0j, "X0 Z1 Z4 X5"),
        (0.0005601064+0j, "X0 Z1 X5"),
        (-0.0011147212+0j, "X0 X2"),
        (0.0145468986+0j, "X0 X3"),
        (-3.499135e-05+0j, "X0 X3 X4"),
        (-0.0145468986+0j, "X0 X3 Z4"),
        (-3.499135e-05+0j, "X0 Y3 Y4 Z5"),
        (0.00026793215+0j, "X0 Z3 Y4 Y5"),
        (0.00026793215+0j, "X0 X4 X5"),
        (0.0005601064+0j, "X0 Z4 X5"),
        (-0.0005601064+0j, "X0 X5"),
        (-0.01904834505+0j, "Y0 Y1 X2"),
        (-0.00010915405+0j, "Y0 Y1 X2 X3 Y4 Y5"),
        (0.00010915405+0j, "Y0 Y1 X2 Y3 Y4 X5"),
        (0.0006760636+0j, "Y0 Y1 X2 Z3"),
        (-1.057265e-05+0j, "Y0 Y1 X2 Z3 X4"),
        (0.0008908425+0j, "Y0 Y1 X2 Z3 Z4"),
        (1.057265e-05+0j, "Y0 Y1 X2 X4 Z5"),
        (0.0008908426+0j, "Y0 Y1 X2 Z4 Z5"),
        (0.0006760637+0j, "Y0 Y1 X2 Z5"),
        (-3.499135e-05+0j, "Y0 Y1 Z2 X3"),
        (1.0219e-05+0j, "Y0 Y1 Z2 X3 X4"),
        (3.499135e-05+0j, "Y0 Y1 Z2 X3 Z4"),
        (1.0219e-05+0j, "Y0 Y1 Z2 Y3 Y4 Z5"),
        (2.7458e-06+0j, "Y0 Y1 Z2 Z3 Y4 Y5"),
        (2.7458e-06+0j, "Y0 Y1 Z2 X4 X5"),
        (0.00026793215+0j, "Y0 Y1 Z2 Z4 X5"),
        (-0.00026793215+0j, "Y0 Y1 Z2 X5"),
        (-1.56537e-05+0j, "Y0 Z1 Y2"),
        (0.03985058725+0j, "Z0"),
        (0.0024922589+0j, "Z0 X1"),
        (1.057265e-05+0j, "Z0 X1 X3 Y4 Y5"),
        (-1.057265e-05+0j, "Z0 X1 Y3 Y4 X5"),
        (-4.86381e-05+0j, "Z0 X1 Z3"),
        (1.8813e-06+0j, "Z0 X1 Z3 X4"),
        (-0.0001650772+0j, "Z0 X1 Z3 Z4"),
        (-1.8813e-06+0j, "Z0 X1 X4 Z5"),
        (-0.0001650772+0j, "Z0 X1 Z4 Z5"),
        (-4.86381e-05+0j, "Z0 X1 Z5"),
        (0.00026793215+0j, "Z0 Y1 Y2 X3"),
        (2.7458e-06+0j, "Z0 Y1 Y2 X3 X4"),
        (-0.00026793215+0j, "Z0 Y1 Y2 X3 Z4"),
        (2.7458e-06+0j, "Z0 Y1 Y2 Y3 Y4 Z5"),
        (1.0219e-05+0j, "Z0 Y1 Y2 Z3 Y4 Y5"),
        (1.0219e-05+0j, "Z0 Y1 Y2 X4 X5"),
        (-3.499135e-05+0j, "Z0 Y1 Y2 Z4 X5"),
        (3.499135e-05+0j, "Z0 Y1 Y2 X5"),
        (-0.00065523365+0j, "Z0 Z1"),
        (0.09748601105+0j, "Z0 Z1 Z2"),
        (-0.0008908425+0j, "Z0 Z1 X3 Y4 Y5"),
        (0.0008908425+0j, "Z0 Z1 Y3 Y4 X5"),
        (0.14852121465+0j, "Z0 Z1 Z3"),
        (-0.0001650772+0j, "Z0 Z1 Z3 X4"),
        (0.1683092118+0j, "Z0 Z1 Z3 Z4"),
        (0.0001650772+0j, "Z0 Z1 X4 Z5"),
        (0.0428047896+0j, "Z0 Z1 Z4 Z5"),
        (0.0487532245+0j, "Z0 Z1 Z5"),
        (0.0998845597+0j, "Z0 Z2"),
        (-0.0006760636+0j, "Z0 X3 Y4 Y5"),
        (0.0006760636+0j, "Z0 Y3 Y4 X5"),
        (0.1767511666+0j, "Z0 Z3"),
        (-4.86381e-05+0j, "Z0 Z3 X4"),
        (0.14852121465+0j, "Z0 Z3 Z4"),
        (4.86381e-05+0j, "Z0 X4 Z5"),
        (0.04875322455+0j, "Z0 Z4 Z5"),
        (0.05719080545+0j, "Z0 Z5"),
        (0.00026793215+0j, "X1 X2 X3"),
        (2.7458e-06+0j, "X1 X2 X3 X4"),
        (-0.00026793215+0j, "X1 X2 X3 Z4"),
        (2.7458e-06+0j, "X1 X2 Y3 Y4 Z5"),
        (1.0219e-05+0j, "X1 X2 Z3 Y4 Y5"),
        (1.0219e-05+0j, "X1 X2 X4 X5"),
        (-3.499135e-05+0j, "X1 X2 Z4 X5"),
        (3.499135e-05+0j, "X1 X2 X5"),
        (-0.0024922589+0j, "X1 Z2"),
        (-1.057265e-05+0j, "X1 Z2 X3 Y4 Y5"),
        (1.057265e-05+0j, "X1 Z2 Y3 Y4 X5"),
        (4.86381e-05+0j, "X1 Z2 Z3"),
        (-1.8813e-06+0j, "X1 Z2 Z3 X4"),
        (0.0001650772+0j, "X1 Z2 Z3 Z4"),
        (1.8813e-06+0j, "X1 Z2 X4 Z5"),
        (0.0001650772+0j, "X1 Z2 Z4 Z5"),
        (4.86381e-05+0j, "X1 Z2 Z5"),
        (0.2679486322+0j, "Z1"),
        (-3.665e-08+0j, "Z1 X2"),
        (0.0005601064+0j, "Z1 X2 X3"),
        (0.00026793215+0j, "Z1 X2 X3 X4"),
        (-0.0005601064+0j, "Z1 X2 X3 Z4"),
        (0.00026793215+0j, "Z1 X2 Y3 Y4 Z5"),
        (-3.499135e-05+0j, "Z1 X2 Z3 Y4 Y5"),
        (-3.499135e-05+0j, "Z1 X2 X4 X5"),
        (0.01454689845+0j, "Z1 X2 Z4 X5"),
        (-0.01454689845+0j, "Z1 X2 X5"),
        (-0.00065523355+0j, "Z1 Z2"),
        (-0.0008908426+0j, "Z1 Z2 X3 Y4 Y5"),
        (0.0008908426+0j, "Z1 Z2 Y3 Y4 X5"),
        (0.04875322455+0j, "Z1 Z2 Z3"),
        (-0.0001650772+0j, "Z1 Z2 Z3 X4"),
        (0.0428047896+0j, "Z1 Z2 Z3 Z4"),
        (0.0001650772+0j, "Z1 Z2 X4 Z5"),
        (0.1683092118+0j, "Z1 Z2 Z4 Z5"),
        (0.1485212146+0j, "Z1 Z2 Z5"),
        (3.665e-08+0j, "X2"),
        (-0.0005601064+0j, "X2 X3"),
        (-0.00026793215+0j, "X2 X3 X4"),
        (0.0005601064+0j, "X2 X3 Z4"),
        (-0.00026793215+0j, "X2 Y3 Y4 Z5"),
        (3.499135e-05+0j, "X2 Z3 Y4 Y5"),
        (3.499135e-05+0j, "X2 X4 X5"),
        (-0.01454689845+0j, "X2 Z4 X5"),
        (0.01454689845+0j, "X2 X5"),
        (0.0398505872+0j, "Z2"),
        (-0.0006760637+0j, "Z2 X3 Y4 Y5"),
        (0.0006760637+0j, "Z2 Y3 Y4 X5"),
        (0.05719080545+0j, "Z2 Z3"),
        (-4.86381e-05+0j, "Z2 Z3 X4"),
        (0.0487532245+0j, "Z2 Z3 Z4"),
        (4.86381e-05+0j, "Z2 X4 Z5"),
        (0.1485212146+0j, "Z2 Z4 Z5"),
        (0.1767511666+0j, "Z2 Z5"),
        (-4.18e-08+0j, "X3"),
        (0.01904834505+0j, "X3 Y4 Y5"),
        (4.18e-08+0j, "X3 Z4"),
        (0.0010990675+0j, "X3 Z4 X5"),
        (-0.0011147212+0j, "X3 X5"),
        (-0.01904834505+0j, "Y3 Y4 X5"),
        (-1.56537e-05+0j, "Y3 Z4 Y5"),
        (0.03985058725+0j, "Z3"),
        (0.0024922589+0j, "Z3 X4"),
        (-0.00065523365+0j, "Z3 Z4"),
        (0.09748601105+0j, "Z3 Z4 Z5"),
        (0.0998845597+0j, "Z3 Z5"),
        (-0.0024922589+0j, "X4 Z5"),
        (0.2679486322+0j, "Z4"),
        (-3.665e-08+0j, "Z4 X5"),
        (-0.00065523355+0j, "Z4 Z5"),
        (3.665e-08+0j, "X5"),
        (0.0398505872+0j, "Z5")
    ]

    num_qubits = 6 
    # Process the Hamiltonian
    processed_hamiltonian = process_hamiltonian(hamiltonian_terms, num_qubits)  
    print(processed_hamiltonian)
    # Print the result
    # for term in processed_hamiltonian:
    #     print(term)   
    pauli_to_index = {"I": 0, "X": 1, "Y": 2, "Z": 3}   
    # Initialize a zero array for the coefficients (4^n terms)
    dim = 4**num_qubits
    coefficients = np.zeros(dim, dtype=complex)

    # Define the Hamiltonian terms
    terms = processed_hamiltonian

    # Populate the coefficients array
    for coeff, pauli_ops in terms:
        # Default: identity operators for all qubits
        full_ops = ["I"] * num_qubits
        for i, op in enumerate(pauli_ops):
         full_ops[i] = op      
        # Compute the index for the term
        index = sum(pauli_to_index[op] * (4**(num_qubits - i - 1)) for i, op in enumerate(full_ops))  
        # Assign the coefficient to the appropriate index
        coefficients[index] = coeff    
    h_alpha = coefficients.real
    # print(f"C2H4 molecule H_alpha: {h_alpha}")
    # print(f"Length of H_alpha: {len(h_alpha)}") 

    nspin = 6
    H = []
    active = [0,1,2,3,4,5]
    active = np.asarray(active)
    nact   = len(active)
    imap,gmap = pauli_action(active,nspin)
    print(f"Pauli action-imap_shape: {imap.shape}") 
    H.append((active,h_alpha,imap,gmap))

    return H


def N2_molecule():

# Define the Hamiltonian terms
 hamiltonian_terms = [
  (-5.13943612177+0j, ""),
  (-0.00513786576253+0j, "X0 X1 X2 X3 Y7 Y11"),
  (-0.0576538419795+0j, "X0 X1 Z2 X3 Y7 Z9 Y10 X11"),
  (-3.99712202733e-05+0j, "X0 X1 X3 X4 Y5 Y6 Y7 Z9 Y10 X11"),
  (-0.00513786576253+0j, "X0 X1 X3 X4 Y7 Y11"),
  (-3.99712196806e-05+0j, "X0 X1 X3 Y4 Y5 X6 Y7 Z9 Y10 X11"),
  (7.99424399539e-05+0j, "X0 X1 X3 Y4 Y5 Y6 Y7 Z9 X10 X11"),
  (-3.99712195819e-05+0j, "X0 X1 X3 Y4 Y5 Z6 Y7 Y11"),
  (0.00513786576253+0j, "X0 X1 X3 Y4 Z5 Y7 Z9 Z10 X11"),
  (-3.9971220372e-05+0j, "X0 X1 X3 Z4 Y5 Y6 Y7 Y11"),
  (-0.0627917077421+0j, "X0 X1 X3 Z4 Z5 Y7 Z9 Y10 X11"),
  (-0.0576538419795+0j, "X0 X1 X3 Z4 Y7 Z9 Y10 X11"),
  (-3.9971220372e-05+0j, "X0 X1 X3 X5 Y6 Y7 Z9 Z10 X11"),
  (0.00513786577793+0j, "X0 X1 X3 X6 Y7 Y11"),
  (0.0576538432896+0j, "X0 X1 X3 Z6 Y7 Z9 Y10 X11"),
  (0.00513786577793+0j, "X0 X1 X3 Y7 X8 Y11"),
  (-0.00513786577793+0j, "X0 X1 X3 Y7 Y8 Z10 X11"),
  (0.0576538432896+0j, "X0 X1 X3 Y7 Z8 Z9 Y10 X11"),
  (0.0627917090675+0j, "X0 X1 X3 Y7 Z8 Y10 X11"),
  (-3.99712195819e-05+0j, "X0 X1 Y3 Y4 X5 X7 Z9 Z10 X11"),
  (-0.00513786577793+0j, "X0 X1 Y3 Z5 Y6 X7 Z9 Z10 X11"),
  (0.0627917090675+0j, "X0 X1 Y3 Z5 Z6 X7 Z9 Y10 X11"),
  (-3.9971220372e-05+0j, "X0 X1 Z3 Y8 Y9 Z10"),
  (-3.99712202733e-05+0j, "X0 Y1 X2 Y8 Y9 Y10"),
  (-0.00513786576253+0j, "X0 Y1 Y2 Y3 Y7 Z9 Z10 X11"),
  (-3.99712196806e-05+0j, "X0 Y1 Y2 X8 Y9 Y10"),
  (7.99424399539e-05+0j, "X0 Y1 Y2 Y8 Y9 X10"),
  (3.99712195819e-05+0j, "X0 Y1 Y2 Z8 X9 Z11"),
  (-3.99712195819e-05+0j, "X0 Y1 Y2 X9 Z10"),
  (0.0627917077421+0j, "X0 Y1 Z2 Y3 Y7 Z9 Y10 X11"),
  (3.9971220372e-05+0j, "X0 Y1 Z2 Y8 X9 Z11"),
  (-0.0574155885689+0j, "X0 Z1 X2"),
  (-4.03187050846e-05+0j, "X0 Z1 X2 X3 Y7 Y9 X11"),
  (-0.0574155885689+0j, "X0 Z1 X2 Z3"),
  (-0.0574155885689+0j, "X0 Z1 X4"),
  (-4.03187050846e-05+0j, "X0 Z1 Y4 Y5 Z6"),
  (4.03187050846e-05+0j, "X0 Z1 Z4 Y5 Y6"),
  (-0.0574155887634+0j, "X0 Z1 X6"),
  (-0.0574155887634+0j, "X0 Z1 X8"),
  (0.00964356820483+0j, "X0 Z1 X10"),
  (-4.03187050846e-05+0j, "X0 Y2 X3 Y7 Z8 X9 X11"),
  (4.03187050846e-05+0j, "X0 Z2 X3 Y7 Y8 X9 X11"),
  (4.03187050846e-05+0j, "X0 Y3 Y7 X8 X9 X11"),
  (4.03187050846e-05+0j, "X0 Z3 X4 X5 Z7"),
  (-0.0574155887634+0j, "X0 Z3 Z5 X6 Z7"),
  (-0.0574155885689+0j, "X0 X4 Z5"),
  (-4.03187050846e-05+0j, "X0 X5 X6"),
  (-0.0574155887634+0j, "X0 X8 Z9"),
  (0.00964356820483+0j, "X0 Z9 X10 Z11"),
  (-0.00513786576253+0j, "Y0 X1 Y2 X3 Y7 Y11"),
  (0.0576538419795+0j, "Y0 X1 Z2 X3 Y7 Z9 X10 X11"),
  (7.99424399539e-05+0j, "Y0 X1 X3 X4 Y5 X6 Y7 Z9 Y10 X11"),
  (-3.99712196806e-05+0j, "Y0 X1 X3 X4 Y5 Y6 Y7 Z9 X10 X11"),
  (3.99712195819e-05+0j, "Y0 X1 X3 X4 Y5 Z6 Y7 Y11"),
  (-0.00513786576253+0j, "Y0 X1 X3 X4 Z5 Y7 Z9 Z10 X11"),
  (-3.99712202733e-05+0j, "Y0 X1 X3 Y4 Y5 X6 Y7 Z9 X10 X11"),
  (-0.00513786576253+0j, "Y0 X1 X3 Y4 Y7 Y11"),
  (3.9971220372e-05+0j, "Y0 X1 X3 Z4 Y5 X6 Y7 Y11"),
  (0.0627917077421+0j, "Y0 X1 X3 Z4 Z5 Y7 Z9 X10 X11"),
  (0.0576538419795+0j, "Y0 X1 X3 Z4 Y7 Z9 X10 X11"),
  (3.9971220372e-05+0j, "Y0 X1 X3 X5 X6 Y7 Z9 Z10 X11"),
  (0.00513786577793+0j, "Y0 X1 X3 Y6 Y7 Y11"),
  (-0.0576538432896+0j, "Y0 X1 X3 Z6 Y7 Z9 X10 X11"),
  (0.00513786577793+0j, "Y0 X1 X3 Y7 X8 Z10 X11"),
  (0.00513786577793+0j, "Y0 X1 X3 Y7 Y8 Y11"),
  (-0.0576538432896+0j, "Y0 X1 X3 Y7 Z8 Z9 X10 X11"),
  (-0.0627917090675+0j, "Y0 X1 X3 Y7 Z8 X10 X11"),
  (3.99712195819e-05+0j, "Y0 X1 Y3 X4 X5 X7 Z9 Z10 X11"),
  (0.00513786577793+0j, "Y0 X1 Y3 Z5 X6 X7 Z9 Z10 X11"),
  (-0.0627917090675+0j, "Y0 X1 Y3 Z5 Z6 X7 Z9 X10 X11"),
  (3.9971220372e-05+0j, "Y0 X1 Z3 X8 Y9 Z10"),
  (0.00513786576253+0j, "Y0 Y1 X2 Y3 Y7 Z9 Z10 X11"),
  (7.99424399539e-05+0j, "Y0 Y1 X2 X8 Y9 Y10"),
  (-3.99712196806e-05+0j, "Y0 Y1 X2 Y8 Y9 X10"),
  (-3.99712195819e-05+0j, "Y0 Y1 X2 Z8 X9 Z11"),
  (3.99712195819e-05+0j, "Y0 Y1 X2 X9 Z10"),
  (-3.99712202733e-05+0j, "Y0 Y1 Y2 X8 Y9 X10"),
  (-0.0627917077421+0j, "Y0 Y1 Z2 Y3 Y7 Z9 X10 X11"),
  (-3.9971220372e-05+0j, "Y0 Y1 Z2 X8 X9 Z11"),
  (-0.0574155885689+0j, "Y0 Z1 Y2"),
  (-4.03187050846e-05+0j, "Y0 Z1 Y2 X3 Y7 Y9 X11"),
  (-0.0574155885689+0j, "Y0 Z1 Y2 Z3"),
  (4.03187050846e-05+0j, "Y0 Z1 X4 Y5 Z6"),
  (-0.0574155885689+0j, "Y0 Z1 Y4"),
  (-4.03187050846e-05+0j, "Y0 Z1 Z4 Y5 X6"),
  (-0.0574155887634+0j, "Y0 Z1 Y6"),
  (-0.0574155887634+0j, "Y0 Z1 Y8"),
  (0.00964356820483+0j, "Y0 Z1 Y10"),
  (4.03187050846e-05+0j, "Y0 X2 X3 Y7 Z8 X9 X11"),
  (-4.03187050846e-05+0j, "Y0 Z2 X3 Y7 X8 X9 X11"),
  (4.03187050846e-05+0j, "Y0 Y3 Y7 Y8 X9 X11"),
  (4.03187050846e-05+0j, "Y0 Z3 Y4 X5 Z7"),
  (-0.0574155887634+0j, "Y0 Z3 Z5 Y6 Z7"),
  (-0.0574155885689+0j, "Y0 Y4 Z5"),
  (-4.03187050846e-05+0j, "Y0 X5 Y6"),
  (-0.0574155887634+0j, "Y0 Y8 Z9"),
  (0.00964356820483+0j, "Y0 Z9 Y10 Z11"),
  (0.0353817785683+0j, "Z0"),
  (-0.0627917077421+0j, "Z0 X1 Z2 X3 Y7 Y11"),
  (0.00513786576253+0j, "Z0 X1 X3 X4 Z5 Y7 Z9 Y10 X11"),
  (-0.00513786576253+0j, "Z0 X1 X3 Y4 Z5 Y7 Z9 X10 X11"),
  (-0.0576538419795+0j, "Z0 X1 X3 Z4 Z5 Y7 Y11"),
  (-0.0627917077421+0j, "Z0 X1 X3 Z4 Y7 Y11"),
  (3.99712195819e-05+0j, "Z0 X1 X3 X5 X6 Y7 Z9 Y10 X11"),
  (-3.99712195819e-05+0j, "Z0 X1 X3 X5 Y6 Y7 Z9 X10 X11"),
  (3.99712196806e-05+0j, "Z0 X1 X3 X5 Z6 Y7 Y11"),
  (0.0627917090675+0j, "Z0 X1 X3 Z6 Y7 Y11"),
  (-0.00513786577793+0j, "Z0 X1 X3 Y7 X8 Y10 X11"),
  (0.00513786577793+0j, "Z0 X1 X3 Y7 Y8 X10 X11"),
  (0.0576538432896+0j, "Z0 X1 X3 Y7 Z8 Z9 Y11"),
  (0.0627917090675+0j, "Z0 X1 X3 Y7 Z8 Y11"),
  (3.9971220372e-05+0j, "Z0 X1 Y3 X4 X5 X7 Z9 Y10 X11"),
  (-3.9971220372e-05+0j, "Z0 X1 Y3 Y4 X5 X7 Z9 X10 X11"),
  (3.99712202733e-05+0j, "Z0 X1 Y3 Z4 X5 X7 Y11"),
  (-7.99424399539e-05+0j, "Z0 X1 Y3 Y5 X7 Z9 Z10 X11"),
  (-0.00513786577793+0j, "Z0 X1 Y3 Z5 X6 X7 Z9 Y10 X11"),
  (0.00513786577793+0j, "Z0 X1 Y3 Z5 Y6 X7 Z9 X10 X11"),
  (0.0576538432896+0j, "Z0 X1 Y3 Z5 Z6 X7 Y11"),
  (3.99712195819e-05+0j, "Z0 X1 Z3 X8 Y9 Y10"),
  (-3.99712195819e-05+0j, "Z0 X1 Z3 Y8 Y9 X10"),
  (-3.99712196806e-05+0j, "Z0 X1 Z3 Z8 X9 Z11"),
  (7.99424399539e-05+0j, "Z0 X1 Z3 X9 Z10"),
  (-0.00513786576253+0j, "Z0 Y1 X2 Y3 Y7 Z9 Y10 X11"),
  (3.9971220372e-05+0j, "Z0 Y1 X2 X9 Y10"),
  (0.00513786576253+0j, "Z0 Y1 Y2 Y3 Y7 Z9 X10 X11"),
  (-3.9971220372e-05+0j, "Z0 Y1 Y2 X9 X10"),
  (0.0576538419795+0j, "Z0 Y1 Z2 Y3 Y7 Y11"),
  (3.99712202733e-05+0j, "Z0 Y1 Z2 Y9 Z11"),
  (0.0353817785683+0j, "Z0 Z1"),
  (8.25687105096e-05+0j, "Z0 Z1 X2 X3 Y7 Y8 X9 X11"),
  (-8.25687105096e-05+0j, "Z0 Z1 Y2 X3 Y7 X8 X9 X11"),
  (0.0444173434267+0j, "Z0 Z1 Z2"),
  (4.2250005425e-05+0j, "Z0 Z1 Z2 X3 Y7 Y9 X11"),
  (0.0444173434267+0j, "Z0 Z1 Z2 Z3"),
  (-8.25687105096e-05+0j, "Z0 Z1 Y3 Y7 Z8 X9 X11"),
  (-8.25687105096e-05+0j, "Z0 Z1 Z3 Z4 X5 Z7"),
  (0.164332929279+0j, "Z0 Z1 Z3 Z5 Z6 Z7"),
  (4.2250005425e-05+0j, "Z0 Z1 X4 Y5 Y6"),
  (-4.2250005425e-05+0j, "Z0 Z1 Y4 Y5 X6"),
  (0.0444173434267+0j, "Z0 Z1 Z4"),
  (0.164332931996+0j, "Z0 Z1 Z4 Z5"),
  (8.25687105096e-05+0j, "Z0 Z1 X5 Z6"),
  (0.0444173405159+0j, "Z0 Z1 Z6"),
  (0.0444173405159+0j, "Z0 Z1 Z8"),
  (0.164332929279+0j, "Z0 Z1 Z8 Z9"),
  (0.108933535657+0j, "Z0 Z1 Z9 Z10 Z11"),
  (0.0560771038615+0j, "Z0 Z1 Z10"),
  (4.2250005425e-05+0j, "Z0 X2 X3 Y7 Y8 X9 X11"),
  (-4.2250005425e-05+0j, "Z0 Y2 X3 Y7 X8 X9 X11"),
  (0.164332931996+0j, "Z0 Z2"),
  (8.25687105096e-05+0j, "Z0 Z2 X3 Y7 Y9 X11"),
  (0.164332931996+0j, "Z0 Z2 Z3"),
  (-4.2250005425e-05+0j, "Z0 Y3 Y7 Z8 X9 X11"),
  (-4.2250005425e-05+0j, "Z0 Z3 Z4 X5 Z7"),
  (0.0444173405159+0j, "Z0 Z3 Z5 Z6 Z7"),
  (8.25687105096e-05+0j, "Z0 X4 Y5 Y6"),
  (-8.25687105096e-05+0j, "Z0 Y4 Y5 X6"),
  (0.164332931996+0j, "Z0 Z4"),
  (0.0444173434267+0j, "Z0 Z4 Z5"),
  (4.2250005425e-05+0j, "Z0 X5 Z6"),
  (0.164332929279+0j, "Z0 Z6"),
  (0.164332929279+0j, "Z0 Z8"),
  (0.0444173405159+0j, "Z0 Z8 Z9"),
  (0.0560771038615+0j, "Z0 Z9 Z10 Z11"),
  (0.108933535657+0j, "Z0 Z10"),
  (-3.9971220372e-05+0j, "X1 X2 Z8 Y9 Y10"),
  (3.9971220372e-05+0j, "X1 Y2 Z8 Y9 X10"),
  (0.0576538419795+0j, "X1 Z2 Y3 Y7 Z9 Z10 X11"),
  (-3.99712195819e-05+0j, "X1 Z2 X8 Y9 Y10"),
  (3.99712195819e-05+0j, "X1 Z2 Y8 Y9 X10"),
  (7.99424399539e-05+0j, "X1 Z2 Z8 X9 Z11"),
  (-3.99712196806e-05+0j, "X1 Z2 X9 Z10"),
  (0.00513786576253+0j, "Y1 X2 X3 Y7 Z9 X10 X11"),
  (0.00513786576253+0j, "Y1 Y2 X3 Y7 Z9 Y10 X11"),
  (0.0627917077421+0j, "Y1 Z2 X3 Y7 Z9 Z10 X11"),
  (3.9971220372e-05+0j, "Y1 X3 X4 Y5 Z6 Y7 Z9 Y10 X11"),
  (0.00513786576253+0j, "Y1 X3 X4 Y7 Z9 X10 X11"),
  (-3.9971220372e-05+0j, "Y1 X3 Y4 Y5 Z6 Y7 Z9 X10 X11"),
  (0.00513786576253+0j, "Y1 X3 Y4 Y7 Z9 Y10 X11"),
  (3.99712195819e-05+0j, "Y1 X3 Z4 Y5 X6 Y7 Z9 Y10 X11"),
  (-3.99712195819e-05+0j, "Y1 X3 Z4 Y5 Y6 Y7 Z9 X10 X11"),
  (7.99424399539e-05+0j, "Y1 X3 Z4 Y5 Z6 Y7 Y11"),
  (0.0576538419795+0j, "Y1 X3 Z4 Z5 Y7 Z9 Z10 X11"),
  (0.0627917077421+0j, "Y1 X3 Z4 Y7 Z9 Z10 X11"),
  (3.99712202733e-05+0j, "Y1 X3 X5 Z6 Y7 Z9 Z10 X11"),
  (-0.00513786577793+0j, "Y1 X3 X6 Y7 Z9 X10 X11"),
  (-0.00513786577793+0j, "Y1 X3 Y6 Y7 Z9 Y10 X11"),
  (-0.0627917090675+0j, "Y1 X3 Z6 Y7 Z9 Z10 X11"),
  (-0.00513786577793+0j, "Y1 X3 Y7 X8 Z9 X10 X11"),
  (-0.00513786577793+0j, "Y1 X3 Y7 Y8 Z9 Y10 X11"),
  (-0.0627917090675+0j, "Y1 X3 Y7 Z8 Z9 Z10 X11"),
  (-0.0576538432896+0j, "Y1 X3 Y7 Z8 Z10 X11"),
  (3.99712196806e-05+0j, "Y1 Y3 Z4 X5 X7 Z9 Z10 X11"),
  (-0.0576538432896+0j, "Y1 Y3 Z5 Z6 X7 Z9 Z10 X11"),
  (3.99712202733e-05+0j, "Y1 Z3 Z8 Y9 Z10"),
  (-0.0698454335601+0j, "Z1"),
  (1.75256898549e-07+0j, "Z1 X2 X3 X4 Y5 Y6 Y7 Y8 X9 X11"),
  (7.47586856813e-06+0j, "Z1 X2 X3 X4 Y7 Y9 X11"),
  (1.98315640747e-05+0j, "Z1 X2 X3 Y4 Y5 X6 Y7 Y8 X9 X11"),
  (-2.00109641057e-05+0j, "Z1 X2 X3 Y4 Y5 Y6 Y7 X8 X9 X11"),
  (2.00399660327e-05+0j, "Z1 X2 X3 Y4 Y5 Z6 Y7 Y9 X11"),
  (-7.47586856813e-06+0j, "Z1 X2 X3 Y4 Z5 Y7 Z8 X9 X11"),
  (5.34748733406e-05+0j, "Z1 X2 X3 Z4 Z5 Y7 Y8 X9 X11"),
  (4.59990047724e-05+0j, "Z1 X2 X3 Z4 Y7 Y8 X9 X11"),
  (2.04258825597e-07+0j, "Z1 X2 X3 X5 Z6 Y7 Y8 X9 X11"),
  (7.47586857839e-06+0j, "Z1 X2 X3 X6 Y7 Y9 X11"),
  (4.59990048893e-05+0j, "Z1 X2 X3 Z6 Y7 Y8 X9 X11"),
  (6.84266110952e-05+0j, "Z1 X2 X3 Y7 X8 Y9 X11"),
  (5.27167171952e-06+0j, "Z1 X2 X3 Y7 Y8 X9 Z10 X11"),
  (-0.00111331120343+0j, "Z1 X2 X3 Y7 Y8 X9 X11"),
  (-4.49753658003e-05+0j, "Z1 X2 X3 Y7 Y8 Y9 Z10 Y11"),
  (3.97036940808e-05+0j, "Z1 X2 X3 Y7 Z8 Y9 Y10 Y11"),
  (3.97036940808e-05+0j, "Z1 X2 X3 Y7 Y9 X10 X11"),
  (2.00399660327e-05+0j, "Z1 X2 Y3 Y4 X5 X7 Z8 X9 X11"),
  (-2.04258825597e-07+0j, "Z1 X2 Y3 Z4 X5 X7 Y8 X9 X11"),
  (-7.47586857839e-06+0j, "Z1 X2 Y3 Z5 Y6 X7 Z8 X9 X11"),
  (5.34748734677e-05+0j, "Z1 X2 Y3 Z5 Z6 X7 Y8 X9 X11"),
  (-0.0522203241384+0j, "Z1 X2 Z3 X4"),
  (7.47586856813e-06+0j, "Z1 X2 Z3 Y4 Y5 Z6"),
  (-7.47586856813e-06+0j, "Z1 X2 Z3 Z4 Y5 Y6"),
  (-0.0624997294511+0j, "Z1 X2 Z3 X8"),
  (-0.0572961451501+0j, "Z1 X2 Z3 X10"),
  (-2.00109641057e-05+0j, "Z1 Y2 X3 X4 Y5 X6 Y7 Y8 X9 X11"),
  (1.98315640747e-05+0j, "Z1 Y2 X3 X4 Y5 Y6 Y7 X8 X9 X11"),
  (-2.00399660327e-05+0j, "Z1 Y2 X3 X4 Y5 Z6 Y7 Y9 X11"),
  (7.47586856813e-06+0j, "Z1 Y2 X3 X4 Z5 Y7 Z8 X9 X11"),
  (1.75256898549e-07+0j, "Z1 Y2 X3 Y4 Y5 X6 Y7 X8 X9 X11"),
  (7.47586856813e-06+0j, "Z1 Y2 X3 Y4 Y7 Y9 X11"),
  (-5.34748733406e-05+0j, "Z1 Y2 X3 Z4 Z5 Y7 X8 X9 X11"),
  (-4.59990047724e-05+0j, "Z1 Y2 X3 Z4 Y7 X8 X9 X11"),
  (-2.04258825597e-07+0j, "Z1 Y2 X3 X5 Z6 Y7 X8 X9 X11"),
  (7.47586857839e-06+0j, "Z1 Y2 X3 Y6 Y7 Y9 X11"),
  (-4.59990048893e-05+0j, "Z1 Y2 X3 Z6 Y7 X8 X9 X11"),
  (-5.27167171952e-06+0j, "Z1 Y2 X3 Y7 X8 X9 Z10 X11"),
  (0.00111331120343+0j, "Z1 Y2 X3 Y7 X8 X9 X11"),
  (4.49753658003e-05+0j, "Z1 Y2 X3 Y7 X8 Y9 Z10 Y11"),
  (6.84266110952e-05+0j, "Z1 Y2 X3 Y7 Y8 Y9 X11"),
  (-3.97036940808e-05+0j, "Z1 Y2 X3 Y7 Z8 Y9 X10 Y11"),
  (3.97036940808e-05+0j, "Z1 Y2 X3 Y7 Y9 Y10 X11"),
  (-2.00399660327e-05+0j, "Z1 Y2 Y3 X4 X5 X7 Z8 X9 X11"),
  (2.04258825597e-07+0j, "Z1 Y2 Y3 Z4 X5 X7 X8 X9 X11"),
  (7.47586857839e-06+0j, "Z1 Y2 Y3 Z5 X6 X7 Z8 X9 X11"),
  (-5.34748734677e-05+0j, "Z1 Y2 Y3 Z5 Z6 X7 X8 X9 X11"),
  (-7.47586856813e-06+0j, "Z1 Y2 Z3 X4 Y5 Z6"),
  (-0.0522203241384+0j, "Z1 Y2 Z3 Y4"),
  (7.47586856813e-06+0j, "Z1 Y2 Z3 Z4 Y5 X6"),
  (-0.0624997294511+0j, "Z1 Y2 Z3 Y8"),
  (-0.0572961451501+0j, "Z1 Y2 Z3 Y10"),
  (2.04258825597e-07+0j, "Z1 Z2 X3 X4 Y5 Y6 Y7 Y9 X11"),
  (-7.47586856813e-06+0j, "Z1 Z2 X3 X4 Z5 Y7 Y8 X9 X11"),
  (-2.04258825597e-07+0j, "Z1 Z2 X3 Y4 Y5 X6 Y7 Y9 X11"),
  (7.47586856813e-06+0j, "Z1 Z2 X3 Y4 Z5 Y7 X8 X9 X11"),
  (4.59990047724e-05+0j, "Z1 Z2 X3 Z4 Z5 Y7 Y9 X11"),
  (5.34748733406e-05+0j, "Z1 Z2 X3 Z4 Y7 Y9 X11"),
  (-2.00399660327e-05+0j, "Z1 Z2 X3 X5 X6 Y7 Y8 X9 X11"),
  (2.00399660327e-05+0j, "Z1 Z2 X3 X5 Y6 Y7 X8 X9 X11"),
  (-1.98315640747e-05+0j, "Z1 Z2 X3 X5 Z6 Y7 Y9 X11"),
  (5.34748734677e-05+0j, "Z1 Z2 X3 Z6 Y7 Y9 X11"),
  (-3.97036940808e-05+0j, "Z1 Z2 X3 Y7 X8 Y9 Y10 Y11"),
  (3.97036940808e-05+0j, "Z1 Z2 X3 Y7 Y8 Y9 X10 Y11"),
  (6.84266110952e-05+0j, "Z1 Z2 X3 Y7 Z8 Y9 X11"),
  (5.27167171952e-06+0j, "Z1 Z2 X3 Y7 X9 Z10 Y11"),
  (4.49753658003e-05+0j, "Z1 Z2 X3 Y7 Y9 Z10 X11"),
  (-0.00111331120343+0j, "Z1 Z2 X3 Y7 Y9 X11"),
  (-1.75256898549e-07+0j, "Z1 Z2 Y3 Z4 X5 X7 Y9 X11"),
  (2.00109641057e-05+0j, "Z1 Z2 Y3 Y5 X7 Z8 X9 X11"),
  (-7.47586857839e-06+0j, "Z1 Z2 Y3 Z5 X6 X7 Y8 X9 X11"),
  (7.47586857839e-06+0j, "Z1 Z2 Y3 Z5 Y6 X7 X8 X9 X11"),
  (4.59990048893e-05+0j, "Z1 Z2 Y3 Z5 Z6 X7 Y9 X11"),
  (0.0268945217354+0j, "Z1 Z2 Z3"),
  (5.34748733406e-05+0j, "Z1 Z2 Z3 X4 Y5 Y6"),
  (-5.34748733406e-05+0j, "Z1 Z2 Z3 Y4 Y5 X6"),
  (0.10764230383+0j, "Z1 Z2 Z3 Z4"),
  (0.222362627968+0j, "Z1 Z2 Z3 Z4 Z5"),
  (4.59990047724e-05+0j, "Z1 Z2 Z3 X5 Z6"),
  (-0.0194672993354+0j, "Z1 Z2 Z3 Z6"),
  (-0.0194272191534+0j, "Z1 Z2 Z3 Z8"),
  (0.105572510298+0j, "Z1 Z2 Z3 Z8 Z9"),
  (0.165116491098+0j, "Z1 Z2 Z3 Z9 Z10 Z11"),
  (0.0453203459483+0j, "Z1 Z2 Z3 Z10"),
  (-4.59990047724e-05+0j, "Z1 Z2 Z4 X5 Z7"),
  (0.10553266752+0j, "Z1 Z2 Z5 Z6 Z7"),
  (6.84266109475e-05+0j, "Z1 X3 Y7 Y9 X11"),
  (0.00320165580304+0j, "Z1 Z3"),
  (-6.84266109475e-05+0j, "X2 Y3 Y7 X8 X9 X11"),
  (-7.47586856813e-06+0j, "X2 Z3 X4 X5 Z7"),
  (-0.0522203241384+0j, "X2 X4 Z5"),
  (7.47586856813e-06+0j, "X2 X5 X6"),
  (-0.0624997294511+0j, "X2 X8 Z9"),
  (-0.0572961451501+0j, "X2 Z9 X10 Z11"),
  (-6.84266109475e-05+0j, "Y2 Y3 Y7 Y8 X9 X11"),
  (-7.47586856813e-06+0j, "Y2 Z3 Y4 X5 Z7"),
  (-0.0522203241384+0j, "Y2 Y4 Z5"),
  (7.47586856813e-06+0j, "Y2 X5 Y6"),
  (-0.0624997294511+0j, "Y2 Y8 Z9"),
  (-0.0572961451501+0j, "Y2 Z9 Y10 Z11"),
  (0.0268945217354+0j, "Z2"),
  (-6.84266109475e-05+0j, "Z2 Y3 Y7 Z8 X9 X11"),
  (-5.34748733406e-05+0j, "Z2 Z3 Z4 X5 Z7"),
  (-0.0194672993354+0j, "Z2 Z3 Z5 Z6 Z7"),
  (4.59990047724e-05+0j, "Z2 X4 Y5 Y6"),
  (-4.59990047724e-05+0j, "Z2 Y4 Y5 X6"),
  (0.222362627968+0j, "Z2 Z4"),
  (0.10764230383+0j, "Z2 Z4 Z5"),
  (5.34748733406e-05+0j, "Z2 X5 Z6"),
  (0.10553266752+0j, "Z2 Z6"),
  (0.105572510298+0j, "Z2 Z8"),
  (-0.0194272191534+0j, "Z2 Z8 Z9"),
  (0.0453203459483+0j, "Z2 Z9 Z10 Z11"),
  (0.165116491098+0j, "Z2 Z10"),
  (1.98315640747e-05+0j, "X3 Z4 X5 X7 Z8 X9 X11"),
  (4.59990048893e-05+0j, "X3 Z5 Z6 X7 Z8 X9 X11"),
  (-2.04258825597e-07+0j, "Y3 X4 Y5 Y6 Y7 Z8 X9 X11"),
  (-7.47586856813e-06+0j, "Y3 X4 Y7 X8 X9 X11"),
  (2.04258825597e-07+0j, "Y3 Y4 Y5 X6 Y7 Z8 X9 X11"),
  (-7.47586856813e-06+0j, "Y3 Y4 Y7 Y8 X9 X11"),
  (-2.00399660327e-05+0j, "Y3 Z4 Y5 X6 Y7 Y8 X9 X11"),
  (2.00399660327e-05+0j, "Y3 Z4 Y5 Y6 Y7 X8 X9 X11"),
  (-2.00109641057e-05+0j, "Y3 Z4 Y5 Z6 Y7 Y9 X11"),
  (-4.59990047724e-05+0j, "Y3 Z4 Z5 Y7 Z8 X9 X11"),
  (-5.34748733406e-05+0j, "Y3 Z4 Y7 Z8 X9 X11"),
  (-1.75256898549e-07+0j, "Y3 X5 Z6 Y7 Z8 X9 X11"),
  (-7.47586857839e-06+0j, "Y3 X6 Y7 X8 X9 X11"),
  (-7.47586857839e-06+0j, "Y3 Y6 Y7 Y8 X9 X11"),
  (-5.34748734677e-05+0j, "Y3 Z6 Y7 Z8 X9 X11"),
  (-3.97036940808e-05+0j, "Y3 Y7 X8 X9 X10 X11"),
  (-3.97036940808e-05+0j, "Y3 Y7 Y8 X9 Y10 X11"),
  (-4.49753658003e-05+0j, "Y3 Y7 Z8 X9 Z10 X11"),
  (0.00111331120343+0j, "Y3 Y7 Z8 X9 X11"),
  (5.27167171952e-06+0j, "Y3 Y7 Z8 Y9 Z10 Y11"),
  (-6.84266110952e-05+0j, "Y3 Y7 X9 X11"),
  (-6.84266110952e-05+0j, "Z3 X4 X5 X6 Z7"),
  (-7.47586857839e-06+0j, "Z3 X4 X5 Z7 X8"),
  (-3.97036940808e-05+0j, "Z3 X4 X5 Z7 X10"),
  (-0.0624997294511+0j, "Z3 X4 Z5 X6 Z7"),
  (-6.84266110952e-05+0j, "Z3 Y4 X5 Y6 Z7"),
  (-7.47586857839e-06+0j, "Z3 Y4 X5 Z7 Y8"),
  (-3.97036940808e-05+0j, "Z3 Y4 X5 Z7 Y10"),
  (-0.0624997294511+0j, "Z3 Y4 Z5 Y6 Z7"),
  (-6.84266110952e-05+0j, "Z3 Z4 X5 Z6 Z7"),
  (0.00111331120343+0j, "Z3 Z4 X5 Z7"),
  (-5.34748734677e-05+0j, "Z3 Z4 X5 Z7 Z8"),
  (-4.59990048893e-05+0j, "Z3 Z4 X5 Z7 Z8 Z9"),
  (-5.27167171952e-06+0j, "Z3 Z4 X5 Z7 Z9 Z10 Z11"),
  (-4.49753658003e-05+0j, "Z3 Z4 X5 Z7 Z10"),
  (-0.0194272191534+0j, "Z3 Z4 Z5 Z6 Z7"),
  (0.105572510298+0j, "Z3 Z4 Z6 Z7"),
  (-6.84266109475e-05+0j, "Z3 X5 Z7"),
  (-0.0522203241384+0j, "Z3 Z5 X6 Z7 X8"),
  (-0.0572961449899+0j, "Z3 Z5 X6 Z7 X10"),
  (-0.0522203241384+0j, "Z3 Z5 Y6 Z7 Y8"),
  (-0.0572961449899+0j, "Z3 Z5 Y6 Z7 Y10"),
  (0.0268945154414+0j, "Z3 Z5 Z6 Z7"),
  (0.10764230383+0j, "Z3 Z5 Z6 Z7 Z8"),
  (0.222362627968+0j, "Z3 Z5 Z6 Z7 Z8 Z9"),
  (0.165116490832+0j, "Z3 Z5 Z6 Z7 Z9 Z10 Z11"),
  (0.0453203458424+0j, "Z3 Z5 Z6 Z7 Z10"),
  (0.00320165580304+0j, "Z3 Z5 Z7"),
  (6.84266109475e-05+0j, "X4 X5 X6"),
  (-0.00111331120343+0j, "X4 Y5 Y6"),
  (4.59990048893e-05+0j, "X4 Y5 Y6 Z8"),
  (5.34748734677e-05+0j, "X4 Y5 Y6 Z8 Z9"),
  (4.49753658003e-05+0j, "X4 Y5 Y6 Z9 Z10 Z11"),
  (5.27167171952e-06+0j, "X4 Y5 Y6 Z10"),
  (-7.47586857839e-06+0j, "X4 Y5 Z6 Y8 Z9"),
  (-3.97036940808e-05+0j, "X4 Y5 Z6 Z9 Y10 Z11"),
  (-0.0624997294511+0j, "X4 Z5 X6"),
  (-0.0572961451501+0j, "X4 Z5 X10"),
  (-0.0572961451501+0j, "X4 Z9 X10 Z11"),
  (6.84266109475e-05+0j, "Y4 X5 Y6"),
  (0.00111331120343+0j, "Y4 Y5 X6"),
  (-4.59990048893e-05+0j, "Y4 Y5 X6 Z8"),
  (-5.34748734677e-05+0j, "Y4 Y5 X6 Z8 Z9"),
  (-4.49753658003e-05+0j, "Y4 Y5 X6 Z9 Z10 Z11"),
  (-5.27167171952e-06+0j, "Y4 Y5 X6 Z10"),
  (7.47586857839e-06+0j, "Y4 Y5 Z6 X8 Z9"),
  (3.97036940808e-05+0j, "Y4 Y5 Z6 Z9 X10 Z11"),
  (-0.0624997294511+0j, "Y4 Z5 Y6"),
  (-0.0572961451501+0j, "Y4 Z5 Y10"),
  (-0.0572961451501+0j, "Y4 Z9 Y10 Z11"),
  (0.0268945217354+0j, "Z4"),
  (6.84266109475e-05+0j, "Z4 X5 Z6"),
  (7.47586857839e-06+0j, "Z4 Y5 X6 Y8 Z9"),
  (3.97036940808e-05+0j, "Z4 Y5 X6 Z9 Y10 Z11"),
  (-7.47586857839e-06+0j, "Z4 Y5 Y6 X8 Z9"),
  (-3.97036940808e-05+0j, "Z4 Y5 Y6 Z9 X10 Z11"),
  (0.0268945217354+0j, "Z4 Z5"),
  (-0.0194272191534+0j, "Z4 Z5 Z6"),
  (-0.0194672993354+0j, "Z4 Z5 Z8"),
  (0.10553266752+0j, "Z4 Z5 Z8 Z9"),
  (0.165116491098+0j, "Z4 Z5 Z9 Z10 Z11"),
  (0.0453203459483+0j, "Z4 Z5 Z10"),
  (0.105572510298+0j, "Z4 Z6"),
  (0.10553266752+0j, "Z4 Z8"),
  (-0.0194672993354+0j, "Z4 Z8 Z9"),
  (0.0453203459483+0j, "Z4 Z9 Z10 Z11"),
  (0.165116491098+0j, "Z4 Z10"),
  (6.84266110952e-05+0j, "X5"),
  (7.47586857839e-06+0j, "X5 X6 X8"),
  (3.97036940808e-05+0j, "X5 X6 X10"),
  (7.47586857839e-06+0j, "X5 Y6 Y8"),
  (3.97036940808e-05+0j, "X5 Y6 Y10"),
  (-0.00111331120343+0j, "X5 Z6"),
  (5.34748734677e-05+0j, "X5 Z6 Z8"),
  (4.59990048893e-05+0j, "X5 Z6 Z8 Z9"),
  (5.27167171952e-06+0j, "X5 Z6 Z9 Z10 Z11"),
  (4.49753658003e-05+0j, "X5 Z6 Z10"),
  (0.00320165580304+0j, "Z5"),
  (-0.0522203241384+0j, "X6 X8 Z9"),
  (-0.0572961449899+0j, "X6 Z9 X10 Z11"),
  (-0.0522203241384+0j, "Y6 Y8 Z9"),
  (-0.0572961449899+0j, "Y6 Z9 Y10 Z11"),
  (0.0268945154414+0j, "Z6"),
  (0.222362627968+0j, "Z6 Z8"),
  (0.10764230383+0j, "Z6 Z8 Z9"),
  (0.0453203458424+0j, "Z6 Z9 Z10 Z11"),
  (0.165116490832+0j, "Z6 Z10"),
  (-0.0572961449899+0j, "X8 Z9 X10"),
  (-0.0572961449899+0j, "X8 Z9 X10 Z11"),
  (-0.0572961449899+0j, "Y8 Z9 Y10"),
  (-0.0572961449899+0j, "Y8 Z9 Y10 Z11"),
  (0.0268945154414+0j, "Z8"),
  (0.0268945154414+0j, "Z8 Z9"),
  (0.0453203458424+0j, "Z8 Z9 Z10"),
  (0.0453203458424+0j, "Z8 Z9 Z10 Z11"),
  (0.165116490832+0j, "Z8 Z10"),
  (0.165116490832+0j, "Z8 Z10 Z11"),
  (0.00320165580304+0j, "Z9"),
  (0.0180458587532+0j, "Z9 Z10 Z11"),
  (-0.0679170105273+0j, "Z9 Z11"),
  (0.0180458587532+0j, "Z10"),
  (0.0625+0j, "X0 Z1 Z3 Z5 X6 Z7"),
  (0.0625+0j, "X0 Z1 X4 Z5"),
  (0.0625+0j, "X0 Z1 X8 Z9"),
  (0.0625+0j, "X0 Z1 Z9 X10 Z11"),
  (0.0625+0j, "X0 X2"),
  (0.0625+0j, "X0 X2 Z3"),
  (0.0625+0j, "X0 X4"),
  (0.0625+0j, "X0 X6"),
  (0.0625+0j, "X0 X8"),
  (0.0625+0j, "X0 X10"),
  (0.0625+0j, "Y0 Z1 Z3 Z5 Y6 Z7"),
  (0.0625+0j, "Y0 Z1 Y4 Z5"),
  (0.0625+0j, "Y0 Z1 Y8 Z9"),
  (0.0625+0j, "Y0 Z1 Z9 Y10 Z11"),
  (0.0625+0j, "Y0 Y2"),
  (0.0625+0j, "Y0 Y2 Z3"),
  (0.0625+0j, "Y0 Y4"),
  (0.0625+0j, "Y0 Y6"),
  (0.0625+0j, "Y0 Y8"),
  (0.0625+0j, "Y0 Y10"),
  (0.0625+0j, "Z1 X2 Z3 X4 Z5"),
  (-0.0625+0j, "Z1 X2 Z3 X6"),
  (0.0625+0j, "Z1 X2 Z3 X8 Z9"),
  (0.0625+0j, "Z1 X2 Z3 Z9 X10 Z11"),
  (0.0625+0j, "Z1 X2 Z5 X6 Z7"),
  (0.0625+0j, "Z1 Y2 Z3 Y4 Z5"),
  (-0.0625+0j, "Z1 Y2 Z3 Y6"),
  (0.0625+0j, "Z1 Y2 Z3 Y8 Z9"),
  (0.0625+0j, "Z1 Y2 Z3 Z9 Y10 Z11"),
  (0.0625+0j, "Z1 Y2 Z5 Y6 Z7"),
  (-0.0625+0j, "X2 Z3 Z5 X6 Z7"),
  (0.0625+0j, "X2 X4"),
  (0.0625+0j, "X2 X6"),
  (0.0625+0j, "X2 X8"),
  (0.0625+0j, "X2 X10"),
  (-0.0625+0j, "Y2 Z3 Z5 Y6 Z7"),
  (0.0625+0j, "Y2 Y4"),
  (0.0625+0j, "Y2 Y6"),
  (0.0625+0j, "Y2 Y8"),
  (0.0625+0j, "Y2 Y10"),
  (0.0625+0j, "Z3 X4 X6 Z7"),
  (0.0625+0j, "Z3 Y4 Y6 Z7"),
  (0.0625+0j, "Z3 Z5 X6 Z7 X8 Z9"),
  (0.0625+0j, "Z3 Z5 X6 Z7 Z9 X10 Z11"),
  (0.0625+0j, "Z3 Z5 Y6 Z7 Y8 Z9"),
  (0.0625+0j, "Z3 Z5 Y6 Z7 Z9 Y10 Z11"),
  (-0.0625+0j, "X4 Z5 X8"),
  (0.0625+0j, "X4 Z5 X8 Z9"),
  (0.0625+0j, "X4 Z5 Z9 X10 Z11"),
  (0.0625+0j, "X4 X6"),
  (0.0625+0j, "X4 X8"),
  (-0.0625+0j, "X4 X8 Z9"),
  (0.0625+0j, "X4 X10"),
  (-0.0625+0j, "Y4 Z5 Y8"),
  (0.0625+0j, "Y4 Z5 Y8 Z9"),
  (0.0625+0j, "Y4 Z5 Z9 Y10 Z11"),
  (0.0625+0j, "Y4 Y6"),
  (0.0625+0j, "Y4 Y8"),
  (-0.0625+0j, "Y4 Y8 Z9"),
  (0.0625+0j, "Y4 Y10"),
  (0.0625+0j, "X6 X8"),
  (0.0625+0j, "X6 X10"),
  (0.0625+0j, "Y6 Y8"),
  (0.0625+0j, "Y6 Y10"),
  (0.0625+0j, "X8 X10"),
  (0.0625+0j, "X8 X10 Z11"),
  (0.0625+0j, "Y8 Y10"),
  (0.0625+0j, "Y8 Y10 Z11")
 ]

 hamiltonian_terms = [
  (-5.88943612177+0j, ""),
  (-0.00513786576253+0j, "X0 X1 X2 X3 Y7 Y11"),
  (-0.0576538419795+0j, "X0 X1 Z2 X3 Y7 Z9 Y10 X11"),
  (-3.99712202733e-05+0j, "X0 X1 X3 X4 Y5 Y6 Y7 Z9 Y10 X11"),
  (-0.00513786576253+0j, "X0 X1 X3 X4 Y7 Y11"),
  (-3.99712196806e-05+0j, "X0 X1 X3 Y4 Y5 X6 Y7 Z9 Y10 X11"),
  (7.99424399539e-05+0j, "X0 X1 X3 Y4 Y5 Y6 Y7 Z9 X10 X11"),
  (-3.99712195819e-05+0j, "X0 X1 X3 Y4 Y5 Z6 Y7 Y11"),
  (0.00513786576253+0j, "X0 X1 X3 Y4 Z5 Y7 Z9 Z10 X11"),
  (-3.9971220372e-05+0j, "X0 X1 X3 Z4 Y5 Y6 Y7 Y11"),
  (-0.0627917077421+0j, "X0 X1 X3 Z4 Z5 Y7 Z9 Y10 X11"),
  (-0.0576538419795+0j, "X0 X1 X3 Z4 Y7 Z9 Y10 X11"),
  (-3.9971220372e-05+0j, "X0 X1 X3 X5 Y6 Y7 Z9 Z10 X11"),
  (0.00513786577793+0j, "X0 X1 X3 X6 Y7 Y11"),
  (0.0576538432896+0j, "X0 X1 X3 Z6 Y7 Z9 Y10 X11"),
  (0.00513786577793+0j, "X0 X1 X3 Y7 X8 Y11"),
  (-0.00513786577793+0j, "X0 X1 X3 Y7 Y8 Z10 X11"),
  (0.0576538432896+0j, "X0 X1 X3 Y7 Z8 Z9 Y10 X11"),
  (0.0627917090675+0j, "X0 X1 X3 Y7 Z8 Y10 X11"),
  (-3.99712195819e-05+0j, "X0 X1 Y3 Y4 X5 X7 Z9 Z10 X11"),
  (-0.00513786577793+0j, "X0 X1 Y3 Z5 Y6 X7 Z9 Z10 X11"),
  (0.0627917090675+0j, "X0 X1 Y3 Z5 Z6 X7 Z9 Y10 X11"),
  (-3.9971220372e-05+0j, "X0 X1 Z3 Y8 Y9 Z10"),
  (-3.99712202733e-05+0j, "X0 Y1 X2 Y8 Y9 Y10"),
  (-0.00513786576253+0j, "X0 Y1 Y2 Y3 Y7 Z9 Z10 X11"),
  (-3.99712196806e-05+0j, "X0 Y1 Y2 X8 Y9 Y10"),
  (7.99424399539e-05+0j, "X0 Y1 Y2 Y8 Y9 X10"),
  (3.99712195819e-05+0j, "X0 Y1 Y2 Z8 X9 Z11"),
  (-3.99712195819e-05+0j, "X0 Y1 Y2 X9 Z10"),
  (0.0627917077421+0j, "X0 Y1 Z2 Y3 Y7 Z9 Y10 X11"),
  (3.9971220372e-05+0j, "X0 Y1 Z2 Y8 X9 Z11"),
  (-0.0574155885689+0j, "X0 Z1 X2"),
  (-4.03187050846e-05+0j, "X0 Z1 X2 X3 Y7 Y9 X11"),
  (-0.0574155885689+0j, "X0 Z1 X2 Z3"),
  (-0.0574155885689+0j, "X0 Z1 X4"),
  (-4.03187050846e-05+0j, "X0 Z1 Y4 Y5 Z6"),
  (4.03187050846e-05+0j, "X0 Z1 Z4 Y5 Y6"),
  (-0.0574155887634+0j, "X0 Z1 X6"),
  (-0.0574155887634+0j, "X0 Z1 X8"),
  (0.00964356820483+0j, "X0 Z1 X10"),
  (-4.03187050846e-05+0j, "X0 Y2 X3 Y7 Z8 X9 X11"),
  (4.03187050846e-05+0j, "X0 Z2 X3 Y7 Y8 X9 X11"),
  (4.03187050846e-05+0j, "X0 Y3 Y7 X8 X9 X11"),
  (4.03187050846e-05+0j, "X0 Z3 X4 X5 Z7"),
  (-0.0574155887634+0j, "X0 Z3 Z5 X6 Z7"),
  (-0.0574155885689+0j, "X0 X4 Z5"),
  (-4.03187050846e-05+0j, "X0 X5 X6"),
  (-0.0574155887634+0j, "X0 X8 Z9"),
  (0.00964356820483+0j, "X0 Z9 X10 Z11"),
  (-0.00513786576253+0j, "Y0 X1 Y2 X3 Y7 Y11"),
  (0.0576538419795+0j, "Y0 X1 Z2 X3 Y7 Z9 X10 X11"),
  (7.99424399539e-05+0j, "Y0 X1 X3 X4 Y5 X6 Y7 Z9 Y10 X11"),
  (-3.99712196806e-05+0j, "Y0 X1 X3 X4 Y5 Y6 Y7 Z9 X10 X11"),
  (3.99712195819e-05+0j, "Y0 X1 X3 X4 Y5 Z6 Y7 Y11"),
  (-0.00513786576253+0j, "Y0 X1 X3 X4 Z5 Y7 Z9 Z10 X11"),
  (-3.99712202733e-05+0j, "Y0 X1 X3 Y4 Y5 X6 Y7 Z9 X10 X11"),
  (-0.00513786576253+0j, "Y0 X1 X3 Y4 Y7 Y11"),
  (3.9971220372e-05+0j, "Y0 X1 X3 Z4 Y5 X6 Y7 Y11"),
  (0.0627917077421+0j, "Y0 X1 X3 Z4 Z5 Y7 Z9 X10 X11"),
  (0.0576538419795+0j, "Y0 X1 X3 Z4 Y7 Z9 X10 X11"),
  (3.9971220372e-05+0j, "Y0 X1 X3 X5 X6 Y7 Z9 Z10 X11"),
  (0.00513786577793+0j, "Y0 X1 X3 Y6 Y7 Y11"),
  (-0.0576538432896+0j, "Y0 X1 X3 Z6 Y7 Z9 X10 X11"),
  (0.00513786577793+0j, "Y0 X1 X3 Y7 X8 Z10 X11"),
  (0.00513786577793+0j, "Y0 X1 X3 Y7 Y8 Y11"),
  (-0.0576538432896+0j, "Y0 X1 X3 Y7 Z8 Z9 X10 X11"),
  (-0.0627917090675+0j, "Y0 X1 X3 Y7 Z8 X10 X11"),
  (3.99712195819e-05+0j, "Y0 X1 Y3 X4 X5 X7 Z9 Z10 X11"),
  (0.00513786577793+0j, "Y0 X1 Y3 Z5 X6 X7 Z9 Z10 X11"),
  (-0.0627917090675+0j, "Y0 X1 Y3 Z5 Z6 X7 Z9 X10 X11"),
  (3.9971220372e-05+0j, "Y0 X1 Z3 X8 Y9 Z10"),
  (0.00513786576253+0j, "Y0 Y1 X2 Y3 Y7 Z9 Z10 X11"),
  (7.99424399539e-05+0j, "Y0 Y1 X2 X8 Y9 Y10"),
  (-3.99712196806e-05+0j, "Y0 Y1 X2 Y8 Y9 X10"),
  (-3.99712195819e-05+0j, "Y0 Y1 X2 Z8 X9 Z11"),
  (3.99712195819e-05+0j, "Y0 Y1 X2 X9 Z10"),
  (-3.99712202733e-05+0j, "Y0 Y1 Y2 X8 Y9 X10"),
  (-0.0627917077421+0j, "Y0 Y1 Z2 Y3 Y7 Z9 X10 X11"),
  (-3.9971220372e-05+0j, "Y0 Y1 Z2 X8 X9 Z11"),
  (-0.0574155885689+0j, "Y0 Z1 Y2"),
  (-4.03187050846e-05+0j, "Y0 Z1 Y2 X3 Y7 Y9 X11"),
  (-0.0574155885689+0j, "Y0 Z1 Y2 Z3"),
  (4.03187050846e-05+0j, "Y0 Z1 X4 Y5 Z6"),
  (-0.0574155885689+0j, "Y0 Z1 Y4"),
  (-4.03187050846e-05+0j, "Y0 Z1 Z4 Y5 X6"),
  (-0.0574155887634+0j, "Y0 Z1 Y6"),
  (-0.0574155887634+0j, "Y0 Z1 Y8"),
  (0.00964356820483+0j, "Y0 Z1 Y10"),
  (4.03187050846e-05+0j, "Y0 X2 X3 Y7 Z8 X9 X11"),
  (-4.03187050846e-05+0j, "Y0 Z2 X3 Y7 X8 X9 X11"),
  (4.03187050846e-05+0j, "Y0 Y3 Y7 Y8 X9 X11"),
  (4.03187050846e-05+0j, "Y0 Z3 Y4 X5 Z7"),
  (-0.0574155887634+0j, "Y0 Z3 Z5 Y6 Z7"),
  (-0.0574155885689+0j, "Y0 Y4 Z5"),
  (-4.03187050846e-05+0j, "Y0 X5 Y6"),
  (-0.0574155887634+0j, "Y0 Y8 Z9"),
  (0.00964356820483+0j, "Y0 Z9 Y10 Z11"),
  (0.0353817785683+0j, "Z0"),
  (-0.0627917077421+0j, "Z0 X1 Z2 X3 Y7 Y11"),
  (0.00513786576253+0j, "Z0 X1 X3 X4 Z5 Y7 Z9 Y10 X11"),
  (-0.00513786576253+0j, "Z0 X1 X3 Y4 Z5 Y7 Z9 X10 X11"),
  (-0.0576538419795+0j, "Z0 X1 X3 Z4 Z5 Y7 Y11"),
  (-0.0627917077421+0j, "Z0 X1 X3 Z4 Y7 Y11"),
  (3.99712195819e-05+0j, "Z0 X1 X3 X5 X6 Y7 Z9 Y10 X11"),
  (-3.99712195819e-05+0j, "Z0 X1 X3 X5 Y6 Y7 Z9 X10 X11"),
  (3.99712196806e-05+0j, "Z0 X1 X3 X5 Z6 Y7 Y11"),
  (0.0627917090675+0j, "Z0 X1 X3 Z6 Y7 Y11"),
  (-0.00513786577793+0j, "Z0 X1 X3 Y7 X8 Y10 X11"),
  (0.00513786577793+0j, "Z0 X1 X3 Y7 Y8 X10 X11"),
  (0.0576538432896+0j, "Z0 X1 X3 Y7 Z8 Z9 Y11"),
  (0.0627917090675+0j, "Z0 X1 X3 Y7 Z8 Y11"),
  (3.9971220372e-05+0j, "Z0 X1 Y3 X4 X5 X7 Z9 Y10 X11"),
  (-3.9971220372e-05+0j, "Z0 X1 Y3 Y4 X5 X7 Z9 X10 X11"),
  (3.99712202733e-05+0j, "Z0 X1 Y3 Z4 X5 X7 Y11"),
  (-7.99424399539e-05+0j, "Z0 X1 Y3 Y5 X7 Z9 Z10 X11"),
  (-0.00513786577793+0j, "Z0 X1 Y3 Z5 X6 X7 Z9 Y10 X11"),
  (0.00513786577793+0j, "Z0 X1 Y3 Z5 Y6 X7 Z9 X10 X11"),
  (0.0576538432896+0j, "Z0 X1 Y3 Z5 Z6 X7 Y11"),
  (3.99712195819e-05+0j, "Z0 X1 Z3 X8 Y9 Y10"),
  (-3.99712195819e-05+0j, "Z0 X1 Z3 Y8 Y9 X10"),
  (-3.99712196806e-05+0j, "Z0 X1 Z3 Z8 X9 Z11"),
  (7.99424399539e-05+0j, "Z0 X1 Z3 X9 Z10"),
  (-0.00513786576253+0j, "Z0 Y1 X2 Y3 Y7 Z9 Y10 X11"),
  (3.9971220372e-05+0j, "Z0 Y1 X2 X9 Y10"),
  (0.00513786576253+0j, "Z0 Y1 Y2 Y3 Y7 Z9 X10 X11"),
  (-3.9971220372e-05+0j, "Z0 Y1 Y2 X9 X10"),
  (0.0576538419795+0j, "Z0 Y1 Z2 Y3 Y7 Y11"),
  (3.99712202733e-05+0j, "Z0 Y1 Z2 Y9 Z11"),
  (0.0353817785683+0j, "Z0 Z1"),
  (8.25687105096e-05+0j, "Z0 Z1 X2 X3 Y7 Y8 X9 X11"),
  (-8.25687105096e-05+0j, "Z0 Z1 Y2 X3 Y7 X8 X9 X11"),
  (0.0444173434267+0j, "Z0 Z1 Z2"),
  (4.2250005425e-05+0j, "Z0 Z1 Z2 X3 Y7 Y9 X11"),
  (0.0444173434267+0j, "Z0 Z1 Z2 Z3"),
  (-8.25687105096e-05+0j, "Z0 Z1 Y3 Y7 Z8 X9 X11"),
  (-8.25687105096e-05+0j, "Z0 Z1 Z3 Z4 X5 Z7"),
  (0.164332929279+0j, "Z0 Z1 Z3 Z5 Z6 Z7"),
  (4.2250005425e-05+0j, "Z0 Z1 X4 Y5 Y6"),
  (-4.2250005425e-05+0j, "Z0 Z1 Y4 Y5 X6"),
  (0.0444173434267+0j, "Z0 Z1 Z4"),
  (0.164332931996+0j, "Z0 Z1 Z4 Z5"),
  (8.25687105096e-05+0j, "Z0 Z1 X5 Z6"),
  (0.0444173405159+0j, "Z0 Z1 Z6"),
  (0.0444173405159+0j, "Z0 Z1 Z8"),
  (0.164332929279+0j, "Z0 Z1 Z8 Z9"),
  (0.108933535657+0j, "Z0 Z1 Z9 Z10 Z11"),
  (0.0560771038615+0j, "Z0 Z1 Z10"),
  (4.2250005425e-05+0j, "Z0 X2 X3 Y7 Y8 X9 X11"),
  (-4.2250005425e-05+0j, "Z0 Y2 X3 Y7 X8 X9 X11"),
  (0.164332931996+0j, "Z0 Z2"),
  (8.25687105096e-05+0j, "Z0 Z2 X3 Y7 Y9 X11"),
  (0.164332931996+0j, "Z0 Z2 Z3"),
  (-4.2250005425e-05+0j, "Z0 Y3 Y7 Z8 X9 X11"),
  (-4.2250005425e-05+0j, "Z0 Z3 Z4 X5 Z7"),
  (0.0444173405159+0j, "Z0 Z3 Z5 Z6 Z7"),
  (8.25687105096e-05+0j, "Z0 X4 Y5 Y6"),
  (-8.25687105096e-05+0j, "Z0 Y4 Y5 X6"),
  (0.164332931996+0j, "Z0 Z4"),
  (0.0444173434267+0j, "Z0 Z4 Z5"),
  (4.2250005425e-05+0j, "Z0 X5 Z6"),
  (0.164332929279+0j, "Z0 Z6"),
  (0.164332929279+0j, "Z0 Z8"),
  (0.0444173405159+0j, "Z0 Z8 Z9"),
  (0.0560771038615+0j, "Z0 Z9 Z10 Z11"),
  (0.108933535657+0j, "Z0 Z10"),
  (-3.9971220372e-05+0j, "X1 X2 Z8 Y9 Y10"),
  (3.9971220372e-05+0j, "X1 Y2 Z8 Y9 X10"),
  (0.0576538419795+0j, "X1 Z2 Y3 Y7 Z9 Z10 X11"),
  (-3.99712195819e-05+0j, "X1 Z2 X8 Y9 Y10"),
  (3.99712195819e-05+0j, "X1 Z2 Y8 Y9 X10"),
  (7.99424399539e-05+0j, "X1 Z2 Z8 X9 Z11"),
  (-3.99712196806e-05+0j, "X1 Z2 X9 Z10"),
  (0.00513786576253+0j, "Y1 X2 X3 Y7 Z9 X10 X11"),
  (0.00513786576253+0j, "Y1 Y2 X3 Y7 Z9 Y10 X11"),
  (0.0627917077421+0j, "Y1 Z2 X3 Y7 Z9 Z10 X11"),
  (3.9971220372e-05+0j, "Y1 X3 X4 Y5 Z6 Y7 Z9 Y10 X11"),
  (0.00513786576253+0j, "Y1 X3 X4 Y7 Z9 X10 X11"),
  (-3.9971220372e-05+0j, "Y1 X3 Y4 Y5 Z6 Y7 Z9 X10 X11"),
  (0.00513786576253+0j, "Y1 X3 Y4 Y7 Z9 Y10 X11"),
  (3.99712195819e-05+0j, "Y1 X3 Z4 Y5 X6 Y7 Z9 Y10 X11"),
  (-3.99712195819e-05+0j, "Y1 X3 Z4 Y5 Y6 Y7 Z9 X10 X11"),
  (7.99424399539e-05+0j, "Y1 X3 Z4 Y5 Z6 Y7 Y11"),
  (0.0576538419795+0j, "Y1 X3 Z4 Z5 Y7 Z9 Z10 X11"),
  (0.0627917077421+0j, "Y1 X3 Z4 Y7 Z9 Z10 X11"),
  (3.99712202733e-05+0j, "Y1 X3 X5 Z6 Y7 Z9 Z10 X11"),
  (-0.00513786577793+0j, "Y1 X3 X6 Y7 Z9 X10 X11"),
  (-0.00513786577793+0j, "Y1 X3 Y6 Y7 Z9 Y10 X11"),
  (-0.0627917090675+0j, "Y1 X3 Z6 Y7 Z9 Z10 X11"),
  (-0.00513786577793+0j, "Y1 X3 Y7 X8 Z9 X10 X11"),
  (-0.00513786577793+0j, "Y1 X3 Y7 Y8 Z9 Y10 X11"),
  (-0.0627917090675+0j, "Y1 X3 Y7 Z8 Z9 Z10 X11"),
  (-0.0576538432896+0j, "Y1 X3 Y7 Z8 Z10 X11"),
  (3.99712196806e-05+0j, "Y1 Y3 Z4 X5 X7 Z9 Z10 X11"),
  (-0.0576538432896+0j, "Y1 Y3 Z5 Z6 X7 Z9 Z10 X11"),
  (3.99712202733e-05+0j, "Y1 Z3 Z8 Y9 Z10"),
  (-0.0698454335601+0j, "Z1"),
  (1.75256898549e-07+0j, "Z1 X2 X3 X4 Y5 Y6 Y7 Y8 X9 X11"),
  (7.47586856813e-06+0j, "Z1 X2 X3 X4 Y7 Y9 X11"),
  (1.98315640747e-05+0j, "Z1 X2 X3 Y4 Y5 X6 Y7 Y8 X9 X11"),
  (-2.00109641057e-05+0j, "Z1 X2 X3 Y4 Y5 Y6 Y7 X8 X9 X11"),
  (2.00399660327e-05+0j, "Z1 X2 X3 Y4 Y5 Z6 Y7 Y9 X11"),
  (-7.47586856813e-06+0j, "Z1 X2 X3 Y4 Z5 Y7 Z8 X9 X11"),
  (5.34748733406e-05+0j, "Z1 X2 X3 Z4 Z5 Y7 Y8 X9 X11"),
  (4.59990047724e-05+0j, "Z1 X2 X3 Z4 Y7 Y8 X9 X11"),
  (2.04258825597e-07+0j, "Z1 X2 X3 X5 Z6 Y7 Y8 X9 X11"),
  (7.47586857839e-06+0j, "Z1 X2 X3 X6 Y7 Y9 X11"),
  (4.59990048893e-05+0j, "Z1 X2 X3 Z6 Y7 Y8 X9 X11"),
  (6.84266110952e-05+0j, "Z1 X2 X3 Y7 X8 Y9 X11"),
  (5.27167171952e-06+0j, "Z1 X2 X3 Y7 Y8 X9 Z10 X11"),
  (-0.00111331120343+0j, "Z1 X2 X3 Y7 Y8 X9 X11"),
  (-4.49753658003e-05+0j, "Z1 X2 X3 Y7 Y8 Y9 Z10 Y11"),
  (3.97036940808e-05+0j, "Z1 X2 X3 Y7 Z8 Y9 Y10 Y11"),
  (3.97036940808e-05+0j, "Z1 X2 X3 Y7 Y9 X10 X11"),
  (2.00399660327e-05+0j, "Z1 X2 Y3 Y4 X5 X7 Z8 X9 X11"),
  (-2.04258825597e-07+0j, "Z1 X2 Y3 Z4 X5 X7 Y8 X9 X11"),
  (-7.47586857839e-06+0j, "Z1 X2 Y3 Z5 Y6 X7 Z8 X9 X11"),
  (5.34748734677e-05+0j, "Z1 X2 Y3 Z5 Z6 X7 Y8 X9 X11"),
  (-0.0522203241384+0j, "Z1 X2 Z3 X4"),
  (7.47586856813e-06+0j, "Z1 X2 Z3 Y4 Y5 Z6"),
  (-7.47586856813e-06+0j, "Z1 X2 Z3 Z4 Y5 Y6"),
  (-0.0624997294511+0j, "Z1 X2 Z3 X8"),
  (-0.0572961451501+0j, "Z1 X2 Z3 X10"),
  (-2.00109641057e-05+0j, "Z1 Y2 X3 X4 Y5 X6 Y7 Y8 X9 X11"),
  (1.98315640747e-05+0j, "Z1 Y2 X3 X4 Y5 Y6 Y7 X8 X9 X11"),
  (-2.00399660327e-05+0j, "Z1 Y2 X3 X4 Y5 Z6 Y7 Y9 X11"),
  (7.47586856813e-06+0j, "Z1 Y2 X3 X4 Z5 Y7 Z8 X9 X11"),
  (1.75256898549e-07+0j, "Z1 Y2 X3 Y4 Y5 X6 Y7 X8 X9 X11"),
  (7.47586856813e-06+0j, "Z1 Y2 X3 Y4 Y7 Y9 X11"),
  (-5.34748733406e-05+0j, "Z1 Y2 X3 Z4 Z5 Y7 X8 X9 X11"),
  (-4.59990047724e-05+0j, "Z1 Y2 X3 Z4 Y7 X8 X9 X11"),
  (-2.04258825597e-07+0j, "Z1 Y2 X3 X5 Z6 Y7 X8 X9 X11"),
  (7.47586857839e-06+0j, "Z1 Y2 X3 Y6 Y7 Y9 X11"),
  (-4.59990048893e-05+0j, "Z1 Y2 X3 Z6 Y7 X8 X9 X11"),
  (-5.27167171952e-06+0j, "Z1 Y2 X3 Y7 X8 X9 Z10 X11"),
  (0.00111331120343+0j, "Z1 Y2 X3 Y7 X8 X9 X11"),
  (4.49753658003e-05+0j, "Z1 Y2 X3 Y7 X8 Y9 Z10 Y11"),
  (6.84266110952e-05+0j, "Z1 Y2 X3 Y7 Y8 Y9 X11"),
  (-3.97036940808e-05+0j, "Z1 Y2 X3 Y7 Z8 Y9 X10 Y11"),
  (3.97036940808e-05+0j, "Z1 Y2 X3 Y7 Y9 Y10 X11"),
  (-2.00399660327e-05+0j, "Z1 Y2 Y3 X4 X5 X7 Z8 X9 X11"),
  (2.04258825597e-07+0j, "Z1 Y2 Y3 Z4 X5 X7 X8 X9 X11"),
  (7.47586857839e-06+0j, "Z1 Y2 Y3 Z5 X6 X7 Z8 X9 X11"),
  (-5.34748734677e-05+0j, "Z1 Y2 Y3 Z5 Z6 X7 X8 X9 X11"),
  (-7.47586856813e-06+0j, "Z1 Y2 Z3 X4 Y5 Z6"),
  (-0.0522203241384+0j, "Z1 Y2 Z3 Y4"),
  (7.47586856813e-06+0j, "Z1 Y2 Z3 Z4 Y5 X6"),
  (-0.0624997294511+0j, "Z1 Y2 Z3 Y8"),
  (-0.0572961451501+0j, "Z1 Y2 Z3 Y10"),
  (2.04258825597e-07+0j, "Z1 Z2 X3 X4 Y5 Y6 Y7 Y9 X11"),
  (-7.47586856813e-06+0j, "Z1 Z2 X3 X4 Z5 Y7 Y8 X9 X11"),
  (-2.04258825597e-07+0j, "Z1 Z2 X3 Y4 Y5 X6 Y7 Y9 X11"),
  (7.47586856813e-06+0j, "Z1 Z2 X3 Y4 Z5 Y7 X8 X9 X11"),
  (4.59990047724e-05+0j, "Z1 Z2 X3 Z4 Z5 Y7 Y9 X11"),
  (5.34748733406e-05+0j, "Z1 Z2 X3 Z4 Y7 Y9 X11"),
  (-2.00399660327e-05+0j, "Z1 Z2 X3 X5 X6 Y7 Y8 X9 X11"),
  (2.00399660327e-05+0j, "Z1 Z2 X3 X5 Y6 Y7 X8 X9 X11"),
  (-1.98315640747e-05+0j, "Z1 Z2 X3 X5 Z6 Y7 Y9 X11"),
  (5.34748734677e-05+0j, "Z1 Z2 X3 Z6 Y7 Y9 X11"),
  (-3.97036940808e-05+0j, "Z1 Z2 X3 Y7 X8 Y9 Y10 Y11"),
  (3.97036940808e-05+0j, "Z1 Z2 X3 Y7 Y8 Y9 X10 Y11"),
  (6.84266110952e-05+0j, "Z1 Z2 X3 Y7 Z8 Y9 X11"),
  (5.27167171952e-06+0j, "Z1 Z2 X3 Y7 X9 Z10 Y11"),
  (4.49753658003e-05+0j, "Z1 Z2 X3 Y7 Y9 Z10 X11"),
  (-0.00111331120343+0j, "Z1 Z2 X3 Y7 Y9 X11"),
  (-1.75256898549e-07+0j, "Z1 Z2 Y3 Z4 X5 X7 Y9 X11"),
  (2.00109641057e-05+0j, "Z1 Z2 Y3 Y5 X7 Z8 X9 X11"),
  (-7.47586857839e-06+0j, "Z1 Z2 Y3 Z5 X6 X7 Y8 X9 X11"),
  (7.47586857839e-06+0j, "Z1 Z2 Y3 Z5 Y6 X7 X8 X9 X11"),
  (4.59990048893e-05+0j, "Z1 Z2 Y3 Z5 Z6 X7 Y9 X11"),
  (0.0268945217354+0j, "Z1 Z2 Z3"),
  (5.34748733406e-05+0j, "Z1 Z2 Z3 X4 Y5 Y6"),
  (-5.34748733406e-05+0j, "Z1 Z2 Z3 Y4 Y5 X6"),
  (0.10764230383+0j, "Z1 Z2 Z3 Z4"),
  (0.222362627968+0j, "Z1 Z2 Z3 Z4 Z5"),
  (4.59990047724e-05+0j, "Z1 Z2 Z3 X5 Z6"),
  (-0.0194672993354+0j, "Z1 Z2 Z3 Z6"),
  (-0.0194272191534+0j, "Z1 Z2 Z3 Z8"),
  (0.105572510298+0j, "Z1 Z2 Z3 Z8 Z9"),
  (0.165116491098+0j, "Z1 Z2 Z3 Z9 Z10 Z11"),
  (0.0453203459483+0j, "Z1 Z2 Z3 Z10"),
  (-4.59990047724e-05+0j, "Z1 Z2 Z4 X5 Z7"),
  (0.10553266752+0j, "Z1 Z2 Z5 Z6 Z7"),
  (6.84266109475e-05+0j, "Z1 X3 Y7 Y9 X11"),
  (0.00320165580304+0j, "Z1 Z3"),
  (-6.84266109475e-05+0j, "X2 Y3 Y7 X8 X9 X11"),
  (-7.47586856813e-06+0j, "X2 Z3 X4 X5 Z7"),
  (-0.0522203241384+0j, "X2 X4 Z5"),
  (7.47586856813e-06+0j, "X2 X5 X6"),
  (-0.0624997294511+0j, "X2 X8 Z9"),
  (-0.0572961451501+0j, "X2 Z9 X10 Z11"),
  (-6.84266109475e-05+0j, "Y2 Y3 Y7 Y8 X9 X11"),
  (-7.47586856813e-06+0j, "Y2 Z3 Y4 X5 Z7"),
  (-0.0522203241384+0j, "Y2 Y4 Z5"),
  (7.47586856813e-06+0j, "Y2 X5 Y6"),
  (-0.0624997294511+0j, "Y2 Y8 Z9"),
  (-0.0572961451501+0j, "Y2 Z9 Y10 Z11"),
  (0.0268945217354+0j, "Z2"),
  (-6.84266109475e-05+0j, "Z2 Y3 Y7 Z8 X9 X11"),
  (-5.34748733406e-05+0j, "Z2 Z3 Z4 X5 Z7"),
  (-0.0194672993354+0j, "Z2 Z3 Z5 Z6 Z7"),
  (4.59990047724e-05+0j, "Z2 X4 Y5 Y6"),
  (-4.59990047724e-05+0j, "Z2 Y4 Y5 X6"),
  (0.222362627968+0j, "Z2 Z4"),
  (0.10764230383+0j, "Z2 Z4 Z5"),
  (5.34748733406e-05+0j, "Z2 X5 Z6"),
  (0.10553266752+0j, "Z2 Z6"),
  (0.105572510298+0j, "Z2 Z8"),
  (-0.0194272191534+0j, "Z2 Z8 Z9"),
  (0.0453203459483+0j, "Z2 Z9 Z10 Z11"),
  (0.165116491098+0j, "Z2 Z10"),
  (1.98315640747e-05+0j, "X3 Z4 X5 X7 Z8 X9 X11"),
  (4.59990048893e-05+0j, "X3 Z5 Z6 X7 Z8 X9 X11"),
  (-2.04258825597e-07+0j, "Y3 X4 Y5 Y6 Y7 Z8 X9 X11"),
  (-7.47586856813e-06+0j, "Y3 X4 Y7 X8 X9 X11"),
  (2.04258825597e-07+0j, "Y3 Y4 Y5 X6 Y7 Z8 X9 X11"),
  (-7.47586856813e-06+0j, "Y3 Y4 Y7 Y8 X9 X11"),
  (-2.00399660327e-05+0j, "Y3 Z4 Y5 X6 Y7 Y8 X9 X11"),
  (2.00399660327e-05+0j, "Y3 Z4 Y5 Y6 Y7 X8 X9 X11"),
  (-2.00109641057e-05+0j, "Y3 Z4 Y5 Z6 Y7 Y9 X11"),
  (-4.59990047724e-05+0j, "Y3 Z4 Z5 Y7 Z8 X9 X11"),
  (-5.34748733406e-05+0j, "Y3 Z4 Y7 Z8 X9 X11"),
  (-1.75256898549e-07+0j, "Y3 X5 Z6 Y7 Z8 X9 X11"),
  (-7.47586857839e-06+0j, "Y3 X6 Y7 X8 X9 X11"),
  (-7.47586857839e-06+0j, "Y3 Y6 Y7 Y8 X9 X11"),
  (-5.34748734677e-05+0j, "Y3 Z6 Y7 Z8 X9 X11"),
  (-3.97036940808e-05+0j, "Y3 Y7 X8 X9 X10 X11"),
  (-3.97036940808e-05+0j, "Y3 Y7 Y8 X9 Y10 X11"),
  (-4.49753658003e-05+0j, "Y3 Y7 Z8 X9 Z10 X11"),
  (0.00111331120343+0j, "Y3 Y7 Z8 X9 X11"),
  (5.27167171952e-06+0j, "Y3 Y7 Z8 Y9 Z10 Y11"),
  (-6.84266110952e-05+0j, "Y3 Y7 X9 X11"),
  (-6.84266110952e-05+0j, "Z3 X4 X5 X6 Z7"),
  (-7.47586857839e-06+0j, "Z3 X4 X5 Z7 X8"),
  (-3.97036940808e-05+0j, "Z3 X4 X5 Z7 X10"),
  (-0.0624997294511+0j, "Z3 X4 Z5 X6 Z7"),
  (-6.84266110952e-05+0j, "Z3 Y4 X5 Y6 Z7"),
  (-7.47586857839e-06+0j, "Z3 Y4 X5 Z7 Y8"),
  (-3.97036940808e-05+0j, "Z3 Y4 X5 Z7 Y10"),
  (-0.0624997294511+0j, "Z3 Y4 Z5 Y6 Z7"),
  (-6.84266110952e-05+0j, "Z3 Z4 X5 Z6 Z7"),
  (0.00111331120343+0j, "Z3 Z4 X5 Z7"),
  (-5.34748734677e-05+0j, "Z3 Z4 X5 Z7 Z8"),
  (-4.59990048893e-05+0j, "Z3 Z4 X5 Z7 Z8 Z9"),
  (-5.27167171952e-06+0j, "Z3 Z4 X5 Z7 Z9 Z10 Z11"),
  (-4.49753658003e-05+0j, "Z3 Z4 X5 Z7 Z10"),
  (-0.0194272191534+0j, "Z3 Z4 Z5 Z6 Z7"),
  (0.105572510298+0j, "Z3 Z4 Z6 Z7"),
  (-6.84266109475e-05+0j, "Z3 X5 Z7"),
  (-0.0522203241384+0j, "Z3 Z5 X6 Z7 X8"),
  (-0.0572961449899+0j, "Z3 Z5 X6 Z7 X10"),
  (-0.0522203241384+0j, "Z3 Z5 Y6 Z7 Y8"),
  (-0.0572961449899+0j, "Z3 Z5 Y6 Z7 Y10"),
  (0.0268945154414+0j, "Z3 Z5 Z6 Z7"),
  (0.10764230383+0j, "Z3 Z5 Z6 Z7 Z8"),
  (0.222362627968+0j, "Z3 Z5 Z6 Z7 Z8 Z9"),
  (0.165116490832+0j, "Z3 Z5 Z6 Z7 Z9 Z10 Z11"),
  (0.0453203458424+0j, "Z3 Z5 Z6 Z7 Z10"),
  (0.00320165580304+0j, "Z3 Z5 Z7"),
  (6.84266109475e-05+0j, "X4 X5 X6"),
  (-0.00111331120343+0j, "X4 Y5 Y6"),
  (4.59990048893e-05+0j, "X4 Y5 Y6 Z8"),
  (5.34748734677e-05+0j, "X4 Y5 Y6 Z8 Z9"),
  (4.49753658003e-05+0j, "X4 Y5 Y6 Z9 Z10 Z11"),
  (5.27167171952e-06+0j, "X4 Y5 Y6 Z10"),
  (-7.47586857839e-06+0j, "X4 Y5 Z6 Y8 Z9"),
  (-3.97036940808e-05+0j, "X4 Y5 Z6 Z9 Y10 Z11"),
  (-0.0624997294511+0j, "X4 Z5 X6"),
  (-0.0572961451501+0j, "X4 Z5 X10"),
  (-0.0572961451501+0j, "X4 Z9 X10 Z11"),
  (6.84266109475e-05+0j, "Y4 X5 Y6"),
  (0.00111331120343+0j, "Y4 Y5 X6"),
  (-4.59990048893e-05+0j, "Y4 Y5 X6 Z8"),
  (-5.34748734677e-05+0j, "Y4 Y5 X6 Z8 Z9"),
  (-4.49753658003e-05+0j, "Y4 Y5 X6 Z9 Z10 Z11"),
  (-5.27167171952e-06+0j, "Y4 Y5 X6 Z10"),
  (7.47586857839e-06+0j, "Y4 Y5 Z6 X8 Z9"),
  (3.97036940808e-05+0j, "Y4 Y5 Z6 Z9 X10 Z11"),
  (-0.0624997294511+0j, "Y4 Z5 Y6"),
  (-0.0572961451501+0j, "Y4 Z5 Y10"),
  (-0.0572961451501+0j, "Y4 Z9 Y10 Z11"),
  (0.0268945217354+0j, "Z4"),
  (6.84266109475e-05+0j, "Z4 X5 Z6"),
  (7.47586857839e-06+0j, "Z4 Y5 X6 Y8 Z9"),
  (3.97036940808e-05+0j, "Z4 Y5 X6 Z9 Y10 Z11"),
  (-7.47586857839e-06+0j, "Z4 Y5 Y6 X8 Z9"),
  (-3.97036940808e-05+0j, "Z4 Y5 Y6 Z9 X10 Z11"),
  (0.0268945217354+0j, "Z4 Z5"),
  (-0.0194272191534+0j, "Z4 Z5 Z6"),
  (-0.0194672993354+0j, "Z4 Z5 Z8"),
  (0.10553266752+0j, "Z4 Z5 Z8 Z9"),
  (0.165116491098+0j, "Z4 Z5 Z9 Z10 Z11"),
  (0.0453203459483+0j, "Z4 Z5 Z10"),
  (0.105572510298+0j, "Z4 Z6"),
  (0.10553266752+0j, "Z4 Z8"),
  (-0.0194672993354+0j, "Z4 Z8 Z9"),
  (0.0453203459483+0j, "Z4 Z9 Z10 Z11"),
  (0.165116491098+0j, "Z4 Z10"),
  (6.84266110952e-05+0j, "X5"),
  (7.47586857839e-06+0j, "X5 X6 X8"),
  (3.97036940808e-05+0j, "X5 X6 X10"),
  (7.47586857839e-06+0j, "X5 Y6 Y8"),
  (3.97036940808e-05+0j, "X5 Y6 Y10"),
  (-0.00111331120343+0j, "X5 Z6"),
  (5.34748734677e-05+0j, "X5 Z6 Z8"),
  (4.59990048893e-05+0j, "X5 Z6 Z8 Z9"),
  (5.27167171952e-06+0j, "X5 Z6 Z9 Z10 Z11"),
  (4.49753658003e-05+0j, "X5 Z6 Z10"),
  (0.00320165580304+0j, "Z5"),
  (-0.0522203241384+0j, "X6 X8 Z9"),
  (-0.0572961449899+0j, "X6 Z9 X10 Z11"),
  (-0.0522203241384+0j, "Y6 Y8 Z9"),
  (-0.0572961449899+0j, "Y6 Z9 Y10 Z11"),
  (0.0268945154414+0j, "Z6"),
  (0.222362627968+0j, "Z6 Z8"),
  (0.10764230383+0j, "Z6 Z8 Z9"),
  (0.0453203458424+0j, "Z6 Z9 Z10 Z11"),
  (0.165116490832+0j, "Z6 Z10"),
  (-0.0572961449899+0j, "X8 Z9 X10"),
  (-0.0572961449899+0j, "X8 Z9 X10 Z11"),
  (-0.0572961449899+0j, "Y8 Z9 Y10"),
  (-0.0572961449899+0j, "Y8 Z9 Y10 Z11"),
  (0.0268945154414+0j, "Z8"),
  (0.0268945154414+0j, "Z8 Z9"),
  (0.0453203458424+0j, "Z8 Z9 Z10"),
  (0.0453203458424+0j, "Z8 Z9 Z10 Z11"),
  (0.165116490832+0j, "Z8 Z10"),
  (0.165116490832+0j, "Z8 Z10 Z11"),
  (0.00320165580304+0j, "Z9"),
  (0.0180458587532+0j, "Z9 Z10 Z11"),
  (-0.0679170105273+0j, "Z9 Z11"),
  (0.0180458587532+0j, "Z10"),
  (0.0625+0j, "X0 Z1 Z3 Z5 X6 Z7"),
  (0.0625+0j, "X0 Z1 X4 Z5"),
  (0.0625+0j, "X0 Z1 X8 Z9"),
  (0.0625+0j, "X0 Z1 Z9 X10 Z11"),
  (0.0625+0j, "X0 X2"),
  (0.0625+0j, "X0 X2 Z3"),
  (0.0625+0j, "X0 X4"),
  (0.0625+0j, "X0 X6"),
  (0.0625+0j, "X0 X8"),
  (0.0625+0j, "X0 X10"),
  (0.0625+0j, "Y0 Z1 Z3 Z5 Y6 Z7"),
  (0.0625+0j, "Y0 Z1 Y4 Z5"),
  (0.0625+0j, "Y0 Z1 Y8 Z9"),
  (0.0625+0j, "Y0 Z1 Z9 Y10 Z11"),
  (0.0625+0j, "Y0 Y2"),
  (0.0625+0j, "Y0 Y2 Z3"),
  (0.0625+0j, "Y0 Y4"),
  (0.0625+0j, "Y0 Y6"),
  (0.0625+0j, "Y0 Y8"),
  (0.0625+0j, "Y0 Y10"),
  (0.0625+0j, "Z1 X2 Z3 X4 Z5"),
  (-0.0625+0j, "Z1 X2 Z3 X6"),
  (0.0625+0j, "Z1 X2 Z3 X8 Z9"),
  (0.0625+0j, "Z1 X2 Z3 Z9 X10 Z11"),
  (0.0625+0j, "Z1 X2 Z5 X6 Z7"),
  (0.0625+0j, "Z1 Y2 Z3 Y4 Z5"),
  (-0.0625+0j, "Z1 Y2 Z3 Y6"),
  (0.0625+0j, "Z1 Y2 Z3 Y8 Z9"),
  (0.0625+0j, "Z1 Y2 Z3 Z9 Y10 Z11"),
  (0.0625+0j, "Z1 Y2 Z5 Y6 Z7"),
  (-0.0625+0j, "X2 Z3 Z5 X6 Z7"),
  (0.0625+0j, "X2 X4"),
  (0.0625+0j, "X2 X6"),
  (0.0625+0j, "X2 X8"),
  (0.0625+0j, "X2 X10"),
  (-0.0625+0j, "Y2 Z3 Z5 Y6 Z7"),
  (0.0625+0j, "Y2 Y4"),
  (0.0625+0j, "Y2 Y6"),
  (0.0625+0j, "Y2 Y8"),
  (0.0625+0j, "Y2 Y10"),
  (0.0625+0j, "Z3 X4 X6 Z7"),
  (0.0625+0j, "Z3 Y4 Y6 Z7"),
  (0.0625+0j, "Z3 Z5 X6 Z7 X8 Z9"),
  (0.0625+0j, "Z3 Z5 X6 Z7 Z9 X10 Z11"),
  (0.0625+0j, "Z3 Z5 Y6 Z7 Y8 Z9"),
  (0.0625+0j, "Z3 Z5 Y6 Z7 Z9 Y10 Z11"),
  (-0.0625+0j, "X4 Z5 X8"),
  (0.0625+0j, "X4 Z5 X8 Z9"),
  (0.0625+0j, "X4 Z5 Z9 X10 Z11"),
  (0.0625+0j, "X4 X6"),
  (0.0625+0j, "X4 X8"),
  (-0.0625+0j, "X4 X8 Z9"),
  (0.0625+0j, "X4 X10"),
  (-0.0625+0j, "Y4 Z5 Y8"),
  (0.0625+0j, "Y4 Z5 Y8 Z9"),
  (0.0625+0j, "Y4 Z5 Z9 Y10 Z11"),
  (0.0625+0j, "Y4 Y6"),
  (0.0625+0j, "Y4 Y8"),
  (-0.0625+0j, "Y4 Y8 Z9"),
  (0.0625+0j, "Y4 Y10"),
  (0.0625+0j, "X6 X8"),
  (0.0625+0j, "X6 X10"),
  (0.0625+0j, "Y6 Y8"),
  (0.0625+0j, "Y6 Y10"),
  (0.0625+0j, "X8 X10"),
  (0.0625+0j, "X8 X10 Z11"),
  (0.0625+0j, "Y8 Y10"),
  (0.0625+0j, "Y8 Y10 Z11")
 ]

# Number of qubits
 num_qubits = 12

 # Process the Hamiltonian
 processed_hamiltonian = process_hamiltonian(hamiltonian_terms, num_qubits)

#  print(processed_hamiltonian)
# Print the result
# for term in processed_hamiltonian:
#     print(term)

 pauli_to_index = {"I": 0, "X": 1, "Y": 2, "Z": 3}

 # Initialize a zero array for the coefficients (4^n terms)
 dim = 4**num_qubits
 coefficients = np.zeros(dim, dtype=complex)
 
 # Define the Hamiltonian terms
 terms = processed_hamiltonian
 
 # Populate the coefficients array
 for coeff, pauli_ops in terms:
  # Default: identity operators for all qubits
  full_ops = ["I"] * num_qubits
  for i, op in enumerate(pauli_ops):
   full_ops[i] = op  

  # Compute the index for the term
  index = sum(pauli_to_index[op] * (4**(num_qubits - i - 1)) for i, op in enumerate(full_ops))  
  # Assign the coefficient to the appropriate index
  coefficients[index] = coeff

 h_alpha = coefficients.real
 print(f"N2 molecule H_alpha: {h_alpha}")
 print(f"Length of H_alpha: {len(h_alpha)}")

 nspin = 12
 H = []
 active = [0,1,2,3,4,5,6,7,8,9,10,11]
 active = np.asarray(active)
 nact   = len(active)
 imap,gmap = pauli_action(active,nspin)
 print(f"Pauli action-imap: {imap}")
 print(f"Pauli action-imap_shape: {imap.shape}")



 H.append((active,h_alpha,imap,gmap))
 return H