# Put the terms in hamiltonian inside terms below
terms = [
    (-0.3709108589500001, ""),
    (0.019740609500000002, "X0 X1 X3 X4"),
    (0.019740609500000002, "X0 X1 Y3 Y4 Z5"),
    (-0.0199020831, "X0 X1 Z3 Y4 Y5"),
    (-0.0199020831, "X0 X1 X4 X5"),
    (0.03406610945, "X0 Y1 Y2 X3 Y4 Y5"),
    (-0.03406610945, "X0 Y1 Y2 Y3 Y4 X5"),
    (-0.0337612592, "X0 Y1 Y2 Z3 X4"),
    (0.0337612592, "X0 Y1 Y2 X4 Z5"),
    (-0.03406610945, "X0 Z1 X3"),
    (0.03406610945, "X0 Z1 X3 Z4"),
    (0.0337612592, "X0 Z1 Z4 X5"),
    (-0.0337612592, "X0 Z1 X5"),
    (0.027718352199999997, "X0 X2"),
    (0.03406610945, "X0 X3"),
    (-0.03406610945, "X0 X3 Z4"),
    (-0.0337612592, "X0 Z4 X5"),
    (0.0337612592, "X0 X5"),
    (-0.03406610945, "Y0 Y1 X2 X3 Y4 Y5"),
    (0.03406610945, "Y0 Y1 X2 Y3 Y4 X5"),
    (0.0337612592, "Y0 Y1 X2 Z3 X4"),
    (-0.0337612592, "Y0 Y1 X2 X4 Z5"),
    (0.019740609500000002, "Y0 Y1 Z2 X3 X4"),
    (0.019740609500000002, "Y0 Y1 Z2 Y3 Y4 Z5"),
    (-0.0199020831, "Y0 Y1 Z2 Z3 Y4 Y5"),
    (-0.0199020831, "Y0 Y1 Z2 X4 X5"),
    (0.027718352200000004, "Y0 Z1 Y2"),
    (0.2241531948000004, "Z0"),
    (-0.0337612592, "Z0 X1 X3 Y4 Y5"),
    (0.0337612592, "Z0 X1 Y3 Y4 X5"),
    (0.03709430705, "Z0 X1 Z3 X4"),
    (-0.03709430705, "Z0 X1 X4 Z5"),
    (-0.0199020831, "Z0 Y1 Y2 X3 X4"),
    (-0.0199020831, "Z0 Y1 Y2 Y3 Y4 Z5"),
    (0.02007680635, "Z0 Y1 Y2 Z3 Y4 Y5"),
    (0.02007680635, "Z0 Y1 Y2 X4 X5"),
    (-0.0038839750499999603, "Z0 Z1"),
    (0.21081273514999999, "Z0 Z1 Z2"),
    (0.12613611505, "Z0 Z1 Z3"),
    (0.12834316575, "Z0 Z1 Z3 Z4"),
    (0.12907256025, "Z0 Z1 Z4 Z5"),
    (0.12340606295, "Z0 Z1 Z5"),
    (0.1840482588, "Z0 Z2"),
    (0.12969344345, "Z0 Z3"),
    (0.12613611505, "Z0 Z3 Z4"),
    (0.12722408805, "Z0 Z4 Z5"),
    (0.12613611505, "Z0 Z5"),
    (-0.0199020831, "X1 X2 X3 X4"),
    (-0.0199020831, "X1 X2 Y3 Y4 Z5"),
    (0.02007680635, "X1 X2 Z3 Y4 Y5"),
    (0.02007680635, "X1 X2 X4 X5"),
    (0.0337612592, "X1 Z2 X3 Y4 Y5"),
    (-0.0337612592, "X1 Z2 Y3 Y4 X5"),
    (-0.03709430705, "X1 Z2 Z3 X4"),
    (0.03709430705, "X1 Z2 X4 Z5"),
    (0.1840482588, "Z1"),
    (-0.0337612592, "Z1 X2 X3"),
    (0.0337612592, "Z1 X2 X3 Z4"),
    (0.03709430705, "Z1 X2 Z4 X5"),
    (-0.03709430705, "Z1 X2 X5"),
    (-0.27788003180000004, "Z1 Z2"),
    (0.12722408805, "Z1 Z2 Z3"),
    (0.12907256025, "Z1 Z2 Z3 Z4"),
    (0.1347139307, "Z1 Z2 Z4 Z5"),
    (0.12907256025, "Z1 Z2 Z5"),
    (0.0337612592, "X2 X3"),
    (-0.0337612592, "X2 X3 Z4"),
    (-0.03709430705, "X2 Z4 X5"),
    (0.03709430705, "X2 X5"),
    (-0.0038839750499998216, "Z2"),
    (0.12613611505, "Z2 Z3"),
    (0.12340606295, "Z2 Z3 Z4"),
    (0.12907256025, "Z2 Z4 Z5"),
    (0.12834316575, "Z2 Z5"),
    (0.027718352199999997, "X3 X5"),
    (0.027718352200000004, "Y3 Z4 Y5"),
    (0.2241531948000004, "Z3"),
    (-0.0038839750499999603, "Z3 Z4"),
    (0.21081273514999999, "Z3 Z4 Z5"),
    (0.1840482588, "Z3 Z5"),
    (0.1840482588, "Z4"),
    (-0.2778800318000001, "Z4 Z5"),
    (-0.00388397504999978, "Z5")
]

num_qubits = 6  

coefficients = []
labels = []

# Iterate over terms and construct labels
for coeff, term in terms:
    coefficients.append(coeff)  # Store coefficient

    # Start with identity 'I' for all qubits
    label = ["I"] * num_qubits  

    # Split term into individual operators
    if term:
        for op in term.split():
            pauli, index = op[0], int(op[1])  # Extract Pauli operator and qubit index
            label[-index] = pauli  # Assign the operator at correct position (reverse indexing)

    labels.append("".join(label))  # Convert list to string and store

# Print the results
print("Coefficients:", coefficients)
print("Labels:", labels)
